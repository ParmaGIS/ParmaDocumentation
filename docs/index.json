{
  "dev_guide/documentation/Setup.html": {
    "href": "dev_guide/documentation/Setup.html",
    "title": "Установка DocFX | site",
    "keywords": "Установка DocFX Установите DocFX с помощью NuGet Убедитесь, что вы установили инструмент генерации документации DocFX с помощью NuGet. В командной строке выполните: dotnet tool install -g docfx.console Инициализация проекта с помощью DocFX Перейдите в корневую папку вашего решения (solution) в командной строке и выполните: docfx init -q Это создаст файлы конфигурации для генерации документации. Редактирование файлов конфигурации Отредактируйте файл docfx.json. Укажите пути к вашим проектам в разделе src. Замените \"path/to/your/project1.sln\" соответствующими путями к проектам. Скачивание Node.js Скачать Node.js, а также установите модуль js-yaml с помощью npm: npm install js-yaml Установка плагина toc.exetension Нужно перейти по ссылке и скачать файл toc.extension.js и добавить его в папку проекта. https://github.com/deriglazoff/documentation/tree/main/templates/toc Сборка DocFX Выполните следующие команды для сборки документации: docfx metadata node toc.extension.js './api/toc.yml' docfx build Открытие сгенерированной документации После завершения процесса генерации документации, откройте сгенерированный сайт в папке _site. Вы можете открыть файл index.html в браузере. Добавление дополнительных страниц сайта Для добавления страниц, нужно прописать в главный toc.yml название страницы а так же ссылку на файлы этой страницы, вот пример: - name: Tutorial href: tutor/ После чего создать папку с названием указанным в href основного toc.yml. Затем внутри папки создать файл toc.yml и прописать то, что вам нужно что бы отображалось на сайте, вот пример: - name: Tutorial items: - name: Work with documentation items: - name: Setup href: Settings.md После если вы используете uid, то в папке где находится toc.yml вашей страницы нужно добавить файлы с соответсвующим названием формата .yml. Вот пример: items: - uid: Tutor id: Tutor name: Tutorial type: Namespace Если вы используете href, то нужно будет создать файл формата .md. Сборка Docfx с дополнительными страницами После добавления и написания файлов новой страницы нужно в коммандной строке перейти в проект, где находится docfx.json и выполнить следующую команду: docfx build"
  },
  "dev_guide/documentation/Structure.html": {
    "href": "dev_guide/documentation/Structure.html",
    "title": "Описание структуры | site",
    "keywords": "Описание структуры Документация состоит из трех основных частей API - описывает структуру классов и методы их взаимодействия, Dev Guide - содержит инструкции по настройке различных систем для корректной работы всего проекта, и по использованию программных систем ParmaGIS User Guide - содержит инструкции по работе с приложением и инструментами Разработка документации При написании документации необходимо сохранять ее структуру: API генерируется автоматически на основе комментарий в коде Для Dev Guide и User Guide необходимо организовывать toc.yml и структуру папок вручную User Guide делится на инструкции для ParmaGIS и инструкции для всех инструментов, документирование каждого инструмента необходимо осуществлять в отдельной папке Разделение Dev Guid должно быть логически оправданным и удобным для поиска и использования статей Api Формирование документации кода производится через исходный код посредствам комментариев. Комментарии оформляются в соответствии с описанием Майкрософт, например: /// <summary> /// Представляет базовую реализацию интерфейса <see cref=\"IInfoCatalog{T}\"/> /// </summary> /// <typeparam name=\"T\">Тип элементов каталога.</typeparam> public abstract class InfoCatalogBase<T> : IInfoCatalog<T> Более подробно о тэгах документации Microsoft Guides Dev Guide как и User Guide пишутся вручную. Текс документации оформляется в файлах с расширением .md. Для более удобного редактирования можно использовать VS Code. В нем можно удобно управлять гитом проекта с документацией и, благодаря расширениям упростить написание текста документации. Список удобных расширений: Code Spell Checker - для проверки правописания Markdownlint - для проверки структуры .md файла Markdown All in One - для упрощения написания .md файла Каждый .md файл должен лежать в логически обоснованной директории. То есть файл с инструкциями по определенному инструменту для ParmaGIS должен лежать в папке user_guid\\tools\\ <название инструмента>\\ <название инструмента>.md. При добавлении файлов документации, необходимо указывать название узла name и ссылку href на них в соответствующем toc.yml. Через items указывается список дочерних элементов. Пример такого toc.yml: - name: Инструкции для пользователя items: - name: ParmaGIS - name: Инструменты items: - name: Инструмент отчетов href: tools\\Report\\ReportTool.md Более подробно об этом можно узнать в документации DocFX."
  },
  "dev_guide/migration/ParmaMigrator.html": {
    "href": "dev_guide/migration/ParmaMigrator.html",
    "title": "ParmaMigrator | site",
    "keywords": "ParmaMigrator Установка зависимостей Необходимо установить python 3.10, далее переходим в папку с файлами с этого репозитория и прописываем в CMD/PowerShell: pip install -r requirements.txt Пример использования скрипта python main.py --mtp=all-MigrationDB1.xlsx --src=postgresql://postgres:postgres@localhost:5434/backup1 --dst=postgresql://postgres:postgres@localhost:5434/new Помощь (сделал на английском по привычке) python main.py --help Параметры mtp - (migration file path) путь до файла с таблицей миграции в формате: SourceSchema SourceTable SourceSelect SourceColumns TargetSchema TargetTable TargetColumns SourceSelect может содержать запрос к связанным таблицам для заполнения таблицы в конечной таблице новой БД прим.: select t_wood_floor.primarykey, t_wood_floor.trunk_count, t_wood_floor.age, t_wood_floor.hight, t_wood_floor.evaluation, t_wood_floor.stand from public.t_wood_floor inner join public.t_breed_wood_floor on t_wood_floor.primarykey = t_breed_wood_floor.wood_floor where t_wood_floor.type_floor = '52aebf9b-0d14-4979-89f9-97c3cba7e817' src - (source) адрес исходной базы данных (из которой переносим) в формате: postgresql://<Логин>:<Пароль>@<Хост>:<Порт>/<Название БД> dst - (destination) адрес конечной базы данных (куда переносим) в формате: postgresql://<Логин>:<Пароль>@<Хост>:<Порт>/<Название БД> Вывод В консоль выводится список перенесенных таблиц, в формате: <Название таблицы> migrated successfully По окончанию переноса выводится сообщение: Migration done!"
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | site",
    "keywords": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | site",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | site",
    "keywords": "Introduction"
  },
  "user_guide/tools/Report/ReportTool.html": {
    "href": "user_guide/tools/Report/ReportTool.html",
    "title": "Инструмент отчётов | site",
    "keywords": "Инструмент отчётов Создание проекта Перед созданием проекта необходимо скачать нужные вам xsd схемы. Чтобы создать проект, нужно нажать «Проект -> Создать проект» в верхнем меню . После этого откроется окно создания проекта, которое имеет 4 поля для заполнения: Имя проекта Расположение Схема отчёта Дополнительные схемы Имя проекта – название, которое требуется задать проекту. Расположение – путь к директории, куда требуется сохранить проект. Схема отчёта – путь до схемы отчёта. Дополнительные схемы – пути до файлов дополнительных схем. После заполнения всех полей нужно нажать кнопку «Создать проект». При успешном создании проекта будет открыт отчёт. Если при создании проекта возникнут ошибки, они будут отображены внизу окна создания проекта. Открытие проекта Чтобы открыть ранее созданный проект, нужно нажать «Проект -> Открыть проект» в верхнем меню. Затем нужно выбрать архив с проектом. После этого откроется проект. После открытия проекта на экране появится сгенерированный интерфейс отчёта. Если открылся интерфейс не всего отчёта, а одной из его сущностей, нужно нажать \"Проект -> Выбрать сущность\" в верхнем меню и выбрать сущность отчёта. Загрузка данных отчёта Чтобы загрузить данные отчёта, нужно нажать «Отчёт -> Загрузить отчёт» в верхнем меню и выбрать нужный файл. Заполненные отчёты имеют формат .xml. После загрузки данных отчёта, поля интерфейса будут заполнены. Сохранение данных отчёта Чтобы сохранить данные отчёта, нужно нажать кнопку «Отчёт -> Сохранить отчёт с валидацией» в верхнем меню. После этого начнется валидация отчёта в соответствие с xsd схемой. Если валидация прошла успешно, нужно выбрать путь для сохранения отчёта и отчёт сохранится. Если при валидации произошли ошибки, будет оповещено о несоответствиях заполненного отчёта с xsd схемой. Редактирование макета Интерфейс состоит из множества блоков с заголовками и полями для ввода. Чтобы редактировать макет интерфейса, нужно перейти в режим редактирования. Для этого нужно нажать кнопку «Макет -> Редактировать макет» в верхнем меню. Чтобы выйти из режима редактирования, нужно нажать кнопку «Макет -> Закончить редактирование». В режиме редактирования можно переименовывать блоки интерфейса, изменять их порядок, размер и объединять в группы. Для изменения порядка блоков интерфейса нужно перетащить левой кнопкой мыши один блок на другой (При перетаскивании на группу, нужно перетаскивать на её заголовок. Иначе элемент добавится в группу). Для изменения размеров блока нужно нажать на нужный элемент. После этого появятся границы, за которые можно расстягивать элемент, тем самым изменяя его размер. Чтобы сохранить макет, нужно нажать кнопку «Макет -> Сохранить макет» в верхнем меню. При последующих открытиях проекта, сохраненный макет будет автоматически загружаться. Чтобы отменить изменения макета, нужно нажать кнопку «Макет -> Отменить изменения» в верхнем меню. После этого все изменения сбросятся до момента последнего сохранения макета. Обозреватель свойств Для настройки элементов также доступно окно \"Обозреватель свойств\". Чтобы его открыть, нужно в режиме редактирования нажать на любой элемент интерфейса. В обозревателе свойств доступна возможность изменять имя элемента интерфейса и задавать ему точный размер. При установке опции \"Автоматическая ширина / Автоматическая высота\" элемент будет расстягиваться до контента который он содержит. Для групп в обозревателе свойств также есть возможность создания новой группы и удаления данной группы. Группы Группа - это элемент интерфейса который может содержать другие элементы интерфейса. Внутри каждой группы имеется возможность создать другую группу. Для этого нужно открыть обозреватель свойств нужной группы и нажать кнопку «Создать группу». Чтобы добавить блок интерфейса в группу, нужно перетащить нужный блок внутрь группы. Чтобы удалить блок интерфейса из группы, нужно вытащить его в другую группу. Чтобы удалить группу, нужно открыть обозреватель свойств группы и нажать кнопку «Удалить группу». После удаления группы все её элементы будут вынесены в родительский элемент этой группы."
  }
}