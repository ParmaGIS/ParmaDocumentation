### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  id: SelectionManager
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection
  children:
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection(System.String)
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource},ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider``1(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource})
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource,System.String,System.Boolean)
  - ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[],System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: SelectionManager
  nameWithType: SelectionManager
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SelectionManager
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 15
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public class SelectionManager
    content.vb: Public Class SelectionManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource},ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource},ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  id: RegisterSelectionProvider(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource},ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: RegisterSelectionProvider(Predicate<SelectionSource>, ISelectionProvider)
  nameWithType: SelectionManager.RegisterSelectionProvider(Predicate<SelectionSource>, ISelectionProvider)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(System.Predicate<ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource>, ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegisterSelectionProvider
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 30
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public static void RegisterSelectionProvider(Predicate<SelectionSource> condition, ISelectionProvider provider)
    parameters:
    - id: condition
      type: System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource}
    - id: provider
      type: ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider
    content.vb: Public Shared Sub RegisterSelectionProvider(condition As Predicate(Of SelectionSource), provider As ISelectionProvider)
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider*
  nameWithType.vb: SelectionManager.RegisterSelectionProvider(Predicate(Of SelectionSource), ISelectionProvider)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(System.Predicate(Of ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource), ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider)
  name.vb: RegisterSelectionProvider(Predicate(Of SelectionSource), ISelectionProvider)
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider``1(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource})
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider``1(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource})
  id: RegisterSelectionProvider``1(System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource})
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: RegisterSelectionProvider<T>(Predicate<SelectionSource>)
  nameWithType: SelectionManager.RegisterSelectionProvider<T>(Predicate<SelectionSource>)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider<T>(System.Predicate<ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource>)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegisterSelectionProvider
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 35
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: 'public static void RegisterSelectionProvider<T>(Predicate<SelectionSource> condition) where T : class, ISelectionProvider'
    parameters:
    - id: condition
      type: System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub RegisterSelectionProvider(Of T As {Class, ISelectionProvider})(condition As Predicate(Of SelectionSource))
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider*
  nameWithType.vb: SelectionManager.RegisterSelectionProvider(Of T)(Predicate(Of SelectionSource))
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider(Of T)(System.Predicate(Of ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource))
  name.vb: RegisterSelectionProvider(Of T)(Predicate(Of SelectionSource))
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection(System.String)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection(System.String)
  id: OpenSelection(System.String)
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: OpenSelection(string)
  nameWithType: SelectionManager.OpenSelection(string)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection(string)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OpenSelection
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 61
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public Task<SelectionFile> OpenSelection(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile}
    content.vb: Public Function OpenSelection(path As String) As Task(Of SelectionFile)
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection*
  nameWithType.vb: SelectionManager.OpenSelection(String)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection(String)
  name.vb: OpenSelection(String)
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[],System.String,System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[],System.String,System.Boolean)
  id: SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[],System.String,System.Boolean)
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: SaveSelection(SelectionSource[], string, bool)
  nameWithType: SelectionManager.SaveSelection(SelectionSource[], string, bool)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[], string, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveSelection
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 78
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public Task<SelectionFile> SaveSelection(SelectionSource[] selections, string path, bool rewriteAll = false)
    parameters:
    - id: selections
      type: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[]
    - id: path
      type: System.String
    - id: rewriteAll
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile}
    content.vb: Public Function SaveSelection(selections As SelectionSource(), path As String, rewriteAll As Boolean = False) As Task(Of SelectionFile)
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection*
  nameWithType.vb: SelectionManager.SaveSelection(SelectionSource(), String, Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource(), String, Boolean)
  name.vb: SaveSelection(SelectionSource(), String, Boolean)
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource,System.String,System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource,System.String,System.Boolean)
  id: SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource,System.String,System.Boolean)
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: SaveSelection(SelectionSource, string, bool)
  nameWithType: SelectionManager.SaveSelection(SelectionSource, string, bool)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource, string, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveSelection
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 116
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public Task<SelectionFile> SaveSelection(SelectionSource selections, string path, bool rewriteAll = false)
    parameters:
    - id: selections
      type: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
    - id: path
      type: System.String
    - id: rewriteAll
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile}
    content.vb: Public Function SaveSelection(selections As SelectionSource, path As String, rewriteAll As Boolean = False) As Task(Of SelectionFile)
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection*
  nameWithType.vb: SelectionManager.SaveSelection(SelectionSource, String, Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource, String, Boolean)
  name.vb: SaveSelection(SelectionSource, String, Boolean)
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  id: SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager
  langs:
  - csharp
  - vb
  name: SaveSelection(SelectionFile)
  nameWithType: SelectionManager.SaveSelection(SelectionFile)
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection(ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveSelection
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/Selection/SelectionManager.cs
    startLine: 121
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.Selection
  syntax:
    content: public Task SaveSelection(SelectionFile selection)
    parameters:
    - id: selection
      type: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveSelection(selection As SelectionFile) As Task
  overload: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection*
references:
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection
  commentId: N:ParmaGIS.WPF.Modules.Data.UI.Selection
  href: ParmaGIS.html
  name: ParmaGIS.WPF.Modules.Data.UI.Selection
  nameWithType: ParmaGIS.WPF.Modules.Data.UI.Selection
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data
    name: Data
    href: ParmaGIS.WPF.Modules.Data.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Data.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection
    name: Selection
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data
    name: Data
    href: ParmaGIS.WPF.Modules.Data.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Data.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection
    name: Selection
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.html#ParmaGIS_WPF_Modules_Data_UI_Selection_SelectionManager_RegisterSelectionProvider_System_Predicate_ParmaGIS_WPF_Modules_Data_UI_Selection_SelectionSource__ParmaGIS_WPF_Modules_Data_UI_Selection_ISelectionProvider_
  name: RegisterSelectionProvider
  nameWithType: SelectionManager.RegisterSelectionProvider
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.RegisterSelectionProvider
- uid: System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource}
  commentId: T:System.Predicate{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<SelectionSource>
  nameWithType: Predicate<SelectionSource>
  fullName: System.Predicate<ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource>
  nameWithType.vb: Predicate(Of SelectionSource)
  fullName.vb: System.Predicate(Of ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource)
  name.vb: Predicate(Of SelectionSource)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
    name: SelectionSource
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
    name: SelectionSource
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  - name: )
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider.html
  name: ISelectionProvider
  nameWithType: ISelectionProvider
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.ISelectionProvider
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.html#ParmaGIS_WPF_Modules_Data_UI_Selection_SelectionManager_OpenSelection_System_String_
  name: OpenSelection
  nameWithType: SelectionManager.OpenSelection
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.OpenSelection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SelectionFile>
  nameWithType: Task<SelectionFile>
  fullName: System.Threading.Tasks.Task<ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile>
  nameWithType.vb: Task(Of SelectionFile)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile)
  name.vb: Task(Of SelectionFile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
    name: SelectionFile
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
    name: SelectionFile
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.html#ParmaGIS_WPF_Modules_Data_UI_Selection_SelectionManager_SaveSelection_ParmaGIS_WPF_Modules_Data_UI_Selection_SelectionSource___System_String_System_Boolean_
  name: SaveSelection
  nameWithType: SelectionManager.SaveSelection
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionManager.SaveSelection
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[]
  isExternal: true
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  name: SelectionSource[]
  nameWithType: SelectionSource[]
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource[]
  nameWithType.vb: SelectionSource()
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource()
  name.vb: SelectionSource()
  spec.csharp:
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
    name: SelectionSource
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
    name: SelectionSource
    href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource.html
  name: SelectionSource
  nameWithType: SelectionSource
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionSource
- uid: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
  parent: ParmaGIS.WPF.Modules.Data.UI.Selection
  href: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile.html
  name: SelectionFile
  nameWithType: SelectionFile
  fullName: ParmaGIS.WPF.Modules.Data.UI.Selection.SelectionFile
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
