### YamlMime:ManagedReference
items:
- uid: Common.Document.Types.ApplicantDocumentProvidedType
  commentId: T:Common.Document.Types.ApplicantDocumentProvidedType
  id: ApplicantDocumentProvidedType
  parent: Common.Document.Types
  children:
  - Common.Document.Types.ApplicantDocumentProvidedType.DocDate
  - Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
  - Common.Document.Types.ApplicantDocumentProvidedType.Issuer
  - Common.Document.Types.ApplicantDocumentProvidedType.Name
  - Common.Document.Types.ApplicantDocumentProvidedType.Number
  - Common.Document.Types.ApplicantDocumentProvidedType.Series
  langs:
  - csharp
  - vb
  name: ApplicantDocumentProvidedType
  nameWithType: ApplicantDocumentProvidedType
  fullName: Common.Document.Types.ApplicantDocumentProvidedType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApplicantDocumentProvidedType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 296
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: <p>Документ, предоставленный заявителем</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ApplicantDocumentProvidedType
    content.vb: >-
      <Serializable>

      Public Class ApplicantDocumentProvidedType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Name
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.Name
  id: Name
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApplicantDocumentProvidedType.Name
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Name
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Name
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 311
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Наименование</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      [Required]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      <Required>

      Public Property Name As String
  overload: Common.Document.Types.ApplicantDocumentProvidedType.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.ApplicantDocumentProvidedType.DocDate
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.DocDate
  id: DocDate
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: DocDate
  nameWithType: ApplicantDocumentProvidedType.DocDate
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.DocDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DocDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 324
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Дата выдачи</p>

    <p>Тип Дата в формате ГГГГ-ММ-ДД (2100-01-01 - 1900-01-01)</p>

    <p>Minimum inclusive value: 1900-01-01.</p>

    <p>Maximum inclusive value: 2100-01-01.</p>
  example: []
  syntax:
    content: >-
      [Range(typeof(DateTime), "1900-01-01", "2100-01-01")]

      public DateTime DocDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Range(GetType(Date), "1900-01-01", "2100-01-01")>

      Public Property DocDate As Date
  overload: Common.Document.Types.ApplicantDocumentProvidedType.DocDate*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)
    arguments:
    - type: System.Type
      value: System.DateTime
    - type: System.String
      value: 1900-01-01
    - type: System.String
      value: 2100-01-01
- uid: Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
  id: DocDateSpecified
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: DocDateSpecified
  nameWithType: ApplicantDocumentProvidedType.DocDateSpecified
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DocDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 332
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: <p>Gets or sets a value indicating whether the DocDate property is specified.</p>
  example: []
  syntax:
    content: public bool DocDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DocDateSpecified As Boolean
  overload: Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified*
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Issuer
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.Issuer
  id: Issuer
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: ApplicantDocumentProvidedType.Issuer
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Issuer
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Issuer
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 341
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Кем выдан</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      public string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      Public Property Issuer As String
  overload: Common.Document.Types.ApplicantDocumentProvidedType.Issuer*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Series
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.Series
  id: Series
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: Series
  nameWithType: ApplicantDocumentProvidedType.Series
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Series
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Series
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 353
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Серия</p>

    <p>Тип Строка длиной от 1 до 25 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 25.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(25)]

      public string Series { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(25)>

      Public Property Series As String
  overload: Common.Document.Types.ApplicantDocumentProvidedType.Series*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 25
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Number
  commentId: P:Common.Document.Types.ApplicantDocumentProvidedType.Number
  id: Number
  parent: Common.Document.Types.ApplicantDocumentProvidedType
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: ApplicantDocumentProvidedType.Number
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Number
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Number
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 365
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Номер</p>

    <p>Тип Строка длиной от 1 до 50 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string Number { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property Number As String
  overload: Common.Document.Types.ApplicantDocumentProvidedType.Number*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
references:
- uid: Common.Document.Types
  commentId: N:Common.Document.Types
  href: Common.html
  name: Common.Document.Types
  nameWithType: Common.Document.Types
  fullName: Common.Document.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Document
    name: Document
    href: Common.Document.html
  - name: .
  - uid: Common.Document.Types
    name: Types
    href: Common.Document.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Document
    name: Document
    href: Common.Document.html
  - name: .
  - uid: Common.Document.Types
    name: Types
    href: Common.Document.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Name*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.Name
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_Name
  name: Name
  nameWithType: ApplicantDocumentProvidedType.Name
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Common.Document.Types.ApplicantDocumentProvidedType.DocDate*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.DocDate
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_DocDate
  name: DocDate
  nameWithType: ApplicantDocumentProvidedType.DocDate
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.DocDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_DocDateSpecified
  name: DocDateSpecified
  nameWithType: ApplicantDocumentProvidedType.DocDateSpecified
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.DocDateSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Issuer*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.Issuer
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_Issuer
  name: Issuer
  nameWithType: ApplicantDocumentProvidedType.Issuer
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Issuer
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Series*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.Series
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_Series
  name: Series
  nameWithType: ApplicantDocumentProvidedType.Series
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Series
- uid: Common.Document.Types.ApplicantDocumentProvidedType.Number*
  commentId: Overload:Common.Document.Types.ApplicantDocumentProvidedType.Number
  href: Common.Document.Types.ApplicantDocumentProvidedType.html#Common_Document_Types_ApplicantDocumentProvidedType_Number
  name: Number
  nameWithType: ApplicantDocumentProvidedType.Number
  fullName: Common.Document.Types.ApplicantDocumentProvidedType.Number
