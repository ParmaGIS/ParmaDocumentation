### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  commentId: T:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  id: SettingsRepositoryBase`2
  parent: ParmaGIS.Modules.Data.Space.Settings
  children:
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync``1(`0,`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync``1(`0,`0[],System.Boolean,``0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync``1(`0,`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync``1
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0,`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0,`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync``1(`0,`0)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync(`1)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync(`1)
  - ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: SettingsRepositoryBase<TObjectId, TSettingsItem>
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SettingsRepositoryBase
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  syntax:
    content: 'public abstract class SettingsRepositoryBase<TObjectId, TSettingsItem> : ISettingsRepository where TSettingsItem : class, ISettingsItem'
    typeParameters:
    - id: TObjectId
    - id: TSettingsItem
    content.vb: Public MustInherit Class SettingsRepositoryBase(Of TObjectId, TSettingsItem As {Class, ISettingsItem}) Implements ISettingsRepository
  inheritance:
  - System.Object
  derivedClasses:
  - ParmaGIS.Modules.Data.Space.DAL.DALSettingsRepositoryBase`2
  implements:
  - ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem)
  name.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync``1(`0,`0[],System.Boolean,``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync``1(`0,`0[],System.Boolean,``0)
  id: ForEachSubjectAsync``1(`0,`0[],System.Boolean,``0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: ForEachSubjectAsync<T>(TObjectId, TObjectId[], bool, T)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.ForEachSubjectAsync<T>(TObjectId, TObjectId[], bool, T)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.ForEachSubjectAsync<T>(TObjectId, TObjectId[], bool, T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForEachSubjectAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 19
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Для каждого субъекта из массива ищет элемент настроек.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<Dictionary<TObjectId, T?>>> ForEachSubjectAsync<T>(TObjectId scopeId, TObjectId[] subjectsId, bool defaultIfNotSet, T defaultSettings = null) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области.
    - id: subjectsId
      type: '{TObjectId}[]'
      description: Субъекты настроек, для которых нужно найти элементы настроек.
    - id: defaultIfNotSet
      type: System.Boolean
      description: Если значение <code>true</code>, то в случае отсутствия элемента настроек будет осуществляться поиск значения по умолчанию, если оно не задано в <code class="paramref">defaultSettings</code>.
    - id: defaultSettings
      type: '{T}'
      description: Элемент настроек по умолчанию.
    typeParameters:
    - id: T
      description: Тип элементов настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{System.Collections.Generic.Dictionary{{TObjectId},{T}}}}
      description: Словарь настроек для субъектов.
    content.vb: Public MustOverride Function ForEachSubjectAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId, subjectsId As TObjectId(), defaultIfNotSet As Boolean, defaultSettings As T = Nothing) As Task(Of RepoResponse(Of Dictionary(Of TObjectId, T)))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).ForEachSubjectAsync(Of T)(TObjectId, TObjectId(), Boolean, T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).ForEachSubjectAsync(Of T)(TObjectId, TObjectId(), Boolean, T)
  name.vb: ForEachSubjectAsync(Of T)(TObjectId, TObjectId(), Boolean, T)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0)
  id: GetSettingsAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsAsync<T>(TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 27
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает элемент настроек по его типу и уникальному идентификатору.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetSettingsAsync<T>(TObjectId id) where T : class, TSettingsItem'
    parameters:
    - id: id
      type: '{TObjectId}'
      description: Уникальный идентификатор элемента.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function GetSettingsAsync(Of T As {Class, TSettingsItem})(id As TObjectId) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync(Of T)(TObjectId)
  name.vb: GetSettingsAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync``1(`0)
  id: GetSettingsForScopeAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsForScopeAsync<T>(TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForScopeAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForScopeAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsForScopeAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 35
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает все настройки для указанной области.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T[]>> GetSettingsForScopeAsync<T>(TObjectId scopeId) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    typeParameters:
    - id: T
      description: Тип элементов настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}[]}}
      description: Массив элементов.
    content.vb: Public MustOverride Function GetSettingsForScopeAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId) As Task(Of RepoResponse(Of T()))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForScopeAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForScopeAsync(Of T)(TObjectId)
  name.vb: GetSettingsForScopeAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0)
  id: GetSettingsForSubjectAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsForSubjectAsync<T>(TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsForSubjectAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 43
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает все настройки для указанного субъекта.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T[]>> GetSettingsForSubjectAsync<T>(TObjectId subjectId) where T : class, TSettingsItem'
    parameters:
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъктов.
    typeParameters:
    - id: T
      description: Тип элементов настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}[]}}
      description: Массив элементов.
    content.vb: Public MustOverride Function GetSettingsForSubjectAsync(Of T As {Class, TSettingsItem})(subjectId As TObjectId) As Task(Of RepoResponse(Of T()))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync(Of T)(TObjectId)
  name.vb: GetSettingsForSubjectAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync``1(`0,`0)
  id: GetSettingsForSubjectAsync``1(`0,`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsForSubjectAsync<T>(TObjectId, TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync<T>(TObjectId, TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync<T>(TObjectId, TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsForSubjectAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 52
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает все настройки для указанной области и субъекта.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T[]>> GetSettingsForSubjectAsync<T>(TObjectId scopeId, TObjectId subjectId) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}[]}}
      description: Массив элементов настроек.
    content.vb: Public MustOverride Function GetSettingsForSubjectAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId, subjectId As TObjectId) As Task(Of RepoResponse(Of T()))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync(Of T)(TObjectId, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync(Of T)(TObjectId, TObjectId)
  name.vb: GetSettingsForSubjectAsync(Of T)(TObjectId, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync``1
  id: GetDefaultSettingsAsync``1
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetDefaultSettingsAsync<T>()
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetDefaultSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 59
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает элемент настройки по умолчанию, то есть уникальный идентификатор субъекта и области равны значению по умолчанию.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetDefaultSettingsAsync<T>() where T : class, TSettingsItem'
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function GetDefaultSettingsAsync(Of T As {Class, TSettingsItem})() As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsAsync(Of T)()
  name.vb: GetDefaultSettingsAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync``1(`0)
  id: GetDefaultSettingsForScopeAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetDefaultSettingsForScopeAsync<T>(TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForScopeAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForScopeAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetDefaultSettingsForScopeAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 67
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает значение по умолчанию для области настроек, то есть уникальный идентификатор субъекта равен значению по умолчанию.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetDefaultSettingsForScopeAsync<T>(TObjectId scopeId) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function GetDefaultSettingsForScopeAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForScopeAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForScopeAsync(Of T)(TObjectId)
  name.vb: GetDefaultSettingsForScopeAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync``1(`0)
  id: GetDefaultSettingsForSubjectAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetDefaultSettingsForSubjectAsync<T>(TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForSubjectAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForSubjectAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetDefaultSettingsForSubjectAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 75
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает значение по умолчанию для субъекта настроек, то есть уникальный идентификатор области равен значению по умолчанию
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetDefaultSettingsForSubjectAsync<T>(TObjectId subjectId) where T : class, TSettingsItem'
    parameters:
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function GetDefaultSettingsForSubjectAsync(Of T As {Class, TSettingsItem})(subjectId As TObjectId) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForSubjectAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForSubjectAsync(Of T)(TObjectId)
  name.vb: GetDefaultSettingsForSubjectAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync``1(`0,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync``1(`0,`0)
  id: GetSettingsOrDefaultAsync``1(`0,`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsOrDefaultAsync<T>(TObjectId, TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsOrDefaultAsync<T>(TObjectId, TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsOrDefaultAsync<T>(TObjectId, TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsOrDefaultAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 84
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает элемент настроек или значение по умолчанию для субъекта в области.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetSettingsOrDefaultAsync<T>(TObjectId scopeId, TObjectId subjectId) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элементов настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function GetSettingsOrDefaultAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId, subjectId As TObjectId) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsOrDefaultAsync(Of T)(TObjectId, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsOrDefaultAsync(Of T)(TObjectId, TObjectId)
  name.vb: GetSettingsOrDefaultAsync(Of T)(TObjectId, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync``1(`0,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync``1(`0,`0)
  id: GetAllSettingsAsync``1(`0,`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetAllSettingsAsync<T>(TObjectId, TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetAllSettingsAsync<T>(TObjectId, TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetAllSettingsAsync<T>(TObjectId, TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetAllSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 93
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает все настроек для указаной области и субъекта настроек.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T[]>> GetAllSettingsAsync<T>(TObjectId scopeId, TObjectId subjectId) where T : TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элементов настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}[]}}
      description: Массив элементов настроек.
    content.vb: Public MustOverride Function GetAllSettingsAsync(Of T As TSettingsItem)(scopeId As TObjectId, subjectId As TObjectId) As Task(Of RepoResponse(Of T()))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetAllSettingsAsync(Of T)(TObjectId, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetAllSettingsAsync(Of T)(TObjectId, TObjectId)
  name.vb: GetAllSettingsAsync(Of T)(TObjectId, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync``1(`0,`0)
  id: GetSettingsAsync``1(`0,`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: GetSettingsAsync<T>(TObjectId, TObjectId)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync<T>(TObjectId, TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync<T>(TObjectId, TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 102
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Возвращает элемент настроек для указанной области и субъекта настроек.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T?>> GetSettingsAsync<T>(TObjectId scopeId, TObjectId subjectId) where T : TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Тип элемента настроек.
    content.vb: Public MustOverride Function GetSettingsAsync(Of T As TSettingsItem)(scopeId As TObjectId, subjectId As TObjectId) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync(Of T)(TObjectId, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync(Of T)(TObjectId, TObjectId)
  name.vb: GetSettingsAsync(Of T)(TObjectId, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync(`1)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync(`1)
  id: InsertSettingsAsync(`1)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: InsertSettingsAsync(TSettingsItem)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.InsertSettingsAsync(TSettingsItem)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.InsertSettingsAsync(TSettingsItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 109
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Добавляет элемент настроек в репозиторий.
  example: []
  syntax:
    content: public abstract Task<RepoResponse> InsertSettingsAsync(TSettingsItem settingsItem)
    parameters:
    - id: settingsItem
      type: '{TSettingsItem}'
      description: Добавляемый элемент настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse}
      description: ''
    content.vb: Public MustOverride Function InsertSettingsAsync(settingsItem As TSettingsItem) As Task(Of RepoResponse)
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).InsertSettingsAsync(TSettingsItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).InsertSettingsAsync(TSettingsItem)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync``1(`0,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync``1(`0,`0)
  id: CreateSettingsAsync``1(`0,`0)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: CreateSettingsAsync<T>(TObjectId?, TObjectId?)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.CreateSettingsAsync<T>(TObjectId?, TObjectId?)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.CreateSettingsAsync<T>(TObjectId?, TObjectId?)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 118
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Создает элемент настроек.
  example: []
  syntax:
    content: 'public abstract Task<RepoResponse<T>> CreateSettingsAsync<T>(TObjectId? scopeId = default, TObjectId? subjectId = default) where T : class, TSettingsItem'
    parameters:
    - id: scopeId
      type: '{TObjectId}'
      description: Уникальный идентификатор области настроек.
    - id: subjectId
      type: '{TObjectId}'
      description: Уникальный идентификатор субъекта настроек.
    typeParameters:
    - id: T
      description: Тип элемента настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Элемент настроек.
    content.vb: Public MustOverride Function CreateSettingsAsync(Of T As {Class, TSettingsItem})(scopeId As TObjectId = Nothing, subjectId As TObjectId = Nothing) As Task(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).CreateSettingsAsync(Of T)(TObjectId, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).CreateSettingsAsync(Of T)(TObjectId, TObjectId)
  name.vb: CreateSettingsAsync(Of T)(TObjectId, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync(`1)
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync(`1)
  id: RemoveSettingsAsync(`1)
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: RemoveSettingsAsync(TSettingsItem)
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.RemoveSettingsAsync(TSettingsItem)
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.RemoveSettingsAsync(TSettingsItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveSettingsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 125
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Удаляет элемент настроек из репозитория.
  example: []
  syntax:
    content: public abstract Task<RepoResponse> RemoveSettingsAsync(TSettingsItem settingsItem)
    parameters:
    - id: settingsItem
      type: '{TSettingsItem}'
      description: Удаляемый элемент настроек.
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse}
      description: ''
    content.vb: Public MustOverride Function RemoveSettingsAsync(settingsItem As TSettingsItem) As Task(Of RepoResponse)
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync*
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).RemoveSettingsAsync(TSettingsItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).RemoveSettingsAsync(TSettingsItem)
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync
  id: SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveChangesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Settings/SettingsRepositoryBase.cs
    startLine: 131
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Settings
  summary: Сохраняет изменения.
  example: []
  syntax:
    content: public abstract Task<RepoResponse> SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse}
      description: ''
    content.vb: Public MustOverride Function SaveChangesAsync() As Task(Of RepoResponse)
  overload: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync*
  implements:
  - ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).SaveChangesAsync()
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).SaveChangesAsync()
references:
- uid: ParmaGIS.Modules.Data.Space.Settings
  commentId: N:ParmaGIS.Modules.Data.Space.Settings
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Settings
  nameWithType: ParmaGIS.Modules.Data.Space.Settings
  fullName: ParmaGIS.Modules.Data.Space.Settings
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Settings
    name: Settings
    href: ParmaGIS.Modules.Data.Space.Settings.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Settings
    name: Settings
    href: ParmaGIS.Modules.Data.Space.Settings.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository
  commentId: T:ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository
  parent: ParmaGIS.Modules.Data.Space.Settings
  href: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.html
  name: ISettingsRepository
  nameWithType: ISettingsRepository
  fullName: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.ForEachSubjectAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_ForEachSubjectAsync__1__0__0___System_Boolean___0_
  name: ForEachSubjectAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.ForEachSubjectAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.ForEachSubjectAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).ForEachSubjectAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).ForEachSubjectAsync
- uid: '{TObjectId}'
  commentId: '!:TObjectId'
  definition: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: '{TObjectId}[]'
  isExternal: true
  name: TObjectId[]
  nameWithType: TObjectId[]
  fullName: TObjectId[]
  nameWithType.vb: TObjectId()
  fullName.vb: TObjectId()
  name.vb: TObjectId()
  spec.csharp:
  - name: TObjectId
  - name: '['
  - name: ']'
  spec.vb:
  - name: TObjectId
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{System.Collections.Generic.Dictionary{{TObjectId},{T}}}}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{System.Collections.Generic.Dictionary{`0,``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RepoResponse<Dictionary<TObjectId, T>>>
  nameWithType: Task<RepoResponse<Dictionary<TObjectId, T>>>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.RepoResponse<System.Collections.Generic.Dictionary<TObjectId, T>>>
  nameWithType.vb: Task(Of RepoResponse(Of Dictionary(Of TObjectId, T)))
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.RepoResponse(Of System.Collections.Generic.Dictionary(Of TObjectId, T)))
  name.vb: Task(Of RepoResponse(Of Dictionary(Of TObjectId, T)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TObjectId
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TObjectId
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetSettingsAsync__1__0_
  name: GetSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RepoResponse<T>>
  nameWithType: Task<RepoResponse<T>>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.RepoResponse<T>>
  nameWithType.vb: Task(Of RepoResponse(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.RepoResponse(Of T))
  name.vb: Task(Of RepoResponse(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForScopeAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetSettingsForScopeAsync__1__0_
  name: GetSettingsForScopeAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForScopeAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForScopeAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForScopeAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForScopeAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{{T}[]}}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse{``0[]}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RepoResponse<T[]>>
  nameWithType: Task<RepoResponse<T[]>>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.RepoResponse<T[]>>
  nameWithType.vb: Task(Of RepoResponse(Of T()))
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.RepoResponse(Of T()))
  name.vb: Task(Of RepoResponse(Of T()))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsForSubjectAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetSettingsForSubjectAsync__1__0_
  name: GetSettingsForSubjectAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsForSubjectAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsForSubjectAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetDefaultSettingsAsync__1
  name: GetDefaultSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForScopeAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetDefaultSettingsForScopeAsync__1__0_
  name: GetDefaultSettingsForScopeAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForScopeAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForScopeAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForScopeAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForScopeAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetDefaultSettingsForSubjectAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetDefaultSettingsForSubjectAsync__1__0_
  name: GetDefaultSettingsForSubjectAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForSubjectAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetDefaultSettingsForSubjectAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForSubjectAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetDefaultSettingsForSubjectAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetSettingsOrDefaultAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetSettingsOrDefaultAsync__1__0__0_
  name: GetSettingsOrDefaultAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsOrDefaultAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetSettingsOrDefaultAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsOrDefaultAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetSettingsOrDefaultAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.GetAllSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_GetAllSettingsAsync__1__0__0_
  name: GetAllSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.GetAllSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.GetAllSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetAllSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).GetAllSettingsAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.InsertSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_InsertSettingsAsync__1_
  name: InsertSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.InsertSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.InsertSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).InsertSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).InsertSettingsAsync
- uid: '{TSettingsItem}'
  commentId: '!:TSettingsItem'
  definition: TSettingsItem
  name: TSettingsItem
  nameWithType: TSettingsItem
  fullName: TSettingsItem
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.RepoResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RepoResponse>
  nameWithType: Task<RepoResponse>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.RepoResponse>
  nameWithType.vb: Task(Of RepoResponse)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.RepoResponse)
  name.vb: Task(Of RepoResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  - name: )
- uid: TSettingsItem
  name: TSettingsItem
  nameWithType: TSettingsItem
  fullName: TSettingsItem
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.CreateSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_CreateSettingsAsync__1__0__0_
  name: CreateSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.CreateSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.CreateSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).CreateSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).CreateSettingsAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.RemoveSettingsAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_RemoveSettingsAsync__1_
  name: RemoveSettingsAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.RemoveSettingsAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.RemoveSettingsAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).RemoveSettingsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).RemoveSettingsAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase`2.SaveChangesAsync
  href: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase-2.html#ParmaGIS_Modules_Data_Space_Settings_SettingsRepositoryBase_2_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: SettingsRepositoryBase<TObjectId, TSettingsItem>.SaveChangesAsync
  fullName: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase<TObjectId, TSettingsItem>.SaveChangesAsync
  nameWithType.vb: SettingsRepositoryBase(Of TObjectId, TSettingsItem).SaveChangesAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Settings.SettingsRepositoryBase(Of TObjectId, TSettingsItem).SaveChangesAsync
- uid: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository
  href: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.html#ParmaGIS_Modules_Data_Space_Settings_ISettingsRepository_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: ISettingsRepository.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync()
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync
    name: SaveChangesAsync
    href: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.html#ParmaGIS_Modules_Data_Space_Settings_ISettingsRepository_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.SaveChangesAsync
    name: SaveChangesAsync
    href: ParmaGIS.Modules.Data.Space.Settings.ISettingsRepository.html#ParmaGIS_Modules_Data_Space_Settings_ISettingsRepository_SaveChangesAsync
  - name: (
  - name: )
