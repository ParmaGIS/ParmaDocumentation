### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  commentId: T:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  id: RepositoryItemsChangedEventArgs`2
  parent: ParmaGIS.Modules.Data.Space
  children:
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction)
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`1})
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1)
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1,`1)
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository
  - ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{`0,`1})~System.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: RepositoryItemsChangedEventArgs<TRep, TItem>
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RepositoryItemsChangedEventArgs
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: 'public class RepositoryItemsChangedEventArgs<TRep, TItem> : EventArgs'
    typeParameters:
    - id: TRep
    - id: TItem
    content.vb: Public Class RepositoryItemsChangedEventArgs(Of TRep, TItem) Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem)
  name.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1)
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1)
  id: '#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1)'
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, TItem)
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, TItem)
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, TItem)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public RepositoryItemsChangedEventArgs(TRep repository, NotifyCollectionChangedAction action, TItem changedItem)
    parameters:
    - id: repository
      type: '{TRep}'
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
    - id: changedItem
      type: '{TItem}'
    content.vb: Public Sub New(repository As TRep, action As NotifyCollectionChangedAction, changedItem As TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, NotifyCollectionChangedAction, TItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, TItem)
  name.vb: New(TRep, NotifyCollectionChangedAction, TItem)
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1,`1)
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1,`1)
  id: '#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,`1,`1)'
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, TItem, TItem)
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, TItem, TItem)
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, TItem, TItem)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 28
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public RepositoryItemsChangedEventArgs(TRep repository, NotifyCollectionChangedAction action, TItem newItem, TItem oldItem)
    parameters:
    - id: repository
      type: '{TRep}'
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
    - id: newItem
      type: '{TItem}'
    - id: oldItem
      type: '{TItem}'
    content.vb: Public Sub New(repository As TRep, action As NotifyCollectionChangedAction, newItem As TItem, oldItem As TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, NotifyCollectionChangedAction, TItem, TItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, TItem, TItem)
  name.vb: New(TRep, NotifyCollectionChangedAction, TItem, TItem)
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`1})
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`1})
  id: '#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`1})'
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, IList<TItem>, IList<TItem>)
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction, IList<TItem>, IList<TItem>)
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.Generic.IList<TItem>, System.Collections.Generic.IList<TItem>)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 36
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public RepositoryItemsChangedEventArgs(TRep repository, NotifyCollectionChangedAction action, IList<TItem> newItems, IList<TItem> oldItems)
    parameters:
    - id: repository
      type: '{TRep}'
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
    - id: newItems
      type: System.Collections.Generic.IList{{TItem}}
    - id: oldItems
      type: System.Collections.Generic.IList{{TItem}}
    content.vb: Public Sub New(repository As TRep, action As NotifyCollectionChangedAction, newItems As IList(Of TItem), oldItems As IList(Of TItem))
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, NotifyCollectionChangedAction, IList(Of TItem), IList(Of TItem))
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.Generic.IList(Of TItem), System.Collections.Generic.IList(Of TItem))
  name.vb: New(TRep, NotifyCollectionChangedAction, IList(Of TItem), IList(Of TItem))
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction)
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction)
  id: '#ctor(`0,System.Collections.Specialized.NotifyCollectionChangedAction)'
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction)
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, NotifyCollectionChangedAction)
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs(TRep, System.Collections.Specialized.NotifyCollectionChangedAction)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 44
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public RepositoryItemsChangedEventArgs(TRep repository, NotifyCollectionChangedAction action)
    parameters:
    - id: repository
      type: '{TRep}'
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
    content.vb: Public Sub New(repository As TRep, action As NotifyCollectionChangedAction)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, NotifyCollectionChangedAction)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).New(TRep, System.Collections.Specialized.NotifyCollectionChangedAction)
  name.vb: New(TRep, NotifyCollectionChangedAction)
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository
  commentId: P:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository
  id: Repository
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.Repository
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.Repository
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Repository
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 52
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public TRep Repository { get; }
    parameters: []
    return:
      type: '{TRep}'
    content.vb: Public ReadOnly Property Repository As TRep
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).Repository
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).Repository
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action
  commentId: P:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action
  id: Action
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.Action
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.Action
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Action
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 53
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public NotifyCollectionChangedAction Action { get; }
    parameters: []
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedAction
    content.vb: Public ReadOnly Property Action As NotifyCollectionChangedAction
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).Action
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).Action
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems
  commentId: P:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems
  id: NewItems
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: NewItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.NewItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.NewItems
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: NewItems
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 55
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public IList<TItem> NewItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{{TItem}}
    content.vb: Public ReadOnly Property NewItems As IList(Of TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).NewItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).NewItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems
  commentId: P:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems
  id: OldItems
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: OldItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.OldItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.OldItems
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OldItems
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 56
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public IList<TItem> OldItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{{TItem}}
    content.vb: Public ReadOnly Property OldItems As IList(Of TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).OldItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).OldItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems
  id: GetNewItems
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: GetNewItems()
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.GetNewItems()
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.GetNewItems()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetNewItems
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 58
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: protected virtual IList<TItem> GetNewItems()
    return:
      type: System.Collections.Generic.IList{{TItem}}
    content.vb: Protected Overridable Function GetNewItems() As IList(Of TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).GetNewItems()
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).GetNewItems()
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems
  id: GetOldItems
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: GetOldItems()
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.GetOldItems()
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.GetOldItems()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetOldItems
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 64
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: protected virtual IList<TItem> GetOldItems()
    return:
      type: System.Collections.Generic.IList{{TItem}}
    content.vb: Protected Overridable Function GetOldItems() As IList(Of TItem)
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).GetOldItems()
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).GetOldItems()
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{`0,`1})~System.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: M:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{`0,`1})~System.Collections.Specialized.NotifyCollectionChangedEventArgs
  id: op_Explicit(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{`0,`1})~System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: explicit operator NotifyCollectionChangedEventArgs(RepositoryItemsChangedEventArgs<TRep, TItem>)
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.explicit operator NotifyCollectionChangedEventArgs(RepositoryItemsChangedEventArgs<TRep, TItem>)
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.explicit operator System.Collections.Specialized.NotifyCollectionChangedEventArgs(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>)
  type: Operator
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: op_Explicit
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepositoryItemsChangedEventArgs.cs
    startLine: 69
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public static explicit operator NotifyCollectionChangedEventArgs(RepositoryItemsChangedEventArgs<TRep, TItem> args)
    parameters:
    - id: args
      type: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    content.vb: Public Shared Narrowing Operator CType(args As RepositoryItemsChangedEventArgs(Of TRep, TItem)) As NotifyCollectionChangedEventArgs
  overload: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit*
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).CType(RepositoryItemsChangedEventArgs(Of TRep, TItem))
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).CType(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem))
  name.vb: CType(RepositoryItemsChangedEventArgs(Of TRep, TItem))
references:
- uid: ParmaGIS.Modules.Data.Space
  commentId: N:ParmaGIS.Modules.Data.Space
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space
  nameWithType: ParmaGIS.Modules.Data.Space
  fullName: ParmaGIS.Modules.Data.Space
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.#ctor
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2__ctor__0_System_Collections_Specialized_NotifyCollectionChangedAction__1_
  name: RepositoryItemsChangedEventArgs
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.RepositoryItemsChangedEventArgs
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).New
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).New
  name.vb: New
- uid: '{TRep}'
  commentId: '!:TRep'
  definition: TRep
  name: TRep
  nameWithType: TRep
  fullName: TRep
- uid: System.Collections.Specialized.NotifyCollectionChangedAction
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedAction
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedaction
  name: NotifyCollectionChangedAction
  nameWithType: NotifyCollectionChangedAction
  fullName: System.Collections.Specialized.NotifyCollectionChangedAction
- uid: '{TItem}'
  commentId: '!:TItem'
  definition: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: TRep
  name: TRep
  nameWithType: TRep
  fullName: TRep
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.Collections.Generic.IList{{TItem}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TItem>
  nameWithType: IList<TItem>
  fullName: System.Collections.Generic.IList<TItem>
  nameWithType.vb: IList(Of TItem)
  fullName.vb: System.Collections.Generic.IList(Of TItem)
  name.vb: IList(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Repository
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_Repository
  name: Repository
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.Repository
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.Repository
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).Repository
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).Repository
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.Action
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_Action
  name: Action
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.Action
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.Action
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).Action
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).Action
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.NewItems
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_NewItems
  name: NewItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.NewItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.NewItems
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).NewItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).NewItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.OldItems
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_OldItems
  name: OldItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.OldItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.OldItems
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).OldItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).OldItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetNewItems
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_GetNewItems
  name: GetNewItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.GetNewItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.GetNewItems
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).GetNewItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).GetNewItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.GetOldItems
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html#ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_2_GetOldItems
  name: GetOldItems
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.GetOldItems
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.GetOldItems
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).GetOldItems
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).GetOldItems
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2.op_Explicit
  name: explicit operator
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>.explicit operator
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>.explicit operator
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem).CType
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem).CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  commentId: T:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  name: RepositoryItemsChangedEventArgs<TRep, TItem>
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem)
  name.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - name: TRep
  - name: ','
  - name: " "
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRep
  - name: ','
  - name: " "
  - name: TItem
  - name: )
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
