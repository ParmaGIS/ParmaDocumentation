### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  commentId: T:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  id: IPipelinewareExtensions
  parent: ParmaGIS.Core.Utilities.Extensions
  children:
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``1,``2})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``2,``0})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition``2(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Predicate{``0})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0},System.Predicate{``0})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1})
  - ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1},System.Predicate{``0})
  langs:
  - csharp
  - vb
  name: IPipelinewareExtensions
  nameWithType: IPipelinewareExtensions
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  type: Class
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IPipelinewareExtensions
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 8
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Содержит расширения для конвейеров.
  example: []
  syntax:
    content: public static class IPipelinewareExtensions
    content.vb: Public Module IPipelinewareExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``1,``2})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``1,``2})
  id: Append``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``1,``2})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: Append<TIn, TOut, TOut2>(IPipelineware<TIn, TOut>, Func<TOut, TOut2>)
  nameWithType: IPipelinewareExtensions.Append<TIn, TOut, TOut2>(IPipelineware<TIn, TOut>, Func<TOut, TOut2>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append<TIn, TOut, TOut2>(ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut>, System.Func<TOut, TOut2>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Append
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 19
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Присоединяет функцию в конец конвейера.
  example: []
  syntax:
    content: public static IPipelineware<TIn, TOut2> Append<TIn, TOut, TOut2>(this IPipelineware<TIn, TOut> startware, Func<TOut, TOut2> endware)
    parameters:
    - id: startware
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut}}
      description: Конвейер, к которому будет присоединен новый конвейер
    - id: endware
      type: System.Func{{TOut},{TOut2}}
      description: Конвейер, присоединяемый в конец конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    - id: TOut
      description: Тип результат работы конвейера
    - id: TOut2
      description: Тип результата присоединенного конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut2}}
      description: Новый конвейера - соединение двух конвейеров
    content.vb: Public Shared Function Append(Of TIn, TOut, TOut2)(startware As IPipelineware(Of TIn, TOut), endware As Func(Of TOut, TOut2)) As IPipelineware(Of TIn, TOut2)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append*
  nameWithType.vb: IPipelinewareExtensions.Append(Of TIn, TOut, TOut2)(IPipelineware(Of TIn, TOut), Func(Of TOut, TOut2))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append(Of TIn, TOut, TOut2)(ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut), System.Func(Of TOut, TOut2))
  name.vb: Append(Of TIn, TOut, TOut2)(IPipelineware(Of TIn, TOut), Func(Of TOut, TOut2))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``2,``0})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``2,``0})
  id: Prepend``3(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Func{``2,``0})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: Prepend<TIn, TOut, TIn2>(IPipelineware<TIn, TOut>, Func<TIn2, TIn>)
  nameWithType: IPipelinewareExtensions.Prepend<TIn, TOut, TIn2>(IPipelineware<TIn, TOut>, Func<TIn2, TIn>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend<TIn, TOut, TIn2>(ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut>, System.Func<TIn2, TIn>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Prepend
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 33
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Присоединяет функцию в начало конвейера.
  example: []
  syntax:
    content: public static IPipelineware<TIn2, TOut> Prepend<TIn, TOut, TIn2>(this IPipelineware<TIn, TOut> endware, Func<TIn2, TIn> startware)
    parameters:
    - id: endware
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut}}
      description: Конвейер, в начало которого будет присоединен новый конвейер
    - id: startware
      type: System.Func{{TIn2},{TIn}}
      description: Конвейер, присоединяемый в начало
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    - id: TOut
      description: Тип результата работы конвейера
    - id: TIn2
      description: Тип входных данных присоединяемого конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn2},{TOut}}
      description: Новый конвейер - соединение двух конвейеров
    content.vb: Public Shared Function Prepend(Of TIn, TOut, TIn2)(endware As IPipelineware(Of TIn, TOut), startware As Func(Of TIn2, TIn)) As IPipelineware(Of TIn2, TOut)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend*
  nameWithType.vb: IPipelinewareExtensions.Prepend(Of TIn, TOut, TIn2)(IPipelineware(Of TIn, TOut), Func(Of TIn2, TIn))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend(Of TIn, TOut, TIn2)(ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut), System.Func(Of TIn2, TIn))
  name.vb: Prepend(Of TIn, TOut, TIn2)(IPipelineware(Of TIn, TOut), Func(Of TIn2, TIn))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1})
  id: ToPipelineware``2(System.Func{``0,``1})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: ToPipelineware<TIn, TOut>(Func<TIn, TOut>)
  nameWithType: IPipelinewareExtensions.ToPipelineware<TIn, TOut>(Func<TIn, TOut>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware<TIn, TOut>(System.Func<TIn, TOut>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ToPipelineware
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 45
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Возвращает конвейер из фунции.
  example: []
  syntax:
    content: public static IPipelineware<TIn, TOut> ToPipelineware<TIn, TOut>(this Func<TIn, TOut> func)
    parameters:
    - id: func
      type: System.Func{{TIn},{TOut}}
      description: Функция осуществляющая работу конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    - id: TOut
      description: Тип результата работы конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut}}
      description: Новый конвейер из функции
    content.vb: Public Shared Function ToPipelineware(Of TIn, TOut)(func As Func(Of TIn, TOut)) As IPipelineware(Of TIn, TOut)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware*
  nameWithType.vb: IPipelinewareExtensions.ToPipelineware(Of TIn, TOut)(Func(Of TIn, TOut))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware(Of TIn, TOut)(System.Func(Of TIn, TOut))
  name.vb: ToPipelineware(Of TIn, TOut)(Func(Of TIn, TOut))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0})
  id: ToPipelineware``1(System.Action{``0})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: ToPipelineware<TIn>(Action<TIn>)
  nameWithType: IPipelinewareExtensions.ToPipelineware<TIn>(Action<TIn>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware<TIn>(System.Action<TIn>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ToPipelineware
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 56
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Возвращает конвейер из фунции.
  example: []
  syntax:
    content: public static IPipelineware<TIn, TIn> ToPipelineware<TIn>(this Action<TIn> func)
    parameters:
    - id: func
      type: System.Action{{TIn}}
      description: Функция осуществляющая работу конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TIn}}
      description: Новый конвейер из функции
    content.vb: Public Shared Function ToPipelineware(Of TIn)(func As Action(Of TIn)) As IPipelineware(Of TIn, TIn)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware*
  nameWithType.vb: IPipelinewareExtensions.ToPipelineware(Of TIn)(Action(Of TIn))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware(Of TIn)(System.Action(Of TIn))
  name.vb: ToPipelineware(Of TIn)(Action(Of TIn))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1},System.Predicate{``0})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``2(System.Func{``0,``1},System.Predicate{``0})
  id: ToPipelineware``2(System.Func{``0,``1},System.Predicate{``0})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: ToPipelineware<TIn, TOut>(Func<TIn, TOut>, Predicate<TIn>)
  nameWithType: IPipelinewareExtensions.ToPipelineware<TIn, TOut>(Func<TIn, TOut>, Predicate<TIn>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware<TIn, TOut>(System.Func<TIn, TOut>, System.Predicate<TIn>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ToPipelineware
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 69
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Возвращает конвейер из фунции и условия.
  example: []
  syntax:
    content: public static IConditionPipelineware<TIn, TOut> ToPipelineware<TIn, TOut>(this Func<TIn, TOut> func, Predicate<TIn> condition)
    parameters:
    - id: func
      type: System.Func{{TIn},{TOut}}
      description: Функция осуществляющая работу конвейера
    - id: condition
      type: System.Predicate{{TIn}}
      description: Условие выполнения конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    - id: TOut
      description: Тип результата работы конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{{TIn},{TOut}}
      description: Новый конвейер из функции
    content.vb: Public Shared Function ToPipelineware(Of TIn, TOut)(func As Func(Of TIn, TOut), condition As Predicate(Of TIn)) As IConditionPipelineware(Of TIn, TOut)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware*
  nameWithType.vb: IPipelinewareExtensions.ToPipelineware(Of TIn, TOut)(Func(Of TIn, TOut), Predicate(Of TIn))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware(Of TIn, TOut)(System.Func(Of TIn, TOut), System.Predicate(Of TIn))
  name.vb: ToPipelineware(Of TIn, TOut)(Func(Of TIn, TOut), Predicate(Of TIn))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition``2(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Predicate{``0})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition``2(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Predicate{``0})
  id: SetCondition``2(ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1},System.Predicate{``0})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: SetCondition<TIn, TOut>(IPipelineware<TIn, TOut>, Predicate<TIn>)
  nameWithType: IPipelinewareExtensions.SetCondition<TIn, TOut>(IPipelineware<TIn, TOut>, Predicate<TIn>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition<TIn, TOut>(ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut>, System.Predicate<TIn>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetCondition
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 82
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Добавляет условие к конвейеру.
  example: []
  syntax:
    content: public static IConditionPipelineware<TIn, TOut> SetCondition<TIn, TOut>(this IPipelineware<TIn, TOut> pipline, Predicate<TIn> condition)
    parameters:
    - id: pipline
      type: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut}}
      description: Функция осуществляющая работу конвейера
    - id: condition
      type: System.Predicate{{TIn}}
      description: Условие выполнения конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    - id: TOut
      description: Тип результата работы конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{{TIn},{TOut}}
      description: Новый конвейер с условием
    content.vb: Public Shared Function SetCondition(Of TIn, TOut)(pipline As IPipelineware(Of TIn, TOut), condition As Predicate(Of TIn)) As IConditionPipelineware(Of TIn, TOut)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition*
  nameWithType.vb: IPipelinewareExtensions.SetCondition(Of TIn, TOut)(IPipelineware(Of TIn, TOut), Predicate(Of TIn))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition(Of TIn, TOut)(ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut), System.Predicate(Of TIn))
  name.vb: SetCondition(Of TIn, TOut)(IPipelineware(Of TIn, TOut), Predicate(Of TIn))
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0},System.Predicate{``0})
  commentId: M:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware``1(System.Action{``0},System.Predicate{``0})
  id: ToPipelineware``1(System.Action{``0},System.Predicate{``0})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions
  langs:
  - csharp
  - vb
  name: ToPipelineware<TIn>(Action<TIn>, Predicate<TIn>)
  nameWithType: IPipelinewareExtensions.ToPipelineware<TIn>(Action<TIn>, Predicate<TIn>)
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware<TIn>(System.Action<TIn>, System.Predicate<TIn>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ToPipelineware
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Extensions/IPipelinewareExtensions.cs
    startLine: 95
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Extensions
  summary: Возвращает конвейер из фунции и условия.
  example: []
  syntax:
    content: public static IConditionPipelineware<TIn, TIn> ToPipelineware<TIn>(this Action<TIn> func, Predicate<TIn> condition)
    parameters:
    - id: func
      type: System.Action{{TIn}}
      description: Функция осуществляющая работу конвейера
    - id: condition
      type: System.Predicate{{TIn}}
      description: Условие выполнения конвейера
    typeParameters:
    - id: TIn
      description: Тип входных данных конвейера
    return:
      type: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{{TIn},{TIn}}
      description: Новый конвейер из функции
    content.vb: Public Shared Function ToPipelineware(Of TIn)(func As Action(Of TIn), condition As Predicate(Of TIn)) As IConditionPipelineware(Of TIn, TIn)
  overload: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware*
  nameWithType.vb: IPipelinewareExtensions.ToPipelineware(Of TIn)(Action(Of TIn), Predicate(Of TIn))
  fullName.vb: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware(Of TIn)(System.Action(Of TIn), System.Predicate(Of TIn))
  name.vb: ToPipelineware(Of TIn)(Action(Of TIn), Predicate(Of TIn))
references:
- uid: ParmaGIS.Core.Utilities.Extensions
  commentId: N:ParmaGIS.Core.Utilities.Extensions
  href: ParmaGIS.html
  name: ParmaGIS.Core.Utilities.Extensions
  nameWithType: ParmaGIS.Core.Utilities.Extensions
  fullName: ParmaGIS.Core.Utilities.Extensions
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Extensions
    name: Extensions
    href: ParmaGIS.Core.Utilities.Extensions.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Extensions
    name: Extensions
    href: ParmaGIS.Core.Utilities.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append*
  commentId: Overload:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append
  href: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.html#ParmaGIS_Core_Utilities_Extensions_IPipelinewareExtensions_Append__3_ParmaGIS_Core_Utilities_Factory_IPipelineware___0___1__System_Func___1___2__
  name: Append
  nameWithType: IPipelinewareExtensions.Append
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Append
- uid: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``1}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  name: IPipelineware<TIn, TOut>
  nameWithType: IPipelineware<TIn, TOut>
  fullName: ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut>
  nameWithType.vb: IPipelineware(Of TIn, TOut)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut)
  name.vb: IPipelineware(Of TIn, TOut)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: System.Func{{TOut},{TOut2}}
  commentId: T:System.Func{``1,``2}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TOut, TOut2>
  nameWithType: Func<TOut, TOut2>
  fullName: System.Func<TOut, TOut2>
  nameWithType.vb: Func(Of TOut, TOut2)
  fullName.vb: System.Func(Of TOut, TOut2)
  name.vb: Func(Of TOut, TOut2)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TOut
  - name: ','
  - name: " "
  - name: TOut2
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: ','
  - name: " "
  - name: TOut2
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TOut2}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``2}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  name: IPipelineware<TIn, TOut2>
  nameWithType: IPipelineware<TIn, TOut2>
  fullName: ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut2>
  nameWithType.vb: IPipelineware(Of TIn, TOut2)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut2)
  name.vb: IPipelineware(Of TIn, TOut2)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut2
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut2
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  commentId: T:ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  parent: ParmaGIS.Core.Utilities.Factory
  href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  name: IPipelineware<TIn, TOut>
  nameWithType: IPipelineware<TIn, TOut>
  fullName: ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TOut>
  nameWithType.vb: IPipelineware(Of TIn, TOut)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TOut)
  name.vb: IPipelineware(Of TIn, TOut)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory
  commentId: N:ParmaGIS.Core.Utilities.Factory
  href: ParmaGIS.html
  name: ParmaGIS.Core.Utilities.Factory
  nameWithType: ParmaGIS.Core.Utilities.Factory
  fullName: ParmaGIS.Core.Utilities.Factory
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Factory
    name: Factory
    href: ParmaGIS.Core.Utilities.Factory.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Factory
    name: Factory
    href: ParmaGIS.Core.Utilities.Factory.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend*
  commentId: Overload:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend
  href: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.html#ParmaGIS_Core_Utilities_Extensions_IPipelinewareExtensions_Prepend__3_ParmaGIS_Core_Utilities_Factory_IPipelineware___0___1__System_Func___2___0__
  name: Prepend
  nameWithType: IPipelinewareExtensions.Prepend
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.Prepend
- uid: System.Func{{TIn2},{TIn}}
  commentId: T:System.Func{``2,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TIn2, TIn>
  nameWithType: Func<TIn2, TIn>
  fullName: System.Func<TIn2, TIn>
  nameWithType.vb: Func(Of TIn2, TIn)
  fullName.vb: System.Func(Of TIn2, TIn)
  name.vb: Func(Of TIn2, TIn)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TIn2
  - name: ','
  - name: " "
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TIn2
  - name: ','
  - name: " "
  - name: TIn
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn2},{TOut}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IPipelineware{``2,``1}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  name: IPipelineware<TIn2, TOut>
  nameWithType: IPipelineware<TIn2, TOut>
  fullName: ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn2, TOut>
  nameWithType.vb: IPipelineware(Of TIn2, TOut)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn2, TOut)
  name.vb: IPipelineware(Of TIn2, TOut)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: <
  - name: TIn2
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn2
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware*
  commentId: Overload:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware
  href: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.html#ParmaGIS_Core_Utilities_Extensions_IPipelinewareExtensions_ToPipelineware__2_System_Func___0___1__
  name: ToPipelineware
  nameWithType: IPipelinewareExtensions.ToPipelineware
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.ToPipelineware
- uid: System.Func{{TIn},{TOut}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TIn, TOut>
  nameWithType: Func<TIn, TOut>
  fullName: System.Func<TIn, TOut>
  nameWithType.vb: Func(Of TIn, TOut)
  fullName.vb: System.Func(Of TIn, TOut)
  name.vb: Func(Of TIn, TOut)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: System.Action{{TIn}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TIn>
  nameWithType: Action<TIn>
  fullName: System.Action<TIn>
  nameWithType.vb: Action(Of TIn)
  fullName.vb: System.Action(Of TIn)
  name.vb: Action(Of TIn)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IPipelineware{{TIn},{TIn}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IPipelineware{``0,``0}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  name: IPipelineware<TIn, TIn>
  nameWithType: IPipelineware<TIn, TIn>
  fullName: ParmaGIS.Core.Utilities.Factory.IPipelineware<TIn, TIn>
  nameWithType.vb: IPipelineware(Of TIn, TIn)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IPipelineware(Of TIn, TIn)
  name.vb: IPipelineware(Of TIn, TIn)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IPipelineware`2
    name: IPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TIn
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate{{TIn}}
  commentId: T:System.Predicate{``0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<TIn>
  nameWithType: Predicate<TIn>
  fullName: System.Predicate<TIn>
  nameWithType.vb: Predicate(Of TIn)
  fullName.vb: System.Predicate(Of TIn)
  name.vb: Predicate(Of TIn)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{{TIn},{TOut}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{``0,``1}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  name: IConditionPipelineware<TIn, TOut>
  nameWithType: IConditionPipelineware<TIn, TOut>
  fullName: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware<TIn, TOut>
  nameWithType.vb: IConditionPipelineware(Of TIn, TOut)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware(Of TIn, TOut)
  name.vb: IConditionPipelineware(Of TIn, TOut)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
  commentId: T:ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  name: IConditionPipelineware<TIn, TOut>
  nameWithType: IConditionPipelineware<TIn, TOut>
  fullName: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware<TIn, TOut>
  nameWithType.vb: IConditionPipelineware(Of TIn, TOut)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware(Of TIn, TOut)
  name.vb: IConditionPipelineware(Of TIn, TOut)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition*
  commentId: Overload:ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition
  href: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.html#ParmaGIS_Core_Utilities_Extensions_IPipelinewareExtensions_SetCondition__2_ParmaGIS_Core_Utilities_Factory_IPipelineware___0___1__System_Predicate___0__
  name: SetCondition
  nameWithType: IPipelinewareExtensions.SetCondition
  fullName: ParmaGIS.Core.Utilities.Extensions.IPipelinewareExtensions.SetCondition
- uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{{TIn},{TIn}}
  commentId: T:ParmaGIS.Core.Utilities.Factory.IConditionPipelineware{``0,``0}
  parent: ParmaGIS.Core.Utilities.Factory
  definition: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
  href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  name: IConditionPipelineware<TIn, TIn>
  nameWithType: IConditionPipelineware<TIn, TIn>
  fullName: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware<TIn, TIn>
  nameWithType.vb: IConditionPipelineware(Of TIn, TIn)
  fullName.vb: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware(Of TIn, TIn)
  name.vb: IConditionPipelineware(Of TIn, TIn)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware`2
    name: IConditionPipelineware
    href: ParmaGIS.Core.Utilities.Factory.IConditionPipelineware-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TIn
  - name: )
