### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1
  commentId: T:ParmaGIS.Core.Utilities.Collections.Heap`1
  id: Heap`1
  parent: ParmaGIS.Core.Utilities.Collections
  children:
  - ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(ParmaGIS.Core.Utilities.Collections.Heap{`0}.HeapType)
  - ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(System.Boolean)
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Any
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Clear
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Count
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0)
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0[])
  - ParmaGIS.Core.Utilities.Collections.Heap`1.Peek
  - ParmaGIS.Core.Utilities.Collections.Heap`1.ToString
  langs:
  - csharp
  - vb
  name: Heap<T>
  nameWithType: Heap<T>
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>
  type: Class
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Heap
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 8
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Бинарная куча, организованная так, что элемент с самым высоким или самым низким рангом находится наверху кучи.
  example: []
  syntax:
    content: 'public class Heap<T> where T : IComparable<T>'
    typeParameters:
    - id: T
    content.vb: Public Class Heap(Of T As IComparable(Of T))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: Heap(Of T)
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T)
  name.vb: Heap(Of T)
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(ParmaGIS.Core.Utilities.Collections.Heap{`0}.HeapType)
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(ParmaGIS.Core.Utilities.Collections.Heap{`0}.HeapType)
  id: '#ctor(ParmaGIS.Core.Utilities.Collections.Heap{`0}.HeapType)'
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Heap(HeapType)
  nameWithType: Heap<T>.Heap(Heap<T>.HeapType)
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Heap(ParmaGIS.Core.Utilities.Collections.Heap<T>.HeapType)
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 28
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Core.Utilities.Collections.Heap%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected Heap(Heap<T>.HeapType heapType)
    parameters:
    - id: heapType
      type: ParmaGIS.Core.Utilities.Collections.Heap`1.HeapType
      description: Тип кучи.
    content.vb: Protected Sub New(heapType As Heap(Of T).HeapType)
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor*
  nameWithType.vb: Heap(Of T).New(Heap(Of T).HeapType)
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).New(ParmaGIS.Core.Utilities.Collections.Heap(Of T).HeapType)
  name.vb: New(HeapType)
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(System.Boolean)
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Heap(bool)
  nameWithType: Heap<T>.Heap(bool)
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Heap(bool)
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 38
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Core.Utilities.Collections.Heap%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Heap(bool maxHeap = true)
    parameters:
    - id: maxHeap
      type: System.Boolean
      description: Если <code>true</code>, то элементы с большим рангому будут выше в куче, иначе ниже.
    content.vb: Public Sub New(maxHeap As Boolean = True)
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor*
  nameWithType.vb: Heap(Of T).New(Boolean)
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).New(Boolean)
  name.vb: New(Boolean)
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Clear
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Clear
  id: Clear
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Heap<T>.Clear()
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Clear()
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Clear
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 45
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Удаляет все элементы из кучи и сбрасывает статус.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Clear*
  nameWithType.vb: Heap(Of T).Clear()
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Clear()
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Count
  commentId: P:ParmaGIS.Core.Utilities.Collections.Heap`1.Count
  id: Count
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Heap<T>.Count
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Count
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Count
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 56
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Возвращает текущее количество элементов в куче.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Count As Integer
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Count*
  nameWithType.vb: Heap(Of T).Count
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Count
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Any
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Any
  id: Any
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Any()
  nameWithType: Heap<T>.Any()
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Any()
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Any
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 62
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Проверяет наличие элементов в куче.
  example: []
  syntax:
    content: public bool Any()
    return:
      type: System.Boolean
      description: Возвращает <code>true</code>, если в куче есть элементы, иначе - <code>false</code>.
    content.vb: Public Function Any() As Boolean
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Any*
  nameWithType.vb: Heap(Of T).Any()
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Any()
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0)
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: Heap<T>.Enqueue(T)
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Enqueue
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 71
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Добавляет новый элемент в кучу соответственно его рангу.
  example: []
  syntax:
    content: public void Enqueue(T item)
    parameters:
    - id: item
      type: '{T}'
      description: Новый элемент.
    content.vb: Public Sub Enqueue(item As T)
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue*
  nameWithType.vb: Heap(Of T).Enqueue(T)
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Enqueue(T)
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0[])
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue(`0[])
  id: Enqueue(`0[])
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Enqueue(params T[])
  nameWithType: Heap<T>.Enqueue(params T[])
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Enqueue(params T[])
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Enqueue
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 106
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Добавляет несколько элементов в кучу.
  example: []
  syntax:
    content: public void Enqueue(params T[] items)
    parameters:
    - id: items
      type: '{T}[]'
      description: ''
    content.vb: Public Sub Enqueue(ParamArray items As T())
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue*
  nameWithType.vb: Heap(Of T).Enqueue(ParamArray T())
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Enqueue(ParamArray T())
  name.vb: Enqueue(ParamArray T())
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue
  id: Dequeue
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: Heap<T>.Dequeue()
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Dequeue()
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Dequeue
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 121
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Удалите элемент из кучи и переупорядочьте так, чтобы лучший оставшийся элемент оказался наверху кучи.
  remarks: Обратите внимание, что по правилу два элемента на уровне 1 (индексы массива 1 и 2), если они существуют, имеют ранг выше, чем все их дочерние элементы, и поэтому один из них будет новым лучшим элементом в куче.
  example: []
  syntax:
    content: public T Dequeue()
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Dequeue() As T
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue*
  nameWithType.vb: Heap(Of T).Dequeue()
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Dequeue()
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Peek
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.Peek
  id: Peek
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: Heap<T>.Peek()
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Peek()
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Peek
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 175
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Возвращает элемент сверху кучи без его удаления.
  example: []
  syntax:
    content: public T Peek()
    return:
      type: '{T}'
      description: Верхний элемент кучи.
    content.vb: Public Function Peek() As T
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.Peek*
  nameWithType.vb: Heap(Of T).Peek()
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Peek()
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.ToString
  commentId: M:ParmaGIS.Core.Utilities.Collections.Heap`1.ToString
  id: ToString
  parent: ParmaGIS.Core.Utilities.Collections.Heap`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Heap<T>.ToString()
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.ToString()
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ToString
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Collections/Heap.cs
    startLine: 221
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Collections
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ParmaGIS.Core.Utilities.Collections.Heap`1.ToString*
  nameWithType.vb: Heap(Of T).ToString()
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).ToString()
references:
- uid: ParmaGIS.Core.Utilities.Collections
  commentId: N:ParmaGIS.Core.Utilities.Collections
  href: ParmaGIS.html
  name: ParmaGIS.Core.Utilities.Collections
  nameWithType: ParmaGIS.Core.Utilities.Collections
  fullName: ParmaGIS.Core.Utilities.Collections
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Collections
    name: Collections
    href: ParmaGIS.Core.Utilities.Collections.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Collections
    name: Collections
    href: ParmaGIS.Core.Utilities.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1
  commentId: T:ParmaGIS.Core.Utilities.Collections.Heap`1
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  name: Heap<T>
  nameWithType: Heap<T>
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>
  nameWithType.vb: Heap(Of T)
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T)
  name.vb: Heap(Of T)
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1
    name: Heap
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1
    name: Heap
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.#ctor
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1__ctor_ParmaGIS_Core_Utilities_Collections_Heap__0__HeapType_
  name: Heap
  nameWithType: Heap<T>.Heap
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Heap
  nameWithType.vb: Heap(Of T).New
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).New
  name.vb: New
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.HeapType
  commentId: T:ParmaGIS.Core.Utilities.Collections.Heap`1.HeapType
  parent: ParmaGIS.Core.Utilities.Collections
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  name: Heap<T>.HeapType
  nameWithType: Heap<T>.HeapType
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.HeapType
  nameWithType.vb: Heap(Of T).HeapType
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).HeapType
  name.vb: Heap(Of T).HeapType
  spec.csharp:
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1
    name: Heap
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1.HeapType
    name: HeapType
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.HeapType.html
  spec.vb:
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1
    name: Heap
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: ParmaGIS.Core.Utilities.Collections.Heap`1.HeapType
    name: HeapType
    href: ParmaGIS.Core.Utilities.Collections.Heap-1.HeapType.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Clear*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Clear
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Clear
  name: Clear
  nameWithType: Heap<T>.Clear
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Clear
  nameWithType.vb: Heap(Of T).Clear
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Clear
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Count*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Count
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Count
  name: Count
  nameWithType: Heap<T>.Count
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Count
  nameWithType.vb: Heap(Of T).Count
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Any*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Any
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Any
  name: Any
  nameWithType: Heap<T>.Any
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Any
  nameWithType.vb: Heap(Of T).Any
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Any
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Enqueue
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Enqueue__0_
  name: Enqueue
  nameWithType: Heap<T>.Enqueue
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Enqueue
  nameWithType.vb: Heap(Of T).Enqueue
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Dequeue
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Dequeue
  name: Dequeue
  nameWithType: Heap<T>.Dequeue
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Dequeue
  nameWithType.vb: Heap(Of T).Dequeue
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Dequeue
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.Peek*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.Peek
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_Peek
  name: Peek
  nameWithType: Heap<T>.Peek
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.Peek
  nameWithType.vb: Heap(Of T).Peek
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).Peek
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ParmaGIS.Core.Utilities.Collections.Heap`1.ToString*
  commentId: Overload:ParmaGIS.Core.Utilities.Collections.Heap`1.ToString
  href: ParmaGIS.Core.Utilities.Collections.Heap-1.html#ParmaGIS_Core_Utilities_Collections_Heap_1_ToString
  name: ToString
  nameWithType: Heap<T>.ToString
  fullName: ParmaGIS.Core.Utilities.Collections.Heap<T>.ToString
  nameWithType.vb: Heap(Of T).ToString
  fullName.vb: ParmaGIS.Core.Utilities.Collections.Heap(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
