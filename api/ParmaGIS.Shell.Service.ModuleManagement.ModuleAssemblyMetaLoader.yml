### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  commentId: T:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  id: ModuleAssemblyMetaLoader
  parent: ParmaGIS.Shell.Service.ModuleManagement
  children:
  - ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String})
  - ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String},System.String[])
  - ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.String[])
  - ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  langs:
  - csharp
  - vb
  name: ModuleAssemblyMetaLoader
  nameWithType: ModuleAssemblyMetaLoader
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  type: Class
  source:
    remote:
      path: common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ModuleAssemblyMetaLoader
    path: ../ParmaGIS master/common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
    startLine: 211
  assemblies:
  - ParmaGIS.Shell
  namespace: ParmaGIS.Shell.Service.ModuleManagement
  syntax:
    content: 'public class ModuleAssemblyMetaLoader : IModuleAssemblyMetaLoader'
    content.vb: Public Class ModuleAssemblyMetaLoader Implements IModuleAssemblyMetaLoader
  inheritance:
  - System.Object
  implements:
  - ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.String[])
  commentId: M:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  langs:
  - csharp
  - vb
  name: ModuleAssemblyMetaLoader(params string[])
  nameWithType: ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(params string[])
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(params string[])
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
    startLine: 314
  assemblies:
  - ParmaGIS.Shell
  namespace: ParmaGIS.Shell.Service.ModuleManagement
  syntax:
    content: public ModuleAssemblyMetaLoader(params string[] defaultAssemblies)
    parameters:
    - id: defaultAssemblies
      type: System.String[]
    content.vb: Public Sub New(ParamArray defaultAssemblies As String())
  overload: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor*
  nameWithType.vb: ModuleAssemblyMetaLoader.New(ParamArray String())
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.New(ParamArray String())
  name.vb: New(ParamArray String())
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String})
  commentId: M:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String})
  id: '#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String})'
  parent: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  langs:
  - csharp
  - vb
  name: ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?>)
  nameWithType: ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?>)
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(System.Func<object, System.Reflection.AssemblyName, string?>)
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
    startLine: 319
  assemblies:
  - ParmaGIS.Shell
  namespace: ParmaGIS.Shell.Service.ModuleManagement
  syntax:
    content: public ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?> resolver)
    parameters:
    - id: resolver
      type: System.Func{System.Object,System.Reflection.AssemblyName,System.String}
    content.vb: Public Sub New(resolver As Func(Of Object, AssemblyName, String))
  overload: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor*
  nameWithType.vb: ModuleAssemblyMetaLoader.New(Func(Of Object, AssemblyName, String))
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.New(System.Func(Of Object, System.Reflection.AssemblyName, String))
  name.vb: New(Func(Of Object, AssemblyName, String))
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String},System.String[])
  commentId: M:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String},System.String[])
  id: '#ctor(System.Func{System.Object,System.Reflection.AssemblyName,System.String},System.String[])'
  parent: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  langs:
  - csharp
  - vb
  name: ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?>, params string[])
  nameWithType: ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?>, params string[])
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader(System.Func<object, System.Reflection.AssemblyName, string?>, params string[])
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
    startLine: 324
  assemblies:
  - ParmaGIS.Shell
  namespace: ParmaGIS.Shell.Service.ModuleManagement
  syntax:
    content: public ModuleAssemblyMetaLoader(Func<object, AssemblyName, string?> resolver, params string[] defaultAssemblies)
    parameters:
    - id: resolver
      type: System.Func{System.Object,System.Reflection.AssemblyName,System.String}
    - id: defaultAssemblies
      type: System.String[]
    content.vb: Public Sub New(resolver As Func(Of Object, AssemblyName, String), ParamArray defaultAssemblies As String())
  overload: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor*
  nameWithType.vb: ModuleAssemblyMetaLoader.New(Func(Of Object, AssemblyName, String), ParamArray String())
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.New(System.Func(Of Object, System.Reflection.AssemblyName, String), ParamArray String())
  name.vb: New(Func(Of Object, AssemblyName, String), ParamArray String())
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  commentId: M:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  id: LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  parent: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader
  langs:
  - csharp
  - vb
  name: LoadModuleMeta(Type, params DirectoryInfo[])
  nameWithType: ModuleAssemblyMetaLoader.LoadModuleMeta(Type, params DirectoryInfo[])
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta(System.Type, params System.IO.DirectoryInfo[])
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: LoadModuleMeta
    path: ../ParmaGIS master/common/src/ParmaGIS.Shell/Services/ModuleManagement/ModulesLocator.cs
    startLine: 331
  assemblies:
  - ParmaGIS.Shell
  namespace: ParmaGIS.Shell.Service.ModuleManagement
  example: []
  syntax:
    content: public ModuleAssemblyMeta[] LoadModuleMeta(Type moduleType, params DirectoryInfo[] moduleDirs)
    parameters:
    - id: moduleType
      type: System.Type
    - id: moduleDirs
      type: System.IO.DirectoryInfo[]
    return:
      type: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta[]
    content.vb: Public Function LoadModuleMeta(moduleType As Type, ParamArray moduleDirs As DirectoryInfo()) As ModuleAssemblyMeta()
  overload: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta*
  implements:
  - ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  nameWithType.vb: ModuleAssemblyMetaLoader.LoadModuleMeta(Type, ParamArray DirectoryInfo())
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta(System.Type, ParamArray System.IO.DirectoryInfo())
  name.vb: LoadModuleMeta(Type, ParamArray DirectoryInfo())
references:
- uid: ParmaGIS.Shell.Service.ModuleManagement
  commentId: N:ParmaGIS.Shell.Service.ModuleManagement
  href: ParmaGIS.html
  name: ParmaGIS.Shell.Service.ModuleManagement
  nameWithType: ParmaGIS.Shell.Service.ModuleManagement
  fullName: ParmaGIS.Shell.Service.ModuleManagement
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Shell
    name: Shell
    href: ParmaGIS.Shell.html
  - name: .
  - uid: ParmaGIS.Shell.Service
    name: Service
    href: ParmaGIS.Shell.Service.html
  - name: .
  - uid: ParmaGIS.Shell.Service.ModuleManagement
    name: ModuleManagement
    href: ParmaGIS.Shell.Service.ModuleManagement.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Shell
    name: Shell
    href: ParmaGIS.Shell.html
  - name: .
  - uid: ParmaGIS.Shell.Service
    name: Service
    href: ParmaGIS.Shell.Service.html
  - name: .
  - uid: ParmaGIS.Shell.Service.ModuleManagement
    name: ModuleManagement
    href: ParmaGIS.Shell.Service.ModuleManagement.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader
  commentId: T:ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader
  parent: ParmaGIS.Shell.Service.ModuleManagement
  href: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.html
  name: IModuleAssemblyMetaLoader
  nameWithType: IModuleAssemblyMetaLoader
  fullName: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor*
  commentId: Overload:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.#ctor
  href: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.html#ParmaGIS_Shell_Service_ModuleManagement_ModuleAssemblyMetaLoader__ctor_System_String___
  name: ModuleAssemblyMetaLoader
  nameWithType: ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.ModuleAssemblyMetaLoader
  nameWithType.vb: ModuleAssemblyMetaLoader.New
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.New
  name.vb: New
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Func{System.Object,System.Reflection.AssemblyName,System.String}
  commentId: T:System.Func{System.Object,System.Reflection.AssemblyName,System.String}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<object, AssemblyName, string>
  nameWithType: Func<object, AssemblyName, string>
  fullName: System.Func<object, System.Reflection.AssemblyName, string>
  nameWithType.vb: Func(Of Object, AssemblyName, String)
  fullName.vb: System.Func(Of Object, System.Reflection.AssemblyName, String)
  name.vb: Func(Of Object, AssemblyName, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assemblyname
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assemblyname
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta*
  commentId: Overload:ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta
  href: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.html#ParmaGIS_Shell_Service_ModuleManagement_ModuleAssemblyMetaLoader_LoadModuleMeta_System_Type_System_IO_DirectoryInfo___
  name: LoadModuleMeta
  nameWithType: ModuleAssemblyMetaLoader.LoadModuleMeta
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMetaLoader.LoadModuleMeta
- uid: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  commentId: M:ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
  parent: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader
  isExternal: true
  href: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.html#ParmaGIS_Shell_Service_ModuleManagement_IModuleAssemblyMetaLoader_LoadModuleMeta_System_Type_System_IO_DirectoryInfo___
  name: LoadModuleMeta(Type, params DirectoryInfo[])
  nameWithType: IModuleAssemblyMetaLoader.LoadModuleMeta(Type, params DirectoryInfo[])
  fullName: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type, params System.IO.DirectoryInfo[])
  nameWithType.vb: IModuleAssemblyMetaLoader.LoadModuleMeta(Type, ParamArray DirectoryInfo())
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type, ParamArray System.IO.DirectoryInfo())
  name.vb: LoadModuleMeta(Type, ParamArray DirectoryInfo())
  spec.csharp:
  - uid: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
    name: LoadModuleMeta
    href: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.html#ParmaGIS_Shell_Service_ModuleManagement_IModuleAssemblyMetaLoader_LoadModuleMeta_System_Type_System_IO_DirectoryInfo___
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.IO.DirectoryInfo
    name: DirectoryInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.LoadModuleMeta(System.Type,System.IO.DirectoryInfo[])
    name: LoadModuleMeta
    href: ParmaGIS.Shell.Service.ModuleManagement.IModuleAssemblyMetaLoader.html#ParmaGIS_Shell_Service_ModuleManagement_IModuleAssemblyMetaLoader_LoadModuleMeta_System_Type_System_IO_DirectoryInfo___
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.IO.DirectoryInfo
    name: DirectoryInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  - name: (
  - name: )
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.DirectoryInfo[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo[]
  nameWithType: DirectoryInfo[]
  fullName: System.IO.DirectoryInfo[]
  nameWithType.vb: DirectoryInfo()
  fullName.vb: System.IO.DirectoryInfo()
  name.vb: DirectoryInfo()
  spec.csharp:
  - uid: System.IO.DirectoryInfo
    name: DirectoryInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.IO.DirectoryInfo
    name: DirectoryInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  - name: (
  - name: )
- uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta[]
  isExternal: true
  href: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta.html
  name: ModuleAssemblyMeta[]
  nameWithType: ModuleAssemblyMeta[]
  fullName: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta[]
  nameWithType.vb: ModuleAssemblyMeta()
  fullName.vb: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta()
  name.vb: ModuleAssemblyMeta()
  spec.csharp:
  - uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta
    name: ModuleAssemblyMeta
    href: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta
    name: ModuleAssemblyMeta
    href: ParmaGIS.Shell.Service.ModuleManagement.ModuleAssemblyMeta.html
  - name: (
  - name: )
