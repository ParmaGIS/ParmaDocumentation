### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers
  commentId: T:ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers
  id: ExpressionHelpers
  parent: ParmaGIS.Core.Utilities.Expressions
  children:
  - ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  langs:
  - csharp
  - vb
  name: ExpressionHelpers
  nameWithType: ExpressionHelpers
  fullName: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers
  type: Class
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ExpressionHelpers
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Expressions
  syntax:
    content: public static class ExpressionHelpers
    content.vb: Public Module ExpressionHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers
  langs:
  - csharp
  - vb
  name: GetPropertyName<TType, TProperty>(Expression<Func<TType, TProperty>>)
  nameWithType: ExpressionHelpers.GetPropertyName<TType, TProperty>(Expression<Func<TType, TProperty>>)
  fullName: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName<TType, TProperty>(System.Linq.Expressions.Expression<System.Func<TType, TProperty>>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetPropertyName
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
    startLine: 9
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Expressions
  syntax:
    content: public static string GetPropertyName<TType, TProperty>(this Expression<Func<TType, TProperty>> propertySelector)
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TType},{TProperty}}}
    typeParameters:
    - id: TType
    - id: TProperty
    return:
      type: System.String
    content.vb: Public Shared Function GetPropertyName(Of TType, TProperty)(propertySelector As Expression(Of Func(Of TType, TProperty))) As String
  overload: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName*
  nameWithType.vb: ExpressionHelpers.GetPropertyName(Of TType, TProperty)(Expression(Of Func(Of TType, TProperty)))
  fullName.vb: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName(Of TType, TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TType, TProperty)))
  name.vb: GetPropertyName(Of TType, TProperty)(Expression(Of Func(Of TType, TProperty)))
- uid: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: GetSetAccessor``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers
  langs:
  - csharp
  - vb
  name: GetSetAccessor<TType, TProperty>(Expression<Func<TType, TProperty>>)
  nameWithType: ExpressionHelpers.GetSetAccessor<TType, TProperty>(Expression<Func<TType, TProperty>>)
  fullName: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor<TType, TProperty>(System.Linq.Expressions.Expression<System.Func<TType, TProperty>>)
  type: Method
  source:
    remote:
      path: common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetSetAccessor
    path: ../ParmaGIS master/common/src/ParmaGIS.Core/Utilities/Expressions/ExpressionHelpers.cs
    startLine: 17
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Utilities.Expressions
  syntax:
    content: public static Action<TType, TProperty> GetSetAccessor<TType, TProperty>(this Expression<Func<TType, TProperty>> propertySelector)
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TType},{TProperty}}}
    typeParameters:
    - id: TType
    - id: TProperty
    return:
      type: System.Action{{TType},{TProperty}}
    content.vb: Public Shared Function GetSetAccessor(Of TType, TProperty)(propertySelector As Expression(Of Func(Of TType, TProperty))) As Action(Of TType, TProperty)
  overload: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor*
  nameWithType.vb: ExpressionHelpers.GetSetAccessor(Of TType, TProperty)(Expression(Of Func(Of TType, TProperty)))
  fullName.vb: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor(Of TType, TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TType, TProperty)))
  name.vb: GetSetAccessor(Of TType, TProperty)(Expression(Of Func(Of TType, TProperty)))
references:
- uid: ParmaGIS.Core.Utilities.Expressions
  commentId: N:ParmaGIS.Core.Utilities.Expressions
  href: ParmaGIS.html
  name: ParmaGIS.Core.Utilities.Expressions
  nameWithType: ParmaGIS.Core.Utilities.Expressions
  fullName: ParmaGIS.Core.Utilities.Expressions
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Expressions
    name: Expressions
    href: ParmaGIS.Core.Utilities.Expressions.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Utilities
    name: Utilities
    href: ParmaGIS.Core.Utilities.html
  - name: .
  - uid: ParmaGIS.Core.Utilities.Expressions
    name: Expressions
    href: ParmaGIS.Core.Utilities.Expressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName*
  commentId: Overload:ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName
  href: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.html#ParmaGIS_Core_Utilities_Expressions_ExpressionHelpers_GetPropertyName__2_System_Linq_Expressions_Expression_System_Func___0___1___
  name: GetPropertyName
  nameWithType: ExpressionHelpers.GetPropertyName
  fullName: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetPropertyName
- uid: System.Linq.Expressions.Expression{System.Func{{TType},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TType, TProperty>>
  nameWithType: Expression<Func<TType, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TType, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TType, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TType, TProperty))
  name.vb: Expression(Of Func(Of TType, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TType
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor*
  commentId: Overload:ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor
  href: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.html#ParmaGIS_Core_Utilities_Expressions_ExpressionHelpers_GetSetAccessor__2_System_Linq_Expressions_Expression_System_Func___0___1___
  name: GetSetAccessor
  nameWithType: ExpressionHelpers.GetSetAccessor
  fullName: ParmaGIS.Core.Utilities.Expressions.ExpressionHelpers.GetSetAccessor
- uid: System.Action{{TType},{TProperty}}
  commentId: T:System.Action{``0,``1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<TType, TProperty>
  nameWithType: Action<TType, TProperty>
  fullName: System.Action<TType, TProperty>
  nameWithType.vb: Action(Of TType, TProperty)
  fullName.vb: System.Action(Of TType, TProperty)
  name.vb: Action(Of TType, TProperty)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TType
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
