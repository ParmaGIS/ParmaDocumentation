### YamlMime:ManagedReference
items:
- uid: Common.Subject.Types.ApplicantType
  commentId: T:Common.Subject.Types.ApplicantType
  id: ApplicantType
  parent: Common.Subject.Types
  children:
  - Common.Subject.Types.ApplicantType.Businessman
  - Common.Subject.Types.ApplicantType.ForeignOrganization
  - Common.Subject.Types.ApplicantType.ForeignPrivatePerson
  - Common.Subject.Types.ApplicantType.Organization
  - Common.Subject.Types.ApplicantType.PrivatePerson
  langs:
  - csharp
  - vb
  name: ApplicantType
  nameWithType: ApplicantType
  fullName: Common.Subject.Types.ApplicantType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApplicantType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 668
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Тип Заявитель</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ApplicantType
    content.vb: >-
      <Serializable>

      Public Class ApplicantType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.Subject.Types.ApplicantType.PrivatePerson
  commentId: P:Common.Subject.Types.ApplicantType.PrivatePerson
  id: PrivatePerson
  parent: Common.Subject.Types.ApplicantType
  langs:
  - csharp
  - vb
  name: PrivatePerson
  nameWithType: ApplicantType.PrivatePerson
  fullName: Common.Subject.Types.ApplicantType.PrivatePerson
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PrivatePerson
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 680
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Физическое лицо</p>
  example: []
  syntax:
    content: public PersonType PrivatePerson { get; set; }
    parameters: []
    return:
      type: Common.Subject.Types.PersonType
    content.vb: Public Property PrivatePerson As PersonType
  overload: Common.Subject.Types.ApplicantType.PrivatePerson*
- uid: Common.Subject.Types.ApplicantType.Businessman
  commentId: P:Common.Subject.Types.ApplicantType.Businessman
  id: Businessman
  parent: Common.Subject.Types.ApplicantType
  langs:
  - csharp
  - vb
  name: Businessman
  nameWithType: ApplicantType.Businessman
  fullName: Common.Subject.Types.ApplicantType.Businessman
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Businessman
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 687
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Индивидуальный предприниматель</p>
  example: []
  syntax:
    content: public BusinessmanType Businessman { get; set; }
    parameters: []
    return:
      type: Common.Subject.Types.BusinessmanType
    content.vb: Public Property Businessman As BusinessmanType
  overload: Common.Subject.Types.ApplicantType.Businessman*
- uid: Common.Subject.Types.ApplicantType.Organization
  commentId: P:Common.Subject.Types.ApplicantType.Organization
  id: Organization
  parent: Common.Subject.Types.ApplicantType
  langs:
  - csharp
  - vb
  name: Organization
  nameWithType: ApplicantType.Organization
  fullName: Common.Subject.Types.ApplicantType.Organization
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Organization
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 694
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Юридическое лицо</p>
  example: []
  syntax:
    content: public OrganizationType Organization { get; set; }
    parameters: []
    return:
      type: Common.Subject.Types.OrganizationType
    content.vb: Public Property Organization As OrganizationType
  overload: Common.Subject.Types.ApplicantType.Organization*
- uid: Common.Subject.Types.ApplicantType.ForeignOrganization
  commentId: P:Common.Subject.Types.ApplicantType.ForeignOrganization
  id: ForeignOrganization
  parent: Common.Subject.Types.ApplicantType
  langs:
  - csharp
  - vb
  name: ForeignOrganization
  nameWithType: ApplicantType.ForeignOrganization
  fullName: Common.Subject.Types.ApplicantType.ForeignOrganization
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForeignOrganization
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 701
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Иностранное юридическое лицо</p>
  example: []
  syntax:
    content: public ForeignOrganizationType ForeignOrganization { get; set; }
    parameters: []
    return:
      type: Common.Subject.Types.ForeignOrganizationType
    content.vb: Public Property ForeignOrganization As ForeignOrganizationType
  overload: Common.Subject.Types.ApplicantType.ForeignOrganization*
- uid: Common.Subject.Types.ApplicantType.ForeignPrivatePerson
  commentId: P:Common.Subject.Types.ApplicantType.ForeignPrivatePerson
  id: ForeignPrivatePerson
  parent: Common.Subject.Types.ApplicantType
  langs:
  - csharp
  - vb
  name: ForeignPrivatePerson
  nameWithType: ApplicantType.ForeignPrivatePerson
  fullName: Common.Subject.Types.ApplicantType.ForeignPrivatePerson
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForeignPrivatePerson
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 708
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Иностранное физическое лицо</p>
  example: []
  syntax:
    content: public ForeignPersonType ForeignPrivatePerson { get; set; }
    parameters: []
    return:
      type: Common.Subject.Types.ForeignPersonType
    content.vb: Public Property ForeignPrivatePerson As ForeignPersonType
  overload: Common.Subject.Types.ApplicantType.ForeignPrivatePerson*
references:
- uid: Common.Subject.Types
  commentId: N:Common.Subject.Types
  href: Common.html
  name: Common.Subject.Types
  nameWithType: Common.Subject.Types
  fullName: Common.Subject.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Subject
    name: Subject
    href: Common.Subject.html
  - name: .
  - uid: Common.Subject.Types
    name: Types
    href: Common.Subject.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Subject
    name: Subject
    href: Common.Subject.html
  - name: .
  - uid: Common.Subject.Types
    name: Types
    href: Common.Subject.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.Subject.Types.ApplicantType.PrivatePerson*
  commentId: Overload:Common.Subject.Types.ApplicantType.PrivatePerson
  href: Common.Subject.Types.ApplicantType.html#Common_Subject_Types_ApplicantType_PrivatePerson
  name: PrivatePerson
  nameWithType: ApplicantType.PrivatePerson
  fullName: Common.Subject.Types.ApplicantType.PrivatePerson
- uid: Common.Subject.Types.PersonType
  commentId: T:Common.Subject.Types.PersonType
  parent: Common.Subject.Types
  href: Common.Subject.Types.PersonType.html
  name: PersonType
  nameWithType: PersonType
  fullName: Common.Subject.Types.PersonType
- uid: Common.Subject.Types.ApplicantType.Businessman*
  commentId: Overload:Common.Subject.Types.ApplicantType.Businessman
  href: Common.Subject.Types.ApplicantType.html#Common_Subject_Types_ApplicantType_Businessman
  name: Businessman
  nameWithType: ApplicantType.Businessman
  fullName: Common.Subject.Types.ApplicantType.Businessman
- uid: Common.Subject.Types.BusinessmanType
  commentId: T:Common.Subject.Types.BusinessmanType
  parent: Common.Subject.Types
  href: Common.Subject.Types.BusinessmanType.html
  name: BusinessmanType
  nameWithType: BusinessmanType
  fullName: Common.Subject.Types.BusinessmanType
- uid: Common.Subject.Types.ApplicantType.Organization*
  commentId: Overload:Common.Subject.Types.ApplicantType.Organization
  href: Common.Subject.Types.ApplicantType.html#Common_Subject_Types_ApplicantType_Organization
  name: Organization
  nameWithType: ApplicantType.Organization
  fullName: Common.Subject.Types.ApplicantType.Organization
- uid: Common.Subject.Types.OrganizationType
  commentId: T:Common.Subject.Types.OrganizationType
  parent: Common.Subject.Types
  href: Common.Subject.Types.OrganizationType.html
  name: OrganizationType
  nameWithType: OrganizationType
  fullName: Common.Subject.Types.OrganizationType
- uid: Common.Subject.Types.ApplicantType.ForeignOrganization*
  commentId: Overload:Common.Subject.Types.ApplicantType.ForeignOrganization
  href: Common.Subject.Types.ApplicantType.html#Common_Subject_Types_ApplicantType_ForeignOrganization
  name: ForeignOrganization
  nameWithType: ApplicantType.ForeignOrganization
  fullName: Common.Subject.Types.ApplicantType.ForeignOrganization
- uid: Common.Subject.Types.ForeignOrganizationType
  commentId: T:Common.Subject.Types.ForeignOrganizationType
  parent: Common.Subject.Types
  href: Common.Subject.Types.ForeignOrganizationType.html
  name: ForeignOrganizationType
  nameWithType: ForeignOrganizationType
  fullName: Common.Subject.Types.ForeignOrganizationType
- uid: Common.Subject.Types.ApplicantType.ForeignPrivatePerson*
  commentId: Overload:Common.Subject.Types.ApplicantType.ForeignPrivatePerson
  href: Common.Subject.Types.ApplicantType.html#Common_Subject_Types_ApplicantType_ForeignPrivatePerson
  name: ForeignPrivatePerson
  nameWithType: ApplicantType.ForeignPrivatePerson
  fullName: Common.Subject.Types.ApplicantType.ForeignPrivatePerson
- uid: Common.Subject.Types.ForeignPersonType
  commentId: T:Common.Subject.Types.ForeignPersonType
  parent: Common.Subject.Types
  href: Common.Subject.Types.ForeignPersonType.html
  name: ForeignPersonType
  nameWithType: ForeignPersonType
  fullName: Common.Subject.Types.ForeignPersonType
