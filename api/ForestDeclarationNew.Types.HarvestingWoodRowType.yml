### YamlMime:ManagedReference
items:
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType
  commentId: T:ForestDeclarationNew.Types.HarvestingWoodRowType
  id: HarvestingWoodRowType
  parent: ForestDeclarationNew.Types
  children:
  - ForestDeclarationNew.Types.HarvestingWoodRowType.Area
  - ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
  - ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
  - ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
  - ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
  - ForestDeclarationNew.Types.HarvestingWoodRowType.Location
  - ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
  - ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
  - ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
  - ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
  - ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
  langs:
  - csharp
  - vb
  name: HarvestingWoodRowType
  nameWithType: HarvestingWoodRowType
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HarvestingWoodRowType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 730
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  syntax:
    content: >-
      [Serializable]

      public class HarvestingWoodRowType
    content.vb: >-
      <Serializable>

      Public Class HarvestingWoodRowType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Location
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.Location
  id: Location
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: HarvestingWoodRowType.Location
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Location
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Location
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 741
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Местоположение</p>
  example: []
  syntax:
    content: >-
      [Required]

      public Location2Type Location { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.Location2Type
    content.vb: >-
      <Required>

      Public Property Location As Location2Type
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.Location*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Area
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.Area
  id: Area
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: HarvestingWoodRowType.Area
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Area
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Area
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 749
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Площадь эксплуатационная</p>
  example: []
  syntax:
    content: >-
      [Required]

      public AreaType Area { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.AreaType
    content.vb: >-
      <Required>

      Public Property Area As AreaType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.Area*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
  id: FormCutting
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: FormCutting
  nameWithType: HarvestingWoodRowType.FormCutting
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FormCutting
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 757
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Форма рубки</p>
  example: []
  syntax:
    content: public FellingForestKindEType FormCutting { get; set; }
    parameters: []
    return:
      type: Common.Enums.FellingForest.Types.FellingForestKindEType
    content.vb: Public Property FormCutting As FellingForestKindEType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
  id: FormCuttingSpecified
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: FormCuttingSpecified
  nameWithType: HarvestingWoodRowType.FormCuttingSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FormCuttingSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 764
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets or sets a value indicating whether the FormCutting property is specified.</p>
  example: []
  syntax:
    content: public bool FormCuttingSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FormCuttingSpecified As Boolean
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
  id: TypeCutting
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: TypeCutting
  nameWithType: HarvestingWoodRowType.TypeCutting
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: TypeCutting
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 770
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Указывается элемент справочника "Виды рубок"</p>
  example: []
  syntax:
    content: public CuttingGroupCategoryKindEType TypeCutting { get; set; }
    parameters: []
    return:
      type: Common.Enums.CuttingGroupCategory.Types.CuttingGroupCategoryKindEType
    content.vb: Public Property TypeCutting As CuttingGroupCategoryKindEType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
  id: TypeCuttingSpecified
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: TypeCuttingSpecified
  nameWithType: HarvestingWoodRowType.TypeCuttingSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: TypeCuttingSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 777
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets or sets a value indicating whether the TypeCutting property is specified.</p>
  example: []
  syntax:
    content: public bool TypeCuttingSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TypeCuttingSpecified As Boolean
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
  id: Farm
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: Farm
  nameWithType: HarvestingWoodRowType.Farm
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Farm
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 783
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Хозяйства</p>
  example: []
  syntax:
    content: public FarmsKindEType Farm { get; set; }
    parameters: []
    return:
      type: Common.Enums.Farms.Types.FarmsKindEType
    content.vb: Public Property Farm As FarmsKindEType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.Farm*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
  id: FarmSpecified
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: FarmSpecified
  nameWithType: HarvestingWoodRowType.FarmSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FarmSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 790
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets or sets a value indicating whether the Farm property is specified.</p>
  example: []
  syntax:
    content: public bool FarmSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FarmSpecified As Boolean
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
  id: Tree
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: Tree
  nameWithType: HarvestingWoodRowType.Tree
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Tree
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 796
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Породный состав (Указывается элемент справочника "Породы древесины")</p>
  example: []
  syntax:
    content: public TreeType Tree { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.TreeType
    content.vb: Public Property Tree As TreeType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.Tree*
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
  id: UnitType
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: UnitType
  nameWithType: HarvestingWoodRowType.UnitType
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: UnitType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 803
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Единица измерения</p>
  example: []
  syntax:
    content: >-
      [Required]

      public UnitTypeType UnitType { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.UnitTypeType
    content.vb: >-
      <Required>

      Public Property UnitType As UnitTypeType
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
  commentId: P:ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
  id: Volume
  parent: ForestDeclarationNew.Types.HarvestingWoodRowType
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: HarvestingWoodRowType.Volume
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Volume
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 814
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Объем</p>

    <p>Положительное число до 1 знаков после запятой</p>

    <p>Minimum inclusive value: 0.</p>

    <p>Total number of digits in fraction: 1.</p>
  example: []
  syntax:
    content: >-
      [Required]

      public decimal Volume { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <Required>

      Public Property Volume As Decimal
  overload: ForestDeclarationNew.Types.HarvestingWoodRowType.Volume*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
references:
- uid: ForestDeclarationNew.Types
  commentId: N:ForestDeclarationNew.Types
  href: ForestDeclarationNew.html
  name: ForestDeclarationNew.Types
  nameWithType: ForestDeclarationNew.Types
  fullName: ForestDeclarationNew.Types
  spec.csharp:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
  spec.vb:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Location*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.Location
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_Location
  name: Location
  nameWithType: HarvestingWoodRowType.Location
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Location
- uid: Common.CommonReport.Types.Location2Type
  commentId: T:Common.CommonReport.Types.Location2Type
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.Location2Type.html
  name: Location2Type
  nameWithType: Location2Type
  fullName: Common.CommonReport.Types.Location2Type
- uid: Common.CommonReport.Types
  commentId: N:Common.CommonReport.Types
  href: Common.html
  name: Common.CommonReport.Types
  nameWithType: Common.CommonReport.Types
  fullName: Common.CommonReport.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Area*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.Area
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_Area
  name: Area
  nameWithType: HarvestingWoodRowType.Area
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Area
- uid: Common.CommonReport.Types.AreaType
  commentId: T:Common.CommonReport.Types.AreaType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.AreaType.html
  name: AreaType
  nameWithType: AreaType
  fullName: Common.CommonReport.Types.AreaType
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_FormCutting
  name: FormCutting
  nameWithType: HarvestingWoodRowType.FormCutting
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCutting
- uid: Common.Enums.FellingForest.Types.FellingForestKindEType
  commentId: T:Common.Enums.FellingForest.Types.FellingForestKindEType
  parent: Common.Enums.FellingForest.Types
  href: Common.Enums.FellingForest.Types.FellingForestKindEType.html
  name: FellingForestKindEType
  nameWithType: FellingForestKindEType
  fullName: Common.Enums.FellingForest.Types.FellingForestKindEType
- uid: Common.Enums.FellingForest.Types
  commentId: N:Common.Enums.FellingForest.Types
  href: Common.html
  name: Common.Enums.FellingForest.Types
  nameWithType: Common.Enums.FellingForest.Types
  fullName: Common.Enums.FellingForest.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.FellingForest
    name: FellingForest
    href: Common.Enums.FellingForest.html
  - name: .
  - uid: Common.Enums.FellingForest.Types
    name: Types
    href: Common.Enums.FellingForest.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.FellingForest
    name: FellingForest
    href: Common.Enums.FellingForest.html
  - name: .
  - uid: Common.Enums.FellingForest.Types
    name: Types
    href: Common.Enums.FellingForest.Types.html
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_FormCuttingSpecified
  name: FormCuttingSpecified
  nameWithType: HarvestingWoodRowType.FormCuttingSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FormCuttingSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_TypeCutting
  name: TypeCutting
  nameWithType: HarvestingWoodRowType.TypeCutting
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCutting
- uid: Common.Enums.CuttingGroupCategory.Types.CuttingGroupCategoryKindEType
  commentId: T:Common.Enums.CuttingGroupCategory.Types.CuttingGroupCategoryKindEType
  parent: Common.Enums.CuttingGroupCategory.Types
  href: Common.Enums.CuttingGroupCategory.Types.CuttingGroupCategoryKindEType.html
  name: CuttingGroupCategoryKindEType
  nameWithType: CuttingGroupCategoryKindEType
  fullName: Common.Enums.CuttingGroupCategory.Types.CuttingGroupCategoryKindEType
- uid: Common.Enums.CuttingGroupCategory.Types
  commentId: N:Common.Enums.CuttingGroupCategory.Types
  href: Common.html
  name: Common.Enums.CuttingGroupCategory.Types
  nameWithType: Common.Enums.CuttingGroupCategory.Types
  fullName: Common.Enums.CuttingGroupCategory.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.CuttingGroupCategory
    name: CuttingGroupCategory
    href: Common.Enums.CuttingGroupCategory.html
  - name: .
  - uid: Common.Enums.CuttingGroupCategory.Types
    name: Types
    href: Common.Enums.CuttingGroupCategory.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.CuttingGroupCategory
    name: CuttingGroupCategory
    href: Common.Enums.CuttingGroupCategory.html
  - name: .
  - uid: Common.Enums.CuttingGroupCategory.Types
    name: Types
    href: Common.Enums.CuttingGroupCategory.Types.html
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_TypeCuttingSpecified
  name: TypeCuttingSpecified
  nameWithType: HarvestingWoodRowType.TypeCuttingSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.TypeCuttingSpecified
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Farm*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_Farm
  name: Farm
  nameWithType: HarvestingWoodRowType.Farm
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Farm
- uid: Common.Enums.Farms.Types.FarmsKindEType
  commentId: T:Common.Enums.Farms.Types.FarmsKindEType
  parent: Common.Enums.Farms.Types
  href: Common.Enums.Farms.Types.FarmsKindEType.html
  name: FarmsKindEType
  nameWithType: FarmsKindEType
  fullName: Common.Enums.Farms.Types.FarmsKindEType
- uid: Common.Enums.Farms.Types
  commentId: N:Common.Enums.Farms.Types
  href: Common.html
  name: Common.Enums.Farms.Types
  nameWithType: Common.Enums.Farms.Types
  fullName: Common.Enums.Farms.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Farms
    name: Farms
    href: Common.Enums.Farms.html
  - name: .
  - uid: Common.Enums.Farms.Types
    name: Types
    href: Common.Enums.Farms.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Farms
    name: Farms
    href: Common.Enums.Farms.html
  - name: .
  - uid: Common.Enums.Farms.Types
    name: Types
    href: Common.Enums.Farms.Types.html
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_FarmSpecified
  name: FarmSpecified
  nameWithType: HarvestingWoodRowType.FarmSpecified
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.FarmSpecified
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Tree*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_Tree
  name: Tree
  nameWithType: HarvestingWoodRowType.Tree
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Tree
- uid: Common.CommonReport.Types.TreeType
  commentId: T:Common.CommonReport.Types.TreeType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.TreeType.html
  name: TreeType
  nameWithType: TreeType
  fullName: Common.CommonReport.Types.TreeType
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_UnitType
  name: UnitType
  nameWithType: HarvestingWoodRowType.UnitType
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.UnitType
- uid: Common.CommonReport.Types.UnitTypeType
  commentId: T:Common.CommonReport.Types.UnitTypeType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.UnitTypeType.html
  name: UnitTypeType
  nameWithType: UnitTypeType
  fullName: Common.CommonReport.Types.UnitTypeType
- uid: ForestDeclarationNew.Types.HarvestingWoodRowType.Volume*
  commentId: Overload:ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
  href: ForestDeclarationNew.Types.HarvestingWoodRowType.html#ForestDeclarationNew_Types_HarvestingWoodRowType_Volume
  name: Volume
  nameWithType: HarvestingWoodRowType.Volume
  fullName: ForestDeclarationNew.Types.HarvestingWoodRowType.Volume
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
