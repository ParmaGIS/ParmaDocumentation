### YamlMime:ManagedReference
items:
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  commentId: T:ForestDeclarationNew.Types.OtherUsageObjectsRowType
  id: OtherUsageObjectsRowType
  parent: ForestDeclarationNew.Types
  children:
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
  - ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
  langs:
  - csharp
  - vb
  name: OtherUsageObjectsRowType
  nameWithType: OtherUsageObjectsRowType
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OtherUsageObjectsRowType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1113
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  syntax:
    content: >-
      [Serializable]

      public class OtherUsageObjectsRowType
    content.vb: >-
      <Serializable>

      Public Class OtherUsageObjectsRowType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
  id: Object
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: OtherUsageObjectsRowType.Object
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Object
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1124
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Наименование объекта не лесной инфраструктуры</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ForestNonInfrastructKindEType Object { get; set; }
    parameters: []
    return:
      type: Common.Enums.ForestNonInfrastruct.Types.ForestNonInfrastructKindEType
    content.vb: >-
      <Required>

      Public Property [Object] As ForestNonInfrastructKindEType
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
  id: ObjectNumber
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: ObjectNumber
  nameWithType: OtherUsageObjectsRowType.ObjectNumber
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObjectNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1135
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Номер объекта лесной инфраструктуры</p>

    <p>Тип Строка длиной от 1 до 50 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string ObjectNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property ObjectNumber As String
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
  id: Measure
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: Measure
  nameWithType: OtherUsageObjectsRowType.Measure
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Measure
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1144
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Объект мероприятия</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ToForestDeclarationKindEType Measure { get; set; }
    parameters: []
    return:
      type: Common.Enums.ToForestDeclaration.Types.ToForestDeclarationKindEType
    content.vb: >-
      <Required>

      Public Property Measure As ToForestDeclarationKindEType
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
  id: Location
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: OtherUsageObjectsRowType.Location
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Location
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1152
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Местоположение</p>
  example: []
  syntax:
    content: >-
      [Required]

      public Location2Type Location { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.Location2Type
    content.vb: >-
      <Required>

      Public Property Location As Location2Type
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
  id: Area
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: OtherUsageObjectsRowType.Area
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Area
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1160
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Площадь объекта, га</p>
  example: []
  syntax:
    content: >-
      [Required]

      public AreaType Area { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.AreaType
    content.vb: >-
      <Required>

      Public Property Area As AreaType
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
  commentId: P:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
  id: Cutting
  parent: ForestDeclarationNew.Types.OtherUsageObjectsRowType
  langs:
  - csharp
  - vb
  name: Cutting
  nameWithType: OtherUsageObjectsRowType.Cutting
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Cutting
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 1168
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Площадь рубки, га</p>
  example: []
  syntax:
    content: public CuttingType Cutting { get; set; }
    parameters: []
    return:
      type: ForestDeclarationNew.Types.CuttingType
    content.vb: Public Property Cutting As CuttingType
  overload: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting*
references:
- uid: ForestDeclarationNew.Types
  commentId: N:ForestDeclarationNew.Types
  href: ForestDeclarationNew.html
  name: ForestDeclarationNew.Types
  nameWithType: ForestDeclarationNew.Types
  fullName: ForestDeclarationNew.Types
  spec.csharp:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
  spec.vb:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_Object
  name: Object
  nameWithType: OtherUsageObjectsRowType.Object
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Object
- uid: Common.Enums.ForestNonInfrastruct.Types.ForestNonInfrastructKindEType
  commentId: T:Common.Enums.ForestNonInfrastruct.Types.ForestNonInfrastructKindEType
  parent: Common.Enums.ForestNonInfrastruct.Types
  href: Common.Enums.ForestNonInfrastruct.Types.ForestNonInfrastructKindEType.html
  name: ForestNonInfrastructKindEType
  nameWithType: ForestNonInfrastructKindEType
  fullName: Common.Enums.ForestNonInfrastruct.Types.ForestNonInfrastructKindEType
- uid: Common.Enums.ForestNonInfrastruct.Types
  commentId: N:Common.Enums.ForestNonInfrastruct.Types
  href: Common.html
  name: Common.Enums.ForestNonInfrastruct.Types
  nameWithType: Common.Enums.ForestNonInfrastruct.Types
  fullName: Common.Enums.ForestNonInfrastruct.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ForestNonInfrastruct
    name: ForestNonInfrastruct
    href: Common.Enums.ForestNonInfrastruct.html
  - name: .
  - uid: Common.Enums.ForestNonInfrastruct.Types
    name: Types
    href: Common.Enums.ForestNonInfrastruct.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ForestNonInfrastruct
    name: ForestNonInfrastruct
    href: Common.Enums.ForestNonInfrastruct.html
  - name: .
  - uid: Common.Enums.ForestNonInfrastruct.Types
    name: Types
    href: Common.Enums.ForestNonInfrastruct.Types.html
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_ObjectNumber
  name: ObjectNumber
  nameWithType: OtherUsageObjectsRowType.ObjectNumber
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.ObjectNumber
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_Measure
  name: Measure
  nameWithType: OtherUsageObjectsRowType.Measure
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Measure
- uid: Common.Enums.ToForestDeclaration.Types.ToForestDeclarationKindEType
  commentId: T:Common.Enums.ToForestDeclaration.Types.ToForestDeclarationKindEType
  parent: Common.Enums.ToForestDeclaration.Types
  href: Common.Enums.ToForestDeclaration.Types.ToForestDeclarationKindEType.html
  name: ToForestDeclarationKindEType
  nameWithType: ToForestDeclarationKindEType
  fullName: Common.Enums.ToForestDeclaration.Types.ToForestDeclarationKindEType
- uid: Common.Enums.ToForestDeclaration.Types
  commentId: N:Common.Enums.ToForestDeclaration.Types
  href: Common.html
  name: Common.Enums.ToForestDeclaration.Types
  nameWithType: Common.Enums.ToForestDeclaration.Types
  fullName: Common.Enums.ToForestDeclaration.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ToForestDeclaration
    name: ToForestDeclaration
    href: Common.Enums.ToForestDeclaration.html
  - name: .
  - uid: Common.Enums.ToForestDeclaration.Types
    name: Types
    href: Common.Enums.ToForestDeclaration.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ToForestDeclaration
    name: ToForestDeclaration
    href: Common.Enums.ToForestDeclaration.html
  - name: .
  - uid: Common.Enums.ToForestDeclaration.Types
    name: Types
    href: Common.Enums.ToForestDeclaration.Types.html
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_Location
  name: Location
  nameWithType: OtherUsageObjectsRowType.Location
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Location
- uid: Common.CommonReport.Types.Location2Type
  commentId: T:Common.CommonReport.Types.Location2Type
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.Location2Type.html
  name: Location2Type
  nameWithType: Location2Type
  fullName: Common.CommonReport.Types.Location2Type
- uid: Common.CommonReport.Types
  commentId: N:Common.CommonReport.Types
  href: Common.html
  name: Common.CommonReport.Types
  nameWithType: Common.CommonReport.Types
  fullName: Common.CommonReport.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_Area
  name: Area
  nameWithType: OtherUsageObjectsRowType.Area
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Area
- uid: Common.CommonReport.Types.AreaType
  commentId: T:Common.CommonReport.Types.AreaType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.AreaType.html
  name: AreaType
  nameWithType: AreaType
  fullName: Common.CommonReport.Types.AreaType
- uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting*
  commentId: Overload:ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
  href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html#ForestDeclarationNew_Types_OtherUsageObjectsRowType_Cutting
  name: Cutting
  nameWithType: OtherUsageObjectsRowType.Cutting
  fullName: ForestDeclarationNew.Types.OtherUsageObjectsRowType.Cutting
- uid: ForestDeclarationNew.Types.CuttingType
  commentId: T:ForestDeclarationNew.Types.CuttingType
  parent: ForestDeclarationNew.Types
  href: ForestDeclarationNew.Types.CuttingType.html
  name: CuttingType
  nameWithType: CuttingType
  fullName: ForestDeclarationNew.Types.CuttingType
