### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  commentId: T:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  id: DALCatalogRepositoryBase`3.ICatalogContainer
  parent: ParmaGIS.Modules.Data.Space.DAL
  children:
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem(`2)
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem(`0)
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType
  - ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem(`2)
  langs:
  - csharp
  - vb
  name: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer
  type: Interface
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ICatalogContainer
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 13
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: protected interface DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer
    content.vb: Protected Interface DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer
  name.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType
  commentId: P:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType
  id: ItemType
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: ItemType
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.ItemType
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.ItemType
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ItemType
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 15
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: Type ItemType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property ItemType As Type
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.ItemType
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.ItemType
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog
  commentId: P:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog
  id: Catalog
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: Catalog
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.Catalog
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.Catalog
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Catalog
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 16
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: TCatalog Catalog { get; }
    parameters: []
    return:
      type: '{TCatalog}'
    content.vb: ReadOnly Property Catalog As TCatalog
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.Catalog
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.Catalog
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems
  id: GetItems
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: GetItems()
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItems()
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItems()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetItems
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 17
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: TCatalogItem[] GetItems()
    return:
      type: '{TCatalogItem}[]'
    content.vb: Function GetItems() As TCatalogItem()
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItems()
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItems()
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem(`0)
  id: GetItem(`0)
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: GetItem(TObjectId)
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItem(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItem(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetItem
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 18
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: TCatalogItem? GetItem(TObjectId id)
    parameters:
    - id: id
      type: '{TObjectId}'
    return:
      type: '{TCatalogItem}'
    content.vb: Function GetItem(id As TObjectId) As TCatalogItem
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItem(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItem(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem(`2)
  id: AddItem(`2)
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: AddItem(TCatalogItem)
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.AddItem(TCatalogItem)
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.AddItem(TCatalogItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AddItem
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 19
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: void AddItem(TCatalogItem item)
    parameters:
    - id: item
      type: '{TCatalogItem}'
    content.vb: Sub AddItem(item As TCatalogItem)
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.AddItem(TCatalogItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.AddItem(TCatalogItem)
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem(`2)
  id: RemoveItem(`2)
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: RemoveItem(TCatalogItem)
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.RemoveItem(TCatalogItem)
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.RemoveItem(TCatalogItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveItem
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 20
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: void RemoveItem(TCatalogItem item)
    parameters:
    - id: item
      type: '{TCatalogItem}'
    content.vb: Sub RemoveItem(item As TCatalogItem)
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.RemoveItem(TCatalogItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.RemoveItem(TCatalogItem)
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem
  id: CreateItem
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: CreateItem()
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.CreateItem()
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.CreateItem()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateItem
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 21
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: TCatalogItem CreateItem()
    return:
      type: '{TCatalogItem}'
    content.vb: Function CreateItem() As TCatalogItem
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.CreateItem()
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.CreateItem()
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery
  commentId: M:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery
  id: GetItemsQuery
  parent: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer
  langs:
  - csharp
  - vb
  name: GetItemsQuery()
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItemsQuery()
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItemsQuery()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetItemsQuery
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/DAL/DALCatalogRepositoryBase.cs
    startLine: 22
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.DAL
  syntax:
    content: IQueryable<TCatalogItem> GetItemsQuery()
    return:
      type: System.Linq.IQueryable{{TCatalogItem}}
    content.vb: Function GetItemsQuery() As IQueryable(Of TCatalogItem)
  overload: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery*
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItemsQuery()
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItemsQuery()
references:
- uid: ParmaGIS.Modules.Data.Space.DAL
  commentId: N:ParmaGIS.Modules.Data.Space.DAL
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.DAL
  nameWithType: ParmaGIS.Modules.Data.Space.DAL
  fullName: ParmaGIS.Modules.Data.Space.DAL
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.DAL
    name: DAL
    href: ParmaGIS.Modules.Data.Space.DAL.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.DAL
    name: DAL
    href: ParmaGIS.Modules.Data.Space.DAL.html
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.ItemType
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_ItemType
  name: ItemType
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.ItemType
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.ItemType
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.ItemType
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.ItemType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.Catalog
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_Catalog
  name: Catalog
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.Catalog
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.Catalog
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.Catalog
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.Catalog
- uid: '{TCatalog}'
  commentId: '!:TCatalog'
  definition: TCatalog
  name: TCatalog
  nameWithType: TCatalog
  fullName: TCatalog
- uid: TCatalog
  name: TCatalog
  nameWithType: TCatalog
  fullName: TCatalog
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItems
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_GetItems
  name: GetItems
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItems
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItems
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItems
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItems
- uid: '{TCatalogItem}[]'
  isExternal: true
  name: TCatalogItem[]
  nameWithType: TCatalogItem[]
  fullName: TCatalogItem[]
  nameWithType.vb: TCatalogItem()
  fullName.vb: TCatalogItem()
  name.vb: TCatalogItem()
  spec.csharp:
  - name: TCatalogItem
  - name: '['
  - name: ']'
  spec.vb:
  - name: TCatalogItem
  - name: (
  - name: )
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItem
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_GetItem__0_
  name: GetItem
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItem
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItem
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItem
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItem
- uid: '{TObjectId}'
  commentId: '!:TObjectId'
  definition: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: '{TCatalogItem}'
  commentId: '!:TCatalogItem'
  definition: TCatalogItem
  name: TCatalogItem
  nameWithType: TCatalogItem
  fullName: TCatalogItem
- uid: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: TCatalogItem
  name: TCatalogItem
  nameWithType: TCatalogItem
  fullName: TCatalogItem
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.AddItem
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_AddItem__2_
  name: AddItem
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.AddItem
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.AddItem
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.AddItem
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.AddItem
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.RemoveItem
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_RemoveItem__2_
  name: RemoveItem
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.RemoveItem
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.RemoveItem
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.RemoveItem
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.RemoveItem
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.CreateItem
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_CreateItem
  name: CreateItem
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.CreateItem
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.CreateItem
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.CreateItem
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.CreateItem
- uid: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery*
  commentId: Overload:ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase`3.ICatalogContainer.GetItemsQuery
  href: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase-3.ICatalogContainer.html#ParmaGIS_Modules_Data_Space_DAL_DALCatalogRepositoryBase_3_ICatalogContainer_GetItemsQuery
  name: GetItemsQuery
  nameWithType: DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItemsQuery
  fullName: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase<TObjectId, TCatalog, TCatalogItem>.ICatalogContainer.GetItemsQuery
  nameWithType.vb: DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItemsQuery
  fullName.vb: ParmaGIS.Modules.Data.Space.DAL.DALCatalogRepositoryBase(Of TObjectId, TCatalog, TCatalogItem).ICatalogContainer.GetItemsQuery
- uid: System.Linq.IQueryable{{TCatalogItem}}
  commentId: T:System.Linq.IQueryable{`2}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<TCatalogItem>
  nameWithType: IQueryable<TCatalogItem>
  fullName: System.Linq.IQueryable<TCatalogItem>
  nameWithType.vb: IQueryable(Of TCatalogItem)
  fullName.vb: System.Linq.IQueryable(Of TCatalogItem)
  name.vb: IQueryable(Of TCatalogItem)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TCatalogItem
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCatalogItem
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
