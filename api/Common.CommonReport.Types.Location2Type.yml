### YamlMime:ManagedReference
items:
- uid: Common.CommonReport.Types.Location2Type
  commentId: T:Common.CommonReport.Types.Location2Type
  id: Location2Type
  parent: Common.CommonReport.Types
  children:
  - Common.CommonReport.Types.Location2Type.CuttingArea
  - Common.CommonReport.Types.Location2Type.Forestry
  - Common.CommonReport.Types.Location2Type.Quarter
  - Common.CommonReport.Types.Location2Type.Subforestry
  - Common.CommonReport.Types.Location2Type.TaxationUnit
  - Common.CommonReport.Types.Location2Type.Tract
  langs:
  - csharp
  - vb
  name: Location2Type
  nameWithType: Location2Type
  fullName: Common.CommonReport.Types.Location2Type
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Location2Type
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 499
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: <p>Местоположение</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Location2Type
    content.vb: >-
      <Serializable>

      Public Class Location2Type
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.CommonReport.Types.Location2Type.Forestry
  commentId: P:Common.CommonReport.Types.Location2Type.Forestry
  id: Forestry
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: Forestry
  nameWithType: Location2Type.Forestry
  fullName: Common.CommonReport.Types.Location2Type.Forestry
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Forestry
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 511
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: <p>Наименование и учетный номер лесничества (лесопарка)</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ForestryKindEType Forestry { get; set; }
    parameters: []
    return:
      type: Common.Enums.Forestry.Types.ForestryKindEType
    content.vb: >-
      <Required>

      Public Property Forestry As ForestryKindEType
  overload: Common.CommonReport.Types.Location2Type.Forestry*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.CommonReport.Types.Location2Type.Subforestry
  commentId: P:Common.CommonReport.Types.Location2Type.Subforestry
  id: Subforestry
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: Subforestry
  nameWithType: Location2Type.Subforestry
  fullName: Common.CommonReport.Types.Location2Type.Subforestry
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Subforestry
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 519
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: <p>Наименование и учетный номер участкового лесничества</p>
  example: []
  syntax:
    content: >-
      [Required]

      public DistrictForestriesKindEType Subforestry { get; set; }
    parameters: []
    return:
      type: Common.Enums.DistrictForestries.Types.DistrictForestriesKindEType
    content.vb: >-
      <Required>

      Public Property Subforestry As DistrictForestriesKindEType
  overload: Common.CommonReport.Types.Location2Type.Subforestry*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.CommonReport.Types.Location2Type.Tract
  commentId: P:Common.CommonReport.Types.Location2Type.Tract
  id: Tract
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: Tract
  nameWithType: Location2Type.Tract
  fullName: Common.CommonReport.Types.Location2Type.Tract
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Tract
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 530
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: >-
    <p>Наименование урочища (при наличии)</p>

    <p>Тип Строка длиной от 1 до 255 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 255.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(255)]

      public string Tract { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(255)>

      Public Property Tract As String
  overload: Common.CommonReport.Types.Location2Type.Tract*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
- uid: Common.CommonReport.Types.Location2Type.Quarter
  commentId: P:Common.CommonReport.Types.Location2Type.Quarter
  id: Quarter
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: Quarter
  nameWithType: Location2Type.Quarter
  fullName: Common.CommonReport.Types.Location2Type.Quarter
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Quarter
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 542
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: >-
    <p>N Лесного квартала</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      [Required]

      public string Quarter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      <Required>

      Public Property Quarter As String
  overload: Common.CommonReport.Types.Location2Type.Quarter*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.CommonReport.Types.Location2Type.TaxationUnit
  commentId: P:Common.CommonReport.Types.Location2Type.TaxationUnit
  id: TaxationUnit
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: TaxationUnit
  nameWithType: Location2Type.TaxationUnit
  fullName: Common.CommonReport.Types.Location2Type.TaxationUnit
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: TaxationUnit
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 555
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: >-
    <p>№ лесотаксационного выдела</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      [Required]

      public string TaxationUnit { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      <Required>

      Public Property TaxationUnit As String
  overload: Common.CommonReport.Types.Location2Type.TaxationUnit*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.CommonReport.Types.Location2Type.CuttingArea
  commentId: P:Common.CommonReport.Types.Location2Type.CuttingArea
  id: CuttingArea
  parent: Common.CommonReport.Types.Location2Type
  langs:
  - csharp
  - vb
  name: CuttingArea
  nameWithType: Location2Type.CuttingArea
  fullName: Common.CommonReport.Types.Location2Type.CuttingArea
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CuttingArea
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.CommonReport.Types.cs
    startLine: 568
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.CommonReport.Types
  summary: >-
    <p>Номер лесосеки</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      public string CuttingArea { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      Public Property CuttingArea As String
  overload: Common.CommonReport.Types.Location2Type.CuttingArea*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
references:
- uid: Common.CommonReport.Types
  commentId: N:Common.CommonReport.Types
  href: Common.html
  name: Common.CommonReport.Types
  nameWithType: Common.CommonReport.Types
  fullName: Common.CommonReport.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.CommonReport.Types.Location2Type.Forestry*
  commentId: Overload:Common.CommonReport.Types.Location2Type.Forestry
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_Forestry
  name: Forestry
  nameWithType: Location2Type.Forestry
  fullName: Common.CommonReport.Types.Location2Type.Forestry
- uid: Common.Enums.Forestry.Types.ForestryKindEType
  commentId: T:Common.Enums.Forestry.Types.ForestryKindEType
  parent: Common.Enums.Forestry.Types
  href: Common.Enums.Forestry.Types.ForestryKindEType.html
  name: ForestryKindEType
  nameWithType: ForestryKindEType
  fullName: Common.Enums.Forestry.Types.ForestryKindEType
- uid: Common.Enums.Forestry.Types
  commentId: N:Common.Enums.Forestry.Types
  href: Common.html
  name: Common.Enums.Forestry.Types
  nameWithType: Common.Enums.Forestry.Types
  fullName: Common.Enums.Forestry.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Forestry
    name: Forestry
    href: Common.Enums.Forestry.html
  - name: .
  - uid: Common.Enums.Forestry.Types
    name: Types
    href: Common.Enums.Forestry.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Forestry
    name: Forestry
    href: Common.Enums.Forestry.html
  - name: .
  - uid: Common.Enums.Forestry.Types
    name: Types
    href: Common.Enums.Forestry.Types.html
- uid: Common.CommonReport.Types.Location2Type.Subforestry*
  commentId: Overload:Common.CommonReport.Types.Location2Type.Subforestry
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_Subforestry
  name: Subforestry
  nameWithType: Location2Type.Subforestry
  fullName: Common.CommonReport.Types.Location2Type.Subforestry
- uid: Common.Enums.DistrictForestries.Types.DistrictForestriesKindEType
  commentId: T:Common.Enums.DistrictForestries.Types.DistrictForestriesKindEType
  parent: Common.Enums.DistrictForestries.Types
  href: Common.Enums.DistrictForestries.Types.DistrictForestriesKindEType.html
  name: DistrictForestriesKindEType
  nameWithType: DistrictForestriesKindEType
  fullName: Common.Enums.DistrictForestries.Types.DistrictForestriesKindEType
- uid: Common.Enums.DistrictForestries.Types
  commentId: N:Common.Enums.DistrictForestries.Types
  href: Common.html
  name: Common.Enums.DistrictForestries.Types
  nameWithType: Common.Enums.DistrictForestries.Types
  fullName: Common.Enums.DistrictForestries.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.DistrictForestries
    name: DistrictForestries
    href: Common.Enums.DistrictForestries.html
  - name: .
  - uid: Common.Enums.DistrictForestries.Types
    name: Types
    href: Common.Enums.DistrictForestries.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.DistrictForestries
    name: DistrictForestries
    href: Common.Enums.DistrictForestries.html
  - name: .
  - uid: Common.Enums.DistrictForestries.Types
    name: Types
    href: Common.Enums.DistrictForestries.Types.html
- uid: Common.CommonReport.Types.Location2Type.Tract*
  commentId: Overload:Common.CommonReport.Types.Location2Type.Tract
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_Tract
  name: Tract
  nameWithType: Location2Type.Tract
  fullName: Common.CommonReport.Types.Location2Type.Tract
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Common.CommonReport.Types.Location2Type.Quarter*
  commentId: Overload:Common.CommonReport.Types.Location2Type.Quarter
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_Quarter
  name: Quarter
  nameWithType: Location2Type.Quarter
  fullName: Common.CommonReport.Types.Location2Type.Quarter
- uid: Common.CommonReport.Types.Location2Type.TaxationUnit*
  commentId: Overload:Common.CommonReport.Types.Location2Type.TaxationUnit
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_TaxationUnit
  name: TaxationUnit
  nameWithType: Location2Type.TaxationUnit
  fullName: Common.CommonReport.Types.Location2Type.TaxationUnit
- uid: Common.CommonReport.Types.Location2Type.CuttingArea*
  commentId: Overload:Common.CommonReport.Types.Location2Type.CuttingArea
  href: Common.CommonReport.Types.Location2Type.html#Common_CommonReport_Types_Location2Type_CuttingArea
  name: CuttingArea
  nameWithType: Location2Type.CuttingArea
  fullName: Common.CommonReport.Types.Location2Type.CuttingArea
