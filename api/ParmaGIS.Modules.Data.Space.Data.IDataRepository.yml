### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  commentId: T:ParmaGIS.Modules.Data.Space.Data.IDataRepository
  id: IDataRepository
  parent: ParmaGIS.Modules.Data.Space.Data
  children:
  - ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1
  - ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1(System.Object)
  - ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: IDataRepository
  nameWithType: IDataRepository
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  type: Interface
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IDataRepository
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 10
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: public interface IDataRepository
    content.vb: Public Interface IDataRepository
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1
  id: GetDataAsync``1
  parent: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  langs:
  - csharp
  - vb
  name: GetDataAsync<T>()
  nameWithType: IDataRepository.GetDataAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetDataAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: 'Task<T[]> GetDataAsync<T>() where T : class, IDataObject'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}[]}
    content.vb: Function GetDataAsync(Of T As {Class, IDataObject})() As Task(Of T())
  overload: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync*
  nameWithType.vb: IDataRepository.GetDataAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync(Of T)()
  name.vb: GetDataAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1(System.Object)
  commentId: M:ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync``1(System.Object)
  id: GetDataAsync``1(System.Object)
  parent: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  langs:
  - csharp
  - vb
  name: GetDataAsync<T>(object)
  nameWithType: IDataRepository.GetDataAsync<T>(object)
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync<T>(object)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetDataAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 13
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: 'Task<T?> GetDataAsync<T>(object id) where T : class, IDataObject'
    parameters:
    - id: id
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function GetDataAsync(Of T As {Class, IDataObject})(id As Object) As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync*
  nameWithType.vb: IDataRepository.GetDataAsync(Of T)(Object)
  fullName.vb: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync(Of T)(Object)
  name.vb: GetDataAsync(Of T)(Object)
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync``1(``0)
  id: InsertDataAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  langs:
  - csharp
  - vb
  name: InsertDataAsync<T>(T)
  nameWithType: IDataRepository.InsertDataAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertDataAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 15
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: 'Task InsertDataAsync<T>(T data) where T : class, IDataObject'
    parameters:
    - id: data
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InsertDataAsync(Of T As {Class, IDataObject})(data As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync*
  nameWithType.vb: IDataRepository.InsertDataAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync(Of T)(T)
  name.vb: InsertDataAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync``1(``0)
  id: RemoveDataAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  langs:
  - csharp
  - vb
  name: RemoveDataAsync<T>(T)
  nameWithType: IDataRepository.RemoveDataAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveDataAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 17
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: 'Task RemoveDataAsync<T>(T data) where T : class, IDataObject'
    parameters:
    - id: data
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveDataAsync(Of T As {Class, IDataObject})(data As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync*
  nameWithType.vb: IDataRepository.RemoveDataAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync(Of T)(T)
  name.vb: RemoveDataAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Data.IDataRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: IDataRepository.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveChangesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Data/IDataRepository.cs
    startLine: 18
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Data
  syntax:
    content: Task SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveChangesAsync() As Task
  overload: ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync*
references:
- uid: ParmaGIS.Modules.Data.Space.Data
  commentId: N:ParmaGIS.Modules.Data.Space.Data
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Data
  nameWithType: ParmaGIS.Modules.Data.Space.Data
  fullName: ParmaGIS.Modules.Data.Space.Data
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Data
    name: Data
    href: ParmaGIS.Modules.Data.Space.Data.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Data
    name: Data
    href: ParmaGIS.Modules.Data.Space.Data.html
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync
  href: ParmaGIS.Modules.Data.Space.Data.IDataRepository.html#ParmaGIS_Modules_Data_Space_Data_IDataRepository_GetDataAsync__1
  name: GetDataAsync
  nameWithType: IDataRepository.GetDataAsync
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.GetDataAsync
- uid: System.Threading.Tasks.Task{{T}[]}
  commentId: T:System.Threading.Tasks.Task{`0[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T[]>
  nameWithType: Task<T[]>
  fullName: System.Threading.Tasks.Task<T[]>
  nameWithType.vb: Task(Of T())
  fullName.vb: System.Threading.Tasks.Task(Of T())
  name.vb: Task(Of T())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync
  href: ParmaGIS.Modules.Data.Space.Data.IDataRepository.html#ParmaGIS_Modules_Data_Space_Data_IDataRepository_InsertDataAsync__1___0_
  name: InsertDataAsync
  nameWithType: IDataRepository.InsertDataAsync
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.InsertDataAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync
  href: ParmaGIS.Modules.Data.Space.Data.IDataRepository.html#ParmaGIS_Modules_Data_Space_Data_IDataRepository_RemoveDataAsync__1___0_
  name: RemoveDataAsync
  nameWithType: IDataRepository.RemoveDataAsync
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.RemoveDataAsync
- uid: ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync
  href: ParmaGIS.Modules.Data.Space.Data.IDataRepository.html#ParmaGIS_Modules_Data_Space_Data_IDataRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: IDataRepository.SaveChangesAsync
  fullName: ParmaGIS.Modules.Data.Space.Data.IDataRepository.SaveChangesAsync
