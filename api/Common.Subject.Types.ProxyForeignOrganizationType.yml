### YamlMime:ManagedReference
items:
- uid: Common.Subject.Types.ProxyForeignOrganizationType
  commentId: T:Common.Subject.Types.ProxyForeignOrganizationType
  id: ProxyForeignOrganizationType
  parent: Common.Subject.Types
  children:
  - Common.Subject.Types.ProxyForeignOrganizationType.Address
  - Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
  - Common.Subject.Types.ProxyForeignOrganizationType.Email
  - Common.Subject.Types.ProxyForeignOrganizationType.FullName
  - Common.Subject.Types.ProxyForeignOrganizationType.Inn
  - Common.Subject.Types.ProxyForeignOrganizationType.Kio
  - Common.Subject.Types.ProxyForeignOrganizationType.RegDate
  - Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
  - Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
  langs:
  - csharp
  - vb
  name: ProxyForeignOrganizationType
  nameWithType: ProxyForeignOrganizationType
  fullName: Common.Subject.Types.ProxyForeignOrganizationType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ProxyForeignOrganizationType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3214
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Иностранное юридическое лицо</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ProxyForeignOrganizationType
    content.vb: >-
      <Serializable>

      Public Class ProxyForeignOrganizationType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
  id: CountryCode
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: CountryCode
  nameWithType: ProxyForeignOrganizationType.CountryCode
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CountryCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3226
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Код страны регистрации (инкорпорации)</p>
  example: []
  syntax:
    content: >-
      [Required]

      public CountryKindEType CountryCode { get; set; }
    parameters: []
    return:
      type: Common.Enums.Country.Types.CountryKindEType
    content.vb: >-
      <Required>

      Public Property CountryCode As CountryKindEType
  overload: Common.Subject.Types.ProxyForeignOrganizationType.CountryCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Subject.Types.ProxyForeignOrganizationType.FullName
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.FullName
  id: FullName
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: ProxyForeignOrganizationType.FullName
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.FullName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FullName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3235
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>Наименование</p>

    <p>Тип Полное наименование юридического лица</p>
  example: []
  syntax:
    content: >-
      [Required]

      public string FullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property FullName As String
  overload: Common.Subject.Types.ProxyForeignOrganizationType.FullName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegDate
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.RegDate
  id: RegDate
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: RegDate
  nameWithType: ProxyForeignOrganizationType.RegDate
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3246
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>Дата регистрации</p>

    <p>Тип Дата в формате ГГГГ-ММ-ДД (2100-01-01 - 1900-01-01)</p>

    <p>Minimum inclusive value: 1900-01-01.</p>

    <p>Maximum inclusive value: 2100-01-01.</p>
  example: []
  syntax:
    content: >-
      [Range(typeof(DateTime), "1900-01-01", "2100-01-01")]

      public DateTime RegDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Range(GetType(Date), "1900-01-01", "2100-01-01")>

      Public Property RegDate As Date
  overload: Common.Subject.Types.ProxyForeignOrganizationType.RegDate*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)
    arguments:
    - type: System.Type
      value: System.DateTime
    - type: System.String
      value: 1900-01-01
    - type: System.String
      value: 2100-01-01
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
  id: RegDateSpecified
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: RegDateSpecified
  nameWithType: ProxyForeignOrganizationType.RegDateSpecified
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3254
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Gets or sets a value indicating whether the RegDate property is specified.</p>
  example: []
  syntax:
    content: public bool RegDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RegDateSpecified As Boolean
  overload: Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified*
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
  id: RegNumber
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: RegNumber
  nameWithType: ProxyForeignOrganizationType.RegNumber
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3261
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>Регистрационный номер иностранного юридического лица в стране его регистрации</p>

    <p>Тип Регистрационый номер иностранного юридического лица</p>
  example: []
  syntax:
    content: public string RegNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RegNumber As String
  overload: Common.Subject.Types.ProxyForeignOrganizationType.RegNumber*
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Address
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.Address
  id: Address
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: ProxyForeignOrganizationType.Address
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Address
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Address
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3268
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: <p>Адрес места нахождения, указанный в ЕГРЮЛ</p>
  example: []
  syntax:
    content: public RfGarAddressType Address { get; set; }
    parameters: []
    return:
      type: Common.Address.Types.RfGarAddressType
    content.vb: Public Property Address As RfGarAddressType
  overload: Common.Subject.Types.ProxyForeignOrganizationType.Address*
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Inn
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.Inn
  id: Inn
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: Inn
  nameWithType: ProxyForeignOrganizationType.Inn
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Inn
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Inn
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3276
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>ИНН иностранного юридического лица</p>

    <p>Тип ИНН иностранного юридического лица</p>
  example: []
  syntax:
    content: public string Inn { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Inn As String
  overload: Common.Subject.Types.ProxyForeignOrganizationType.Inn*
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Kio
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.Kio
  id: Kio
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: Kio
  nameWithType: ProxyForeignOrganizationType.Kio
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Kio
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Kio
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3287
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>Код иностранной организации</p>

    <p>Код иностранной организации</p>

    <p>Minimum length: 5.</p>

    <p>Maximum length: 5.</p>

    <p>Pattern: [0-9]{5}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(5)]

      [MaxLength(5)]

      [RegularExpression("[0-9]{5}")]

      public string Kio { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(5)>

      <MaxLength(5)>

      <RegularExpression("[0-9]{5}")>

      Public Property Kio As String
  overload: Common.Subject.Types.ProxyForeignOrganizationType.Kio*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{5}'
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Email
  commentId: P:Common.Subject.Types.ProxyForeignOrganizationType.Email
  id: Email
  parent: Common.Subject.Types.ProxyForeignOrganizationType
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: ProxyForeignOrganizationType.Email
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Email
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Email
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Subject.Types.cs
    startLine: 3301
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Subject.Types
  summary: >-
    <p>Адрес электронной почты</p>

    <p>Тип Адрес электронной почты</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 60.</p>

    <p>Pattern: \c+@\c+\.\c+.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(60)]

      [RegularExpression("\\c+@\\c+\\.\\c+")]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(60)>

      <RegularExpression("\c+@\c+\.\c+")>

      Public Property Email As String
  overload: Common.Subject.Types.ProxyForeignOrganizationType.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 60
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '\c+@\c+\.\c+'
references:
- uid: Common.Subject.Types
  commentId: N:Common.Subject.Types
  href: Common.html
  name: Common.Subject.Types
  nameWithType: Common.Subject.Types
  fullName: Common.Subject.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Subject
    name: Subject
    href: Common.Subject.html
  - name: .
  - uid: Common.Subject.Types
    name: Types
    href: Common.Subject.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Subject
    name: Subject
    href: Common.Subject.html
  - name: .
  - uid: Common.Subject.Types
    name: Types
    href: Common.Subject.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.Subject.Types.ProxyForeignOrganizationType.CountryCode*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_CountryCode
  name: CountryCode
  nameWithType: ProxyForeignOrganizationType.CountryCode
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.CountryCode
- uid: Common.Enums.Country.Types.CountryKindEType
  commentId: T:Common.Enums.Country.Types.CountryKindEType
  parent: Common.Enums.Country.Types
  href: Common.Enums.Country.Types.CountryKindEType.html
  name: CountryKindEType
  nameWithType: CountryKindEType
  fullName: Common.Enums.Country.Types.CountryKindEType
- uid: Common.Enums.Country.Types
  commentId: N:Common.Enums.Country.Types
  href: Common.html
  name: Common.Enums.Country.Types
  nameWithType: Common.Enums.Country.Types
  fullName: Common.Enums.Country.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Country
    name: Country
    href: Common.Enums.Country.html
  - name: .
  - uid: Common.Enums.Country.Types
    name: Types
    href: Common.Enums.Country.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Country
    name: Country
    href: Common.Enums.Country.html
  - name: .
  - uid: Common.Enums.Country.Types
    name: Types
    href: Common.Enums.Country.Types.html
- uid: Common.Subject.Types.ProxyForeignOrganizationType.FullName*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.FullName
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_FullName
  name: FullName
  nameWithType: ProxyForeignOrganizationType.FullName
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.FullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegDate*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.RegDate
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_RegDate
  name: RegDate
  nameWithType: ProxyForeignOrganizationType.RegDate
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_RegDateSpecified
  name: RegDateSpecified
  nameWithType: ProxyForeignOrganizationType.RegDateSpecified
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegDateSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Common.Subject.Types.ProxyForeignOrganizationType.RegNumber*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_RegNumber
  name: RegNumber
  nameWithType: ProxyForeignOrganizationType.RegNumber
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.RegNumber
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Address*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.Address
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_Address
  name: Address
  nameWithType: ProxyForeignOrganizationType.Address
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Address
- uid: Common.Address.Types.RfGarAddressType
  commentId: T:Common.Address.Types.RfGarAddressType
  parent: Common.Address.Types
  href: Common.Address.Types.RfGarAddressType.html
  name: RfGarAddressType
  nameWithType: RfGarAddressType
  fullName: Common.Address.Types.RfGarAddressType
- uid: Common.Address.Types
  commentId: N:Common.Address.Types
  href: Common.html
  name: Common.Address.Types
  nameWithType: Common.Address.Types
  fullName: Common.Address.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Address
    name: Address
    href: Common.Address.html
  - name: .
  - uid: Common.Address.Types
    name: Types
    href: Common.Address.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Address
    name: Address
    href: Common.Address.html
  - name: .
  - uid: Common.Address.Types
    name: Types
    href: Common.Address.Types.html
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Inn*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.Inn
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_Inn
  name: Inn
  nameWithType: ProxyForeignOrganizationType.Inn
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Inn
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Kio*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.Kio
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_Kio
  name: Kio
  nameWithType: ProxyForeignOrganizationType.Kio
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Kio
- uid: Common.Subject.Types.ProxyForeignOrganizationType.Email*
  commentId: Overload:Common.Subject.Types.ProxyForeignOrganizationType.Email
  href: Common.Subject.Types.ProxyForeignOrganizationType.html#Common_Subject_Types_ProxyForeignOrganizationType_Email
  name: Email
  nameWithType: ProxyForeignOrganizationType.Email
  fullName: Common.Subject.Types.ProxyForeignOrganizationType.Email
