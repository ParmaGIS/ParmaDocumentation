### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  commentId: T:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  id: ParmaCalculationService
  parent: ParmaGIS.Modules.Parma.Space.Calculation
  children:
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor(ParmaGIS.Modules.Parma.Space.ParmaSpace)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Func{``0,System.Int32},System.Func{``0,System.Int32})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass(System.Int32,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup(System.Int32,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.Origin,System.Int32,System.Decimal)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,System.Guid,System.Int32,System.Decimal)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.Origin},System.Func{``0,System.Int32},System.Func{``0,System.Decimal})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,System.Guid,System.Guid,System.Guid)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,System.Int32})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(System.Double,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(System.Double,System.Int32,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Boolean,System.Nullable{System.Guid})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity(System.Double,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock(System.Double,System.Int32,System.Int32)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  - ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock(System.Double,System.Int32)
  langs:
  - csharp
  - vb
  name: ParmaCalculationService
  nameWithType: ParmaCalculationService
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParmaCalculationService
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 34
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: 'public class ParmaCalculationService : ICalculationService'
    content.vb: Public Class ParmaCalculationService Implements ICalculationService
  inheritance:
  - System.Object
  implements:
  - ParmaGIS.Modules.Data.Space.Calculation.ICalculationService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor(ParmaGIS.Modules.Parma.Space.ParmaSpace)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor(ParmaGIS.Modules.Parma.Space.ParmaSpace)
  id: '#ctor(ParmaGIS.Modules.Parma.Space.ParmaSpace)'
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: ParmaCalculationService(ParmaSpace)
  nameWithType: ParmaCalculationService.ParmaCalculationService(ParmaSpace)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.ParmaCalculationService(ParmaGIS.Modules.Parma.Space.ParmaSpace)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 39
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public ParmaCalculationService(ParmaSpace space)
    parameters:
    - id: space
      type: ParmaGIS.Modules.Parma.Space.ParmaSpace
    content.vb: Public Sub New(space As ParmaSpace)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor*
  nameWithType.vb: ParmaCalculationService.New(ParmaSpace)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.New(ParmaGIS.Modules.Parma.Space.ParmaSpace)
  name.vb: New(ParmaSpace)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Func{``0,System.Int32},System.Func{``0,System.Int32})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Func{``0,System.Int32},System.Func{``0,System.Int32})
  id: CalculateOrderedWoodLayerSpeciesAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Func{``0,System.Int32},System.Func{``0,System.Int32})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateOrderedWoodLayerSpeciesAsync<T>(IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>, Func<T, int>, Func<T, int>)
  nameWithType: ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync<T>(IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>, Func<T, int>, Func<T, int>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>, System.Func<T, int>, System.Func<T, int>, System.Func<T, int>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateOrderedWoodLayerSpeciesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 114
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<IEnumerable<T>> CalculateOrderedWoodLayerSpeciesAsync<T>(IEnumerable<T> source, Func<T, TreeSpecies> treeSpeciesSelector, Func<T, int> coefficientSelector, Func<T, int> treeSpeciesOrderSelector, Func<T, int> treeSpeciesTypeOrderSelector)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: treeSpeciesSelector
      type: System.Func{{T},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
    - id: coefficientSelector
      type: System.Func{{T},System.Int32}
    - id: treeSpeciesOrderSelector
      type: System.Func{{T},System.Int32}
    - id: treeSpeciesTypeOrderSelector
      type: System.Func{{T},System.Int32}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
    content.vb: Public Function CalculateOrderedWoodLayerSpeciesAsync(Of T)(source As IEnumerable(Of T), treeSpeciesSelector As Func(Of T, TreeSpecies), coefficientSelector As Func(Of T, Integer), treeSpeciesOrderSelector As Func(Of T, Integer), treeSpeciesTypeOrderSelector As Func(Of T, Integer)) As Task(Of IEnumerable(Of T))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync*
  nameWithType.vb: ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync(Of T)(IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer), Func(Of T, Integer), Func(Of T, Integer))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies), System.Func(Of T, Integer), System.Func(Of T, Integer), System.Func(Of T, Integer))
  name.vb: CalculateOrderedWoodLayerSpeciesAsync(Of T)(IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer), Func(Of T, Integer), Func(Of T, Integer))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  id: CalculateWoodLayerSpeciesOrderAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerSpeciesOrderAsync<T>(Guid, IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>)
  nameWithType: ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync<T>(Guid, IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync<T>(System.Guid, System.Collections.Generic.IEnumerable<T>, System.Func<T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>, System.Func<T, int>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerSpeciesOrderAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 125
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<IEnumerable<T>> CalculateWoodLayerSpeciesOrderAsync<T>(Guid departmentId, IEnumerable<T> source, Func<T, TreeSpecies> treeSpeciesSelector, Func<T, int> coefficientSelector)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: treeSpeciesSelector
      type: System.Func{{T},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
    - id: coefficientSelector
      type: System.Func{{T},System.Int32}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
    content.vb: Public Function CalculateWoodLayerSpeciesOrderAsync(Of T)(departmentId As Guid, source As IEnumerable(Of T), treeSpeciesSelector As Func(Of T, TreeSpecies), coefficientSelector As Func(Of T, Integer)) As Task(Of IEnumerable(Of T))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync(Of T)(Guid, IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync(Of T)(System.Guid, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies), System.Func(Of T, Integer))
  name.vb: CalculateWoodLayerSpeciesOrderAsync(Of T)(Guid, IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  id: CalculateWoodLayerDominantSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerDominantSpeciesAsync<T>(Guid, IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>)
  nameWithType: ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync<T>(Guid, IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync<T>(System.Guid, System.Collections.Generic.IEnumerable<T>, System.Func<T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>, System.Func<T, int>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerDominantSpeciesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 133
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<T> CalculateWoodLayerDominantSpeciesAsync<T>(Guid departmentId, IEnumerable<T> source, Func<T, TreeSpecies> treeSpeciesSelector, Func<T, int> coefficientSelector)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: treeSpeciesSelector
      type: System.Func{{T},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
    - id: coefficientSelector
      type: System.Func{{T},System.Int32}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function CalculateWoodLayerDominantSpeciesAsync(Of T)(departmentId As Guid, source As IEnumerable(Of T), treeSpeciesSelector As Func(Of T, TreeSpecies), coefficientSelector As Func(Of T, Integer)) As Task(Of T)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync(Of T)(Guid, IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync(Of T)(System.Guid, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies), System.Func(Of T, Integer))
  name.vb: CalculateWoodLayerDominantSpeciesAsync(Of T)(Guid, IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Boolean,System.Nullable{System.Guid})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Boolean,System.Nullable{System.Guid})
  id: CalculateWoodLayerCompositionAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32},System.Boolean,System.Nullable{System.Guid})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerCompositionAsync<T>(IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>, bool, Guid?)
  nameWithType: ParmaCalculationService.CalculateWoodLayerCompositionAsync<T>(IEnumerable<T>, Func<T, TreeSpecies>, Func<T, int>, bool, Guid?)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>, System.Func<T, int>, bool, System.Guid?)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerCompositionAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 141
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<string> CalculateWoodLayerCompositionAsync<T>(IEnumerable<T> source, Func<T, TreeSpecies> treeSpeciesSelector, Func<T, int> coefficientSelector, bool sourceIsOrdered = false, Guid? departmentId = null)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: treeSpeciesSelector
      type: System.Func{{T},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
    - id: coefficientSelector
      type: System.Func{{T},System.Int32}
    - id: sourceIsOrdered
      type: System.Boolean
    - id: departmentId
      type: System.Nullable{System.Guid}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function CalculateWoodLayerCompositionAsync(Of T)(source As IEnumerable(Of T), treeSpeciesSelector As Func(Of T, TreeSpecies), coefficientSelector As Func(Of T, Integer), sourceIsOrdered As Boolean = False, departmentId As Guid? = Nothing) As Task(Of String)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerCompositionAsync(Of T)(IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer), Boolean, Guid?)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies), System.Func(Of T, Integer), Boolean, System.Guid?)
  name.vb: CalculateWoodLayerCompositionAsync(Of T)(IEnumerable(Of T), Func(Of T, TreeSpecies), Func(Of T, Integer), Boolean, Guid?)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity(System.Double,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity(System.Double,System.Int32)
  id: CalculateWoodLayerDensity(System.Double,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerDensity(double, int)
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensity(double, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity(double, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerDensity
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 186
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public double CalculateWoodLayerDensity(double absoluteDensity, int g)
    parameters:
    - id: absoluteDensity
      type: System.Double
    - id: g
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function CalculateWoodLayerDensity(absoluteDensity As Double, g As Integer) As Double
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerDensity(Double, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity(Double, Integer)
  name.vb: CalculateWoodLayerDensity(Double, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(System.Double,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(System.Double,System.Int32)
  id: CalculateWoodLayerAbsoluteDensity(System.Double,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerAbsoluteDensity(double, int)
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(double, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(double, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerAbsoluteDensity
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 191
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public double CalculateWoodLayerAbsoluteDensity(double density, int g)
    parameters:
    - id: density
      type: System.Double
    - id: g
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function CalculateWoodLayerAbsoluteDensity(density As Double, g As Integer) As Double
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(Double, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity(Double, Integer)
  name.vb: CalculateWoodLayerAbsoluteDensity(Double, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock(System.Double,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock(System.Double,System.Int32)
  id: CalculateWoodLayerStock(System.Double,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerStock(double, int)
  nameWithType: ParmaCalculationService.CalculateWoodLayerStock(double, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock(double, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerStock
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 196
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public double CalculateWoodLayerStock(double density, int v)
    parameters:
    - id: density
      type: System.Double
    - id: v
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function CalculateWoodLayerStock(density As Double, v As Integer) As Double
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerStock(Double, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock(Double, Integer)
  name.vb: CalculateWoodLayerStock(Double, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock(System.Double,System.Int32,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock(System.Double,System.Int32,System.Int32)
  id: CalculateWoodLayerDensityAndStock(System.Double,System.Int32,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerDensityAndStock(double, int, int)
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensityAndStock(double, int, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock(double, int, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerDensityAndStock
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 201
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public (double density, double stock) CalculateWoodLayerDensityAndStock(double absoluteDensity, int v, int g)
    parameters:
    - id: absoluteDensity
      type: System.Double
    - id: v
      type: System.Int32
    - id: g
      type: System.Int32
    return:
      type: System.ValueTuple{System.Double,System.Double}
    content.vb: Public Function CalculateWoodLayerDensityAndStock(absoluteDensity As Double, v As Integer, g As Integer) As (density As Double, stock As Double)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerDensityAndStock(Double, Integer, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock(Double, Integer, Integer)
  name.vb: CalculateWoodLayerDensityAndStock(Double, Integer, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(System.Double,System.Int32,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(System.Double,System.Int32,System.Int32)
  id: CalculateWoodLayerAbsoluteDensityAndStock(System.Double,System.Int32,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerAbsoluteDensityAndStock(double, int, int)
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(double, int, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(double, int, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerAbsoluteDensityAndStock
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 207
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public (double absoluteDensity, double stock) CalculateWoodLayerAbsoluteDensityAndStock(double density, int v, int g)
    parameters:
    - id: density
      type: System.Double
    - id: v
      type: System.Int32
    - id: g
      type: System.Int32
    return:
      type: System.ValueTuple{System.Double,System.Double}
    content.vb: Public Function CalculateWoodLayerAbsoluteDensityAndStock(density As Double, v As Integer, g As Integer) As (absoluteDensity As Double, stock As Double)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(Double, Integer, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock(Double, Integer, Integer)
  name.vb: CalculateWoodLayerAbsoluteDensityAndStock(Double, Integer, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  id: CalculateWoodLayerDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerDensityAndStockAsync(Guid, Guid, double, double)
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(Guid, Guid, double, double)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(System.Guid, System.Guid, double, double)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerDensityAndStockAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 213
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<(double density, double stock)> CalculateWoodLayerDensityAndStockAsync(Guid stockTableId, Guid dominantTreeSpeciesId, double absoluteDensity, double avgHeight)
    parameters:
    - id: stockTableId
      type: System.Guid
    - id: dominantTreeSpeciesId
      type: System.Guid
    - id: absoluteDensity
      type: System.Double
    - id: avgHeight
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
    content.vb: Public Function CalculateWoodLayerDensityAndStockAsync(stockTableId As Guid, dominantTreeSpeciesId As Guid, absoluteDensity As Double, avgHeight As Double) As Task(Of (density As Double, stock As Double))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(Guid, Guid, Double, Double)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(System.Guid, System.Guid, Double, Double)
  name.vb: CalculateWoodLayerDensityAndStockAsync(Guid, Guid, Double, Double)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  id: CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid,System.Guid,System.Double,System.Double)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerAbsoluteDensityAndStockAsync(Guid, Guid, double, double)
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(Guid, Guid, double, double)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid, System.Guid, double, double)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerAbsoluteDensityAndStockAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 231
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<(double absoluteDensity, double stock)> CalculateWoodLayerAbsoluteDensityAndStockAsync(Guid stockTableId, Guid dominantTreeSpeciesId, double density, double avgHeight)
    parameters:
    - id: stockTableId
      type: System.Guid
    - id: dominantTreeSpeciesId
      type: System.Guid
    - id: density
      type: System.Double
    - id: avgHeight
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
    content.vb: Public Function CalculateWoodLayerAbsoluteDensityAndStockAsync(stockTableId As Guid, dominantTreeSpeciesId As Guid, density As Double, avgHeight As Double) As Task(Of (absoluteDensity As Double, stock As Double))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(Guid, Guid, Double, Double)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(System.Guid, System.Guid, Double, Double)
  name.vb: CalculateWoodLayerAbsoluteDensityAndStockAsync(Guid, Guid, Double, Double)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  id: CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerDensityAndStockAsync(StockTable, TreeSpecies, double, double)
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(StockTable, TreeSpecies, double, double)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, double, double)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerDensityAndStockAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 250
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<(double density, double stock)> CalculateWoodLayerDensityAndStockAsync(StockTable stockTable, TreeSpecies dominantTreeSpecies, double absoluteDensity, double avgHeight)
    parameters:
    - id: stockTable
      type: ParmaGIS.Modules.Parma.Space.Calculation.StockTable
    - id: dominantTreeSpecies
      type: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    - id: absoluteDensity
      type: System.Double
    - id: avgHeight
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
    content.vb: Public Function CalculateWoodLayerDensityAndStockAsync(stockTable As StockTable, dominantTreeSpecies As TreeSpecies, absoluteDensity As Double, avgHeight As Double) As Task(Of (density As Double, stock As Double))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(StockTable, TreeSpecies, Double, Double)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, Double, Double)
  name.vb: CalculateWoodLayerDensityAndStockAsync(StockTable, TreeSpecies, Double, Double)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  id: CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Double,System.Double)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateWoodLayerAbsoluteDensityAndStockAsync(StockTable, TreeSpecies, double, double)
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(StockTable, TreeSpecies, double, double)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, double, double)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateWoodLayerAbsoluteDensityAndStockAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 265
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<(double absoluteDensity, double stock)> CalculateWoodLayerAbsoluteDensityAndStockAsync(StockTable stockTable, TreeSpecies dominantTreeSpecies, double density, double avgHeight)
    parameters:
    - id: stockTable
      type: ParmaGIS.Modules.Parma.Space.Calculation.StockTable
    - id: dominantTreeSpecies
      type: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    - id: density
      type: System.Double
    - id: avgHeight
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
    content.vb: Public Function CalculateWoodLayerAbsoluteDensityAndStockAsync(stockTable As StockTable, dominantTreeSpecies As TreeSpecies, density As Double, avgHeight As Double) As Task(Of (absoluteDensity As Double, stock As Double))
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync*
  nameWithType.vb: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(StockTable, TreeSpecies, Double, Double)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync(ParmaGIS.Modules.Parma.Space.Calculation.StockTable, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, Double, Double)
  name.vb: CalculateWoodLayerAbsoluteDensityAndStockAsync(StockTable, TreeSpecies, Double, Double)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  id: CalculateStandWoodLayerOrder``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandWoodLayerOrder<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>)
  nameWithType: ParmaCalculationService.CalculateStandWoodLayerOrder<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandWoodLayerOrder
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 298
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public IEnumerable<TItem> CalculateStandWoodLayerOrder<TItem>(IEnumerable<TItem> items, Func<TItem, WoodLayerType> woodLayerTypeSelector)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TItem}}
    - id: woodLayerTypeSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
    typeParameters:
    - id: TItem
    return:
      type: System.Collections.Generic.IEnumerable{{TItem}}
    content.vb: Public Function CalculateStandWoodLayerOrder(Of TItem)(items As IEnumerable(Of TItem), woodLayerTypeSelector As Func(Of TItem, WoodLayerType)) As IEnumerable(Of TItem)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder*
  nameWithType.vb: ParmaCalculationService.CalculateStandWoodLayerOrder(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType))
  name.vb: CalculateStandWoodLayerOrder(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  id: CalculateStandDominantWoodLayer``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandDominantWoodLayer<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>)
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayer<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandDominantWoodLayer
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 303
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public TItem CalculateStandDominantWoodLayer<TItem>(IEnumerable<TItem> items, Func<TItem, WoodLayerType> woodLayerTypeSelector)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TItem}}
    - id: woodLayerTypeSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
    typeParameters:
    - id: TItem
    return:
      type: '{TItem}'
    content.vb: Public Function CalculateStandDominantWoodLayer(Of TItem)(items As IEnumerable(Of TItem), woodLayerTypeSelector As Func(Of TItem, WoodLayerType)) As TItem
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer*
  nameWithType.vb: ParmaCalculationService.CalculateStandDominantWoodLayer(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType))
  name.vb: CalculateStandDominantWoodLayer(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  id: CalculateStandDominantWoodLayerSpeciesAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies},System.Func{``0,System.Int32})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandDominantWoodLayerSpeciesAsync<TItem>(Guid, IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, TreeSpecies>, Func<TItem, int>)
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync<TItem>(Guid, IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, TreeSpecies>, Func<TItem, int>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync<TItem>(System.Guid, System.Collections.Generic.IEnumerable<TItem>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>, System.Func<TItem, int>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandDominantWoodLayerSpeciesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 308
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<TItem> CalculateStandDominantWoodLayerSpeciesAsync<TItem>(Guid departmentId, IEnumerable<TItem> items, Func<TItem, WoodLayerType> woodLayerTypeSelector, Func<TItem, TreeSpecies> treeSpeciesSelector, Func<TItem, int> coefficientSelector)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: items
      type: System.Collections.Generic.IEnumerable{{TItem}}
    - id: woodLayerTypeSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
    - id: treeSpeciesSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
    - id: coefficientSelector
      type: System.Func{{TItem},System.Int32}
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task{{TItem}}
    content.vb: Public Function CalculateStandDominantWoodLayerSpeciesAsync(Of TItem)(departmentId As Guid, items As IEnumerable(Of TItem), woodLayerTypeSelector As Func(Of TItem, WoodLayerType), treeSpeciesSelector As Func(Of TItem, TreeSpecies), coefficientSelector As Func(Of TItem, Integer)) As Task(Of TItem)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync(Of TItem)(Guid, IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, TreeSpecies), Func(Of TItem, Integer))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync(Of TItem)(System.Guid, System.Collections.Generic.IEnumerable(Of TItem), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies), System.Func(Of TItem, Integer))
  name.vb: CalculateStandDominantWoodLayerSpeciesAsync(Of TItem)(Guid, IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, TreeSpecies), Func(Of TItem, Integer))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,System.Int32})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,System.Int32})
  id: CalculateStandDominantWoodLayerSpecies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,System.Int32})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandDominantWoodLayerSpecies<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, int>)
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayerSpecies<TItem>(IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, int>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>, System.Func<TItem, int>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandDominantWoodLayerSpecies
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 317
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public TItem CalculateStandDominantWoodLayerSpecies<TItem>(IEnumerable<TItem> items, Func<TItem, WoodLayerType> woodLayerTypeSelector, Func<TItem, int> gradeSelector)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TItem}}
    - id: woodLayerTypeSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
    - id: gradeSelector
      type: System.Func{{TItem},System.Int32}
    typeParameters:
    - id: TItem
    return:
      type: '{TItem}'
    content.vb: Public Function CalculateStandDominantWoodLayerSpecies(Of TItem)(items As IEnumerable(Of TItem), woodLayerTypeSelector As Func(Of TItem, WoodLayerType), gradeSelector As Func(Of TItem, Integer)) As TItem
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies*
  nameWithType.vb: ParmaCalculationService.CalculateStandDominantWoodLayerSpecies(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, Integer))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType), System.Func(Of TItem, Integer))
  name.vb: CalculateStandDominantWoodLayerSpecies(Of TItem)(IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, Integer))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,System.Guid,System.Int32,System.Decimal)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,System.Guid,System.Int32,System.Decimal)
  id: CalculateStandBonitetClassAsync(System.Guid,System.Guid,System.Int32,System.Decimal)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandBonitetClassAsync(Guid, Guid, int, decimal)
  nameWithType: ParmaCalculationService.CalculateStandBonitetClassAsync(Guid, Guid, int, decimal)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid, System.Guid, int, decimal)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandBonitetClassAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 330
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<BonitetClass> CalculateStandBonitetClassAsync(Guid departmentId, Guid dominantWoodLayerOriginId, int age, decimal height)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: dominantWoodLayerOriginId
      type: System.Guid
    - id: age
      type: System.Int32
    - id: height
      type: System.Decimal
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass}
    content.vb: Public Function CalculateStandBonitetClassAsync(departmentId As Guid, dominantWoodLayerOriginId As Guid, age As Integer, height As Decimal) As Task(Of BonitetClass)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandBonitetClassAsync(Guid, Guid, Integer, Decimal)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid, System.Guid, Integer, Decimal)
  name.vb: CalculateStandBonitetClassAsync(Guid, Guid, Integer, Decimal)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.Origin,System.Int32,System.Decimal)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.Origin,System.Int32,System.Decimal)
  id: CalculateStandBonitetClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.Origin,System.Int32,System.Decimal)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandBonitetClassAsync(Guid, Origin, int, decimal)
  nameWithType: ParmaCalculationService.CalculateStandBonitetClassAsync(Guid, Origin, int, decimal)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.Origin, int, decimal)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandBonitetClassAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 354
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<BonitetClass> CalculateStandBonitetClassAsync(Guid departmentId, Origin dominantWoodLayerOrigin, int age, decimal height)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: dominantWoodLayerOrigin
      type: ParmaGIS.Modules.Parma.Space.Catalog.Origin
    - id: age
      type: System.Int32
    - id: height
      type: System.Decimal
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass}
    content.vb: Public Function CalculateStandBonitetClassAsync(departmentId As Guid, dominantWoodLayerOrigin As Origin, age As Integer, height As Decimal) As Task(Of BonitetClass)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandBonitetClassAsync(Guid, Origin, Integer, Decimal)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.Origin, Integer, Decimal)
  name.vb: CalculateStandBonitetClassAsync(Guid, Origin, Integer, Decimal)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.Origin},System.Func{``0,System.Int32},System.Func{``0,System.Decimal})
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.Origin},System.Func{``0,System.Int32},System.Func{``0,System.Decimal})
  id: CalculateStandBonitetClassAsync``1(System.Guid,System.Collections.Generic.IEnumerable{``0},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType},System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.Origin},System.Func{``0,System.Int32},System.Func{``0,System.Decimal})
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandBonitetClassAsync<TItem>(Guid, IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, Origin>, Func<TItem, int>, Func<TItem, decimal>)
  nameWithType: ParmaCalculationService.CalculateStandBonitetClassAsync<TItem>(Guid, IEnumerable<TItem>, Func<TItem, WoodLayerType>, Func<TItem, Origin>, Func<TItem, int>, Func<TItem, decimal>)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync<TItem>(System.Guid, System.Collections.Generic.IEnumerable<TItem>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>, System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.Origin>, System.Func<TItem, int>, System.Func<TItem, decimal>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandBonitetClassAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 370
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<BonitetClass> CalculateStandBonitetClassAsync<TItem>(Guid departmentId, IEnumerable<TItem> items, Func<TItem, WoodLayerType> woodLayerTypeSelector, Func<TItem, Origin> woodLayerOriginSelector, Func<TItem, int> woodLayerAgeSelector, Func<TItem, decimal> woodLayerHeightSelector)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: items
      type: System.Collections.Generic.IEnumerable{{TItem}}
    - id: woodLayerTypeSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
    - id: woodLayerOriginSelector
      type: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.Origin}
    - id: woodLayerAgeSelector
      type: System.Func{{TItem},System.Int32}
    - id: woodLayerHeightSelector
      type: System.Func{{TItem},System.Decimal}
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass}
    content.vb: Public Function CalculateStandBonitetClassAsync(Of TItem)(departmentId As Guid, items As IEnumerable(Of TItem), woodLayerTypeSelector As Func(Of TItem, WoodLayerType), woodLayerOriginSelector As Func(Of TItem, Origin), woodLayerAgeSelector As Func(Of TItem, Integer), woodLayerHeightSelector As Func(Of TItem, Decimal)) As Task(Of BonitetClass)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandBonitetClassAsync(Of TItem)(Guid, IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, Origin), Func(Of TItem, Integer), Func(Of TItem, Decimal))
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync(Of TItem)(System.Guid, System.Collections.Generic.IEnumerable(Of TItem), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType), System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.Origin), System.Func(Of TItem, Integer), System.Func(Of TItem, Decimal))
  name.vb: CalculateStandBonitetClassAsync(Of TItem)(Guid, IEnumerable(Of TItem), Func(Of TItem, WoodLayerType), Func(Of TItem, Origin), Func(Of TItem, Integer), Func(Of TItem, Decimal))
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass(System.Int32,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass(System.Int32,System.Int32)
  id: CalculateStandAgeClass(System.Int32,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandAgeClass(int, int)
  nameWithType: ParmaCalculationService.CalculateStandAgeClass(int, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass(int, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandAgeClass
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 389
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public int CalculateStandAgeClass(int dominantSpeciesAge, int ageClassRange)
    parameters:
    - id: dominantSpeciesAge
      type: System.Int32
    - id: ageClassRange
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function CalculateStandAgeClass(dominantSpeciesAge As Integer, ageClassRange As Integer) As Integer
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass*
  nameWithType.vb: ParmaCalculationService.CalculateStandAgeClass(Integer, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass(Integer, Integer)
  name.vb: CalculateStandAgeClass(Integer, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32)
  id: CalculateStandAgeClassAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandAgeClassAsync(Guid, TreeSpecies, int)
  nameWithType: ParmaCalculationService.CalculateStandAgeClassAsync(Guid, TreeSpecies, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandAgeClassAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 395
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<int> CalculateStandAgeClassAsync(Guid departmentId, TreeSpecies dominantSpecies, int dominantSpeciesAge)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: dominantSpecies
      type: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    - id: dominantSpeciesAge
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function CalculateStandAgeClassAsync(departmentId As Guid, dominantSpecies As TreeSpecies, dominantSpeciesAge As Integer) As Task(Of Integer)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandAgeClassAsync(Guid, TreeSpecies, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, Integer)
  name.vb: CalculateStandAgeClassAsync(Guid, TreeSpecies, Integer)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,System.Guid,System.Guid,System.Guid)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,System.Guid,System.Guid,System.Guid)
  id: CalculateStandCuttingAgeAsync(System.Guid,System.Guid,System.Guid,System.Guid)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandCuttingAgeAsync(Guid, Guid, Guid, Guid)
  nameWithType: ParmaCalculationService.CalculateStandCuttingAgeAsync(Guid, Guid, Guid, Guid)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandCuttingAgeAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 416
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<int> CalculateStandCuttingAgeAsync(Guid departmentId, Guid forestGroupId, Guid dominantSpeciesId, Guid bonitetId)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: forestGroupId
      type: System.Guid
    - id: dominantSpeciesId
      type: System.Guid
    - id: bonitetId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function CalculateStandCuttingAgeAsync(departmentId As Guid, forestGroupId As Guid, dominantSpeciesId As Guid, bonitetId As Guid) As Task(Of Integer)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync*
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  id: CalculateStandCuttingAgeAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandCuttingAgeAsync(Guid, ForestGroup, TreeSpecies, BonitetClass)
  nameWithType: ParmaCalculationService.CalculateStandCuttingAgeAsync(Guid, ForestGroup, TreeSpecies, BonitetClass)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandCuttingAgeAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 450
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<int> CalculateStandCuttingAgeAsync(Guid departmentId, ForestGroup forestGroup, TreeSpecies dominantSpecies, BonitetClass bonitet)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: forestGroup
      type: ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup
    - id: dominantSpecies
      type: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    - id: bonitet
      type: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function CalculateStandCuttingAgeAsync(departmentId As Guid, forestGroup As ForestGroup, dominantSpecies As TreeSpecies, bonitet As BonitetClass) As Task(Of Integer)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync*
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  id: CalculateStandAgeGroupAsync(System.Guid,ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies,System.Int32,ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandAgeGroupAsync(Guid, ForestGroup, TreeSpecies, int, BonitetClass)
  nameWithType: ParmaCalculationService.CalculateStandAgeGroupAsync(Guid, ForestGroup, TreeSpecies, int, BonitetClass)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, int, ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandAgeGroupAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 466
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<AgeGroup> CalculateStandAgeGroupAsync(Guid departmentId, ForestGroup forestGroup, TreeSpecies dominantSpecies, int dominantSpeciesAge, BonitetClass bonitet)
    parameters:
    - id: departmentId
      type: System.Guid
    - id: forestGroup
      type: ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup
    - id: dominantSpecies
      type: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    - id: dominantSpeciesAge
      type: System.Int32
    - id: bonitet
      type: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup}
    content.vb: Public Function CalculateStandAgeGroupAsync(departmentId As Guid, forestGroup As ForestGroup, dominantSpecies As TreeSpecies, dominantSpeciesAge As Integer, bonitet As BonitetClass) As Task(Of AgeGroup)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync*
  nameWithType.vb: ParmaCalculationService.CalculateStandAgeGroupAsync(Guid, ForestGroup, TreeSpecies, Integer, BonitetClass)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync(System.Guid, ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies, Integer, ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  name.vb: CalculateStandAgeGroupAsync(Guid, ForestGroup, TreeSpecies, Integer, BonitetClass)
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup(System.Int32,System.Int32)
  commentId: M:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup(System.Int32,System.Int32)
  id: CalculateStandAgeGroup(System.Int32,System.Int32)
  parent: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService
  langs:
  - csharp
  - vb
  name: CalculateStandAgeGroup(int, int)
  nameWithType: ParmaCalculationService.CalculateStandAgeGroup(int, int)
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup(int, int)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculateStandAgeGroup
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Parma.Space/Calculation/ParmaCalculationService.cs
    startLine: 487
  assemblies:
  - ParmaGIS.Modules.Parma.Space
  namespace: ParmaGIS.Modules.Parma.Space.Calculation
  syntax:
    content: public Task<AgeGroup> CalculateStandAgeGroup(int ageClass, int cuttingAgeClass)
    parameters:
    - id: ageClass
      type: System.Int32
    - id: cuttingAgeClass
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup}
    content.vb: Public Function CalculateStandAgeGroup(ageClass As Integer, cuttingAgeClass As Integer) As Task(Of AgeGroup)
  overload: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup*
  nameWithType.vb: ParmaCalculationService.CalculateStandAgeGroup(Integer, Integer)
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup(Integer, Integer)
  name.vb: CalculateStandAgeGroup(Integer, Integer)
references:
- uid: ParmaGIS.Modules.Parma.Space.Calculation
  commentId: N:ParmaGIS.Modules.Parma.Space.Calculation
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Parma.Space.Calculation
  nameWithType: ParmaGIS.Modules.Parma.Space.Calculation
  fullName: ParmaGIS.Modules.Parma.Space.Calculation
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Parma.Space.Calculation.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Parma.Space.Calculation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationService
  commentId: T:ParmaGIS.Modules.Data.Space.Calculation.ICalculationService
  parent: ParmaGIS.Modules.Data.Space.Calculation
  href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationService.html
  name: ICalculationService
  nameWithType: ICalculationService
  fullName: ParmaGIS.Modules.Data.Space.Calculation.ICalculationService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.Calculation
  commentId: N:ParmaGIS.Modules.Data.Space.Calculation
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Calculation
  nameWithType: ParmaGIS.Modules.Data.Space.Calculation
  fullName: ParmaGIS.Modules.Data.Space.Calculation
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Data.Space.Calculation.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Data.Space.Calculation.html
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.#ctor
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService__ctor_ParmaGIS_Modules_Parma_Space_ParmaSpace_
  name: ParmaCalculationService
  nameWithType: ParmaCalculationService.ParmaCalculationService
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.ParmaCalculationService
  nameWithType.vb: ParmaCalculationService.New
  fullName.vb: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.New
  name.vb: New
- uid: ParmaGIS.Modules.Parma.Space.ParmaSpace
  commentId: T:ParmaGIS.Modules.Parma.Space.ParmaSpace
  parent: ParmaGIS.Modules.Parma.Space
  href: ParmaGIS.Modules.Parma.Space.ParmaSpace.html
  name: ParmaSpace
  nameWithType: ParmaSpace
  fullName: ParmaGIS.Modules.Parma.Space.ParmaSpace
- uid: ParmaGIS.Modules.Parma.Space
  commentId: N:ParmaGIS.Modules.Parma.Space
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Parma.Space
  nameWithType: ParmaGIS.Modules.Parma.Space
  fullName: ParmaGIS.Modules.Parma.Space
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateOrderedWoodLayerSpeciesAsync__1_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies__System_Func___0_System_Int32__System_Func___0_System_Int32__System_Func___0_System_Int32__
  name: CalculateOrderedWoodLayerSpeciesAsync
  nameWithType: ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateOrderedWoodLayerSpeciesAsync
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{T},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
  commentId: T:System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TreeSpecies>
  nameWithType: Func<T, TreeSpecies>
  fullName: System.Func<T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>
  nameWithType.vb: Func(Of T, TreeSpecies)
  fullName.vb: System.Func(Of T, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies)
  name.vb: Func(Of T, TreeSpecies)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    name: TreeSpecies
    href: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    name: TreeSpecies
    href: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies.html
  - name: )
- uid: System.Func{{T},System.Int32}
  commentId: T:System.Func{``0,System.Int32}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, int>
  nameWithType: Func<T, int>
  fullName: System.Func<T, int>
  nameWithType.vb: Func(Of T, Integer)
  fullName.vb: System.Func(Of T, Integer)
  name.vb: Func(Of T, Integer)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerSpeciesOrderAsync__1_System_Guid_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies__System_Func___0_System_Int32__
  name: CalculateWoodLayerSpeciesOrderAsync
  nameWithType: ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerSpeciesOrderAsync
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerDominantSpeciesAsync__1_System_Guid_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies__System_Func___0_System_Int32__
  name: CalculateWoodLayerDominantSpeciesAsync
  nameWithType: ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDominantSpeciesAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerCompositionAsync__1_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies__System_Func___0_System_Int32__System_Boolean_System_Nullable_System_Guid__
  name: CalculateWoodLayerCompositionAsync
  nameWithType: ParmaCalculationService.CalculateWoodLayerCompositionAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerCompositionAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerDensity_System_Double_System_Int32_
  name: CalculateWoodLayerDensity
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensity
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensity
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerAbsoluteDensity_System_Double_System_Int32_
  name: CalculateWoodLayerAbsoluteDensity
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensity
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensity
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerStock_System_Double_System_Int32_
  name: CalculateWoodLayerStock
  nameWithType: ParmaCalculationService.CalculateWoodLayerStock
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerStock
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerDensityAndStock_System_Double_System_Int32_System_Int32_
  name: CalculateWoodLayerDensityAndStock
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensityAndStock
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStock
- uid: System.ValueTuple{System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double density, double stock)
  nameWithType: (double density, double stock)
  fullName: (double density, double stock)
  nameWithType.vb: (density As Double, stock As Double)
  fullName.vb: (density As Double, stock As Double)
  name.vb: (density As Double, stock As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.density
    name: density
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.density
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.stock
    name: stock
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.stock
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.density
    name: density
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.density
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.stock
    name: stock
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.stock
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerAbsoluteDensityAndStock_System_Double_System_Int32_System_Int32_
  name: CalculateWoodLayerAbsoluteDensityAndStock
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStock
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerDensityAndStockAsync_System_Guid_System_Guid_System_Double_System_Double_
  name: CalculateWoodLayerDensityAndStockAsync
  nameWithType: ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerDensityAndStockAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Double,System.Double}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(double density, double stock)>
  nameWithType: Task<(double density, double stock)>
  fullName: System.Threading.Tasks.Task<(double density, double stock)>
  nameWithType.vb: Task(Of (density As Double, stock As Double))
  fullName.vb: System.Threading.Tasks.Task(Of (density As Double, stock As Double))
  name.vb: Task(Of (density As Double, stock As Double))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.density
    name: density
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.density
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.stock
    name: stock
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.stock
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.density
    name: density
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.density
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.stock
    name: stock
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.stock
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateWoodLayerAbsoluteDensityAndStockAsync_System_Guid_System_Guid_System_Double_System_Double_
  name: CalculateWoodLayerAbsoluteDensityAndStockAsync
  nameWithType: ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateWoodLayerAbsoluteDensityAndStockAsync
- uid: ParmaGIS.Modules.Parma.Space.Calculation.StockTable
  commentId: T:ParmaGIS.Modules.Parma.Space.Calculation.StockTable
  parent: ParmaGIS.Modules.Parma.Space.Calculation
  href: ParmaGIS.Modules.Parma.Space.Calculation.StockTable.html
  name: StockTable
  nameWithType: StockTable
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.StockTable
- uid: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
  commentId: T:ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
  parent: ParmaGIS.Modules.Parma.Space.Catalog
  href: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies.html
  name: TreeSpecies
  nameWithType: TreeSpecies
  fullName: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
- uid: ParmaGIS.Modules.Parma.Space.Catalog
  commentId: N:ParmaGIS.Modules.Parma.Space.Catalog
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Parma.Space.Catalog
  nameWithType: ParmaGIS.Modules.Parma.Space.Catalog
  fullName: ParmaGIS.Modules.Parma.Space.Catalog
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Parma.Space.Catalog.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Parma
    name: Parma
    href: ParmaGIS.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space
    name: Space
    href: ParmaGIS.Modules.Parma.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Parma.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Parma.Space.Catalog.html
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandWoodLayerOrder__1_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_WoodLayerType__
  name: CalculateStandWoodLayerOrder
  nameWithType: ParmaCalculationService.CalculateStandWoodLayerOrder
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandWoodLayerOrder
- uid: System.Collections.Generic.IEnumerable{{TItem}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TItem>
  nameWithType: IEnumerable<TItem>
  fullName: System.Collections.Generic.IEnumerable<TItem>
  nameWithType.vb: IEnumerable(Of TItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TItem)
  name.vb: IEnumerable(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
  commentId: T:System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TItem, WoodLayerType>
  nameWithType: Func<TItem, WoodLayerType>
  fullName: System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType>
  nameWithType.vb: Func(Of TItem, WoodLayerType)
  fullName.vb: System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType)
  name.vb: Func(Of TItem, WoodLayerType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType
    name: WoodLayerType
    href: ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType
    name: WoodLayerType
    href: ParmaGIS.Modules.Parma.Space.Catalog.WoodLayerType.html
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandDominantWoodLayer__1_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_WoodLayerType__
  name: CalculateStandDominantWoodLayer
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayer
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayer
- uid: '{TItem}'
  commentId: '!:TItem'
  definition: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandDominantWoodLayerSpeciesAsync__1_System_Guid_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_WoodLayerType__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies__System_Func___0_System_Int32__
  name: CalculateStandDominantWoodLayerSpeciesAsync
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpeciesAsync
- uid: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
  commentId: T:System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TItem, TreeSpecies>
  nameWithType: Func<TItem, TreeSpecies>
  fullName: System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies>
  nameWithType.vb: Func(Of TItem, TreeSpecies)
  fullName.vb: System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies)
  name.vb: Func(Of TItem, TreeSpecies)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    name: TreeSpecies
    href: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies
    name: TreeSpecies
    href: ParmaGIS.Modules.Parma.Space.Catalog.TreeSpecies.html
  - name: )
- uid: System.Func{{TItem},System.Int32}
  commentId: T:System.Func{``0,System.Int32}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TItem, int>
  nameWithType: Func<TItem, int>
  fullName: System.Func<TItem, int>
  nameWithType.vb: Func(Of TItem, Integer)
  fullName.vb: System.Func(Of TItem, Integer)
  name.vb: Func(Of TItem, Integer)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task{{TItem}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TItem>
  nameWithType: Task<TItem>
  fullName: System.Threading.Tasks.Task<TItem>
  nameWithType.vb: Task(Of TItem)
  fullName.vb: System.Threading.Tasks.Task(Of TItem)
  name.vb: Task(Of TItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandDominantWoodLayerSpecies__1_System_Collections_Generic_IEnumerable___0__System_Func___0_ParmaGIS_Modules_Parma_Space_Catalog_WoodLayerType__System_Func___0_System_Int32__
  name: CalculateStandDominantWoodLayerSpecies
  nameWithType: ParmaCalculationService.CalculateStandDominantWoodLayerSpecies
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandDominantWoodLayerSpecies
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandBonitetClassAsync_System_Guid_System_Guid_System_Int32_System_Decimal_
  name: CalculateStandBonitetClassAsync
  nameWithType: ParmaCalculationService.CalculateStandBonitetClassAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandBonitetClassAsync
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BonitetClass>
  nameWithType: Task<BonitetClass>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass>
  nameWithType.vb: Task(Of BonitetClass)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass)
  name.vb: Task(Of BonitetClass)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
    name: BonitetClass
    href: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
    name: BonitetClass
    href: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass.html
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Catalog.Origin
  commentId: T:ParmaGIS.Modules.Parma.Space.Catalog.Origin
  parent: ParmaGIS.Modules.Parma.Space.Catalog
  href: ParmaGIS.Modules.Parma.Space.Catalog.Origin.html
  name: Origin
  nameWithType: Origin
  fullName: ParmaGIS.Modules.Parma.Space.Catalog.Origin
- uid: System.Func{{TItem},ParmaGIS.Modules.Parma.Space.Catalog.Origin}
  commentId: T:System.Func{``0,ParmaGIS.Modules.Parma.Space.Catalog.Origin}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TItem, Origin>
  nameWithType: Func<TItem, Origin>
  fullName: System.Func<TItem, ParmaGIS.Modules.Parma.Space.Catalog.Origin>
  nameWithType.vb: Func(Of TItem, Origin)
  fullName.vb: System.Func(Of TItem, ParmaGIS.Modules.Parma.Space.Catalog.Origin)
  name.vb: Func(Of TItem, Origin)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.Origin
    name: Origin
    href: ParmaGIS.Modules.Parma.Space.Catalog.Origin.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.Origin
    name: Origin
    href: ParmaGIS.Modules.Parma.Space.Catalog.Origin.html
  - name: )
- uid: System.Func{{TItem},System.Decimal}
  commentId: T:System.Func{``0,System.Decimal}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TItem, decimal>
  nameWithType: Func<TItem, decimal>
  fullName: System.Func<TItem, decimal>
  nameWithType.vb: Func(Of TItem, Decimal)
  fullName.vb: System.Func(Of TItem, Decimal)
  name.vb: Func(Of TItem, Decimal)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandAgeClass_System_Int32_System_Int32_
  name: CalculateStandAgeClass
  nameWithType: ParmaCalculationService.CalculateStandAgeClass
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClass
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandAgeClassAsync_System_Guid_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies_System_Int32_
  name: CalculateStandAgeClassAsync
  nameWithType: ParmaCalculationService.CalculateStandAgeClassAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeClassAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandCuttingAgeAsync_System_Guid_System_Guid_System_Guid_System_Guid_
  name: CalculateStandCuttingAgeAsync
  nameWithType: ParmaCalculationService.CalculateStandCuttingAgeAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandCuttingAgeAsync
- uid: ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup
  commentId: T:ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup
  parent: ParmaGIS.Modules.Parma.Space.Catalog
  href: ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup.html
  name: ForestGroup
  nameWithType: ForestGroup
  fullName: ParmaGIS.Modules.Parma.Space.Catalog.ForestGroup
- uid: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
  commentId: T:ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
  parent: ParmaGIS.Modules.Parma.Space.Catalog
  href: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass.html
  name: BonitetClass
  nameWithType: BonitetClass
  fullName: ParmaGIS.Modules.Parma.Space.Catalog.BonitetClass
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandAgeGroupAsync_System_Guid_ParmaGIS_Modules_Parma_Space_Catalog_ForestGroup_ParmaGIS_Modules_Parma_Space_Catalog_TreeSpecies_System_Int32_ParmaGIS_Modules_Parma_Space_Catalog_BonitetClass_
  name: CalculateStandAgeGroupAsync
  nameWithType: ParmaCalculationService.CalculateStandAgeGroupAsync
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroupAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AgeGroup>
  nameWithType: Task<AgeGroup>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup>
  nameWithType.vb: Task(Of AgeGroup)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup)
  name.vb: Task(Of AgeGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup
    name: AgeGroup
    href: ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup
    name: AgeGroup
    href: ParmaGIS.Modules.Parma.Space.Catalog.AgeGroup.html
  - name: )
- uid: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup*
  commentId: Overload:ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup
  href: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.html#ParmaGIS_Modules_Parma_Space_Calculation_ParmaCalculationService_CalculateStandAgeGroup_System_Int32_System_Int32_
  name: CalculateStandAgeGroup
  nameWithType: ParmaCalculationService.CalculateStandAgeGroup
  fullName: ParmaGIS.Modules.Parma.Space.Calculation.ParmaCalculationService.CalculateStandAgeGroup
