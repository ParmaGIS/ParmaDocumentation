### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  id: INotifyCalculationInfoExtensions
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  children:
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``0,System.String,``1,``1},System.String},System.Boolean)
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``1,``1},System.String},System.Boolean)
  - ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  langs:
  - csharp
  - vb
  name: INotifyCalculationInfoExtensions
  nameWithType: INotifyCalculationInfoExtensions
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: INotifyCalculationInfoExtensions
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 19
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: public static class INotifyCalculationInfoExtensions
    content.vb: Public Module INotifyCalculationInfoExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: ObserveCalcProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: ObserveCalcProperty<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>)
  nameWithType: INotifyCalculationInfoExtensions.ObserveCalcProperty<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty<TSubject, TProperty>(TSubject, System.Linq.Expressions.Expression<System.Func<TSubject, TProperty>>)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObserveCalcProperty
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 23
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IObservable<(TProperty Value, TProperty CalcValue)> ObserveCalcProperty<TSubject, TProperty>(this TSubject subject, Expression<Func<TSubject, TProperty>> propertySelector) where TSubject : class, INotifyCalculationInfo'
    parameters:
    - id: subject
      type: '{TSubject}'
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TSubject},{TProperty}}}
    typeParameters:
    - id: TSubject
    - id: TProperty
    return:
      type: System.IObservable{System.ValueTuple{{TProperty},{TProperty}}}
    content.vb: Public Shared Function ObserveCalcProperty(Of TSubject As {Class, INotifyCalculationInfo}, TProperty)(subject As TSubject, propertySelector As Expression(Of Func(Of TSubject, TProperty))) As IObservable(Of (Value As TProperty, CalcValue As TProperty))
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty*
  nameWithType.vb: INotifyCalculationInfoExtensions.ObserveCalcProperty(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)))
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty(Of TSubject, TProperty)(TSubject, System.Linq.Expressions.Expression(Of System.Func(Of TSubject, TProperty)))
  name.vb: ObserveCalcProperty(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)))
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  id: SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>, RulesObserver, string?, bool, IEqualityComparer<TProperty>?)
  nameWithType: INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>, RulesObserver, string?, bool, IEqualityComparer<TProperty>?)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, System.Linq.Expressions.Expression<System.Func<TSubject, TProperty>>, ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, string?, bool, System.Collections.Generic.IEqualityComparer<TProperty>?)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetErrorWhenComparisonCalcValue
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 37
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IDisposable SetErrorWhenComparisonCalcValue<TSubject, TProperty>(this TSubject subject, Expression<Func<TSubject, TProperty>> propertySelector, RulesObserver rulesObserver, string? message = null, bool importantError = true, IEqualityComparer<TProperty>? comparer = null) where TSubject : class, INotifyCalculationInfo, INotifyPropertyChanged'
    parameters:
    - id: subject
      type: '{TSubject}'
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TSubject},{TProperty}}}
    - id: rulesObserver
      type: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
    - id: message
      type: System.String
    - id: importantError
      type: System.Boolean
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TProperty}}
    typeParameters:
    - id: TSubject
    - id: TProperty
    return:
      type: System.IDisposable
    content.vb: Public Shared Function SetErrorWhenComparisonCalcValue(Of TSubject As {Class, INotifyCalculationInfo, INotifyPropertyChanged}, TProperty)(subject As TSubject, propertySelector As Expression(Of Func(Of TSubject, TProperty)), rulesObserver As RulesObserver, message As String = Nothing, importantError As Boolean = True, comparer As IEqualityComparer(Of TProperty) = Nothing) As IDisposable
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue*
  nameWithType.vb: INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)), RulesObserver, String, Boolean, IEqualityComparer(Of TProperty))
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, System.Linq.Expressions.Expression(Of System.Func(Of TSubject, TProperty)), ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, String, Boolean, System.Collections.Generic.IEqualityComparer(Of TProperty))
  name.vb: SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)), RulesObserver, String, Boolean, IEqualityComparer(Of TProperty))
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``1,``1},System.String},System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``1,``1},System.String},System.Boolean)
  id: SetErrorWhenComparisonCalcValue``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``1,``1},System.String},System.Boolean)
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>, RulesObserver, Func<(TProperty Value, TProperty CalcValue), string?>, bool)
  nameWithType: INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, Expression<Func<TSubject, TProperty>>, RulesObserver, Func<(TProperty Value, TProperty CalcValue), string?>, bool)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue<TSubject, TProperty>(TSubject, System.Linq.Expressions.Expression<System.Func<TSubject, TProperty>>, ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, System.Func<(TProperty Value, TProperty CalcValue), string?>, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetErrorWhenComparisonCalcValue
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 58
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IDisposable SetErrorWhenComparisonCalcValue<TSubject, TProperty>(this TSubject subject, Expression<Func<TSubject, TProperty>> propertySelector, RulesObserver rulesObserver, Func<(TProperty Value, TProperty CalcValue), string?> messageFactory, bool importantError = true) where TSubject : class, INotifyCalculationInfo, INotifyPropertyChanged'
    parameters:
    - id: subject
      type: '{TSubject}'
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TSubject},{TProperty}}}
    - id: rulesObserver
      type: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
    - id: messageFactory
      type: System.Func{System.ValueTuple{{TProperty},{TProperty}},System.String}
    - id: importantError
      type: System.Boolean
    typeParameters:
    - id: TSubject
    - id: TProperty
    return:
      type: System.IDisposable
    content.vb: Public Shared Function SetErrorWhenComparisonCalcValue(Of TSubject As {Class, INotifyCalculationInfo, INotifyPropertyChanged}, TProperty)(subject As TSubject, propertySelector As Expression(Of Func(Of TSubject, TProperty)), rulesObserver As RulesObserver, messageFactory As Func(Of (Value As TProperty, CalcValue As TProperty), String), importantError As Boolean = True) As IDisposable
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue*
  nameWithType.vb: INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)), RulesObserver, Func(Of (Value As TProperty, CalcValue As TProperty), String), Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, System.Linq.Expressions.Expression(Of System.Func(Of TSubject, TProperty)), ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, System.Func(Of (Value As TProperty, CalcValue As TProperty), String), Boolean)
  name.vb: SetErrorWhenComparisonCalcValue(Of TSubject, TProperty)(TSubject, Expression(Of Func(Of TSubject, TProperty)), RulesObserver, Func(Of (Value As TProperty, CalcValue As TProperty), String), Boolean)
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  id: SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.String,System.Boolean,System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, RulesObserver, string?, bool, IEqualityComparer<TProperty>?)
  nameWithType: INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, RulesObserver, string?, bool, IEqualityComparer<TProperty>?)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(System.Collections.ObjectModel.ObservableCollection<TElement>, System.Linq.Expressions.Expression<System.Func<TElement, TProperty>>, ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, string?, bool, System.Collections.Generic.IEqualityComparer<TProperty>?)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetElementErrorWhenComparisonCalcValueRule
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 74
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IDisposable SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(this ObservableCollection<TElement> collection, Expression<Func<TElement, TProperty>> propertySelector, RulesObserver rulesObserver, string? message = null, bool importantError = true, IEqualityComparer<TProperty>? comparer = null) where TElement : class, INotifyCalculationInfo, INotifyPropertyChanged'
    parameters:
    - id: collection
      type: System.Collections.ObjectModel.ObservableCollection{{TElement}}
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TElement},{TProperty}}}
    - id: rulesObserver
      type: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
    - id: message
      type: System.String
    - id: importantError
      type: System.Boolean
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TProperty}}
    typeParameters:
    - id: TElement
    - id: TProperty
    return:
      type: System.IDisposable
    content.vb: Public Shared Function SetElementErrorWhenComparisonCalcValueRule(Of TElement As {Class, INotifyCalculationInfo, INotifyPropertyChanged}, TProperty)(collection As ObservableCollection(Of TElement), propertySelector As Expression(Of Func(Of TElement, TProperty)), rulesObserver As RulesObserver, message As String = Nothing, importantError As Boolean = True, comparer As IEqualityComparer(Of TProperty) = Nothing) As IDisposable
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule*
  nameWithType.vb: INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), RulesObserver, String, Boolean, IEqualityComparer(Of TProperty))
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(System.Collections.ObjectModel.ObservableCollection(Of TElement), System.Linq.Expressions.Expression(Of System.Func(Of TElement, TProperty)), ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, String, Boolean, System.Collections.Generic.IEqualityComparer(Of TProperty))
  name.vb: SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), RulesObserver, String, Boolean, IEqualityComparer(Of TProperty))
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``0,System.String,``1,``1},System.String},System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``0,System.String,``1,``1},System.String},System.Boolean)
  id: SetElementErrorWhenComparisonCalcValueRule``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver,System.Func{System.ValueTuple{``0,System.String,``1,``1},System.String},System.Boolean)
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, RulesObserver, Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string?>, bool)
  nameWithType: INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, RulesObserver, Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string?>, bool)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(System.Collections.ObjectModel.ObservableCollection<TElement>, System.Linq.Expressions.Expression<System.Func<TElement, TProperty>>, ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, System.Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string?>, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetElementErrorWhenComparisonCalcValueRule
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 96
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IDisposable SetElementErrorWhenComparisonCalcValueRule<TElement, TProperty>(this ObservableCollection<TElement> collection, Expression<Func<TElement, TProperty>> propertySelector, RulesObserver rulesObserver, Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string?> messageFactory, bool importantError = true) where TElement : class, INotifyCalculationInfo, INotifyPropertyChanged'
    parameters:
    - id: collection
      type: System.Collections.ObjectModel.ObservableCollection{{TElement}}
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TElement},{TProperty}}}
    - id: rulesObserver
      type: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
    - id: messageFactory
      type: System.Func{System.ValueTuple{{TElement},System.String,{TProperty},{TProperty}},System.String}
    - id: importantError
      type: System.Boolean
    typeParameters:
    - id: TElement
    - id: TProperty
    return:
      type: System.IDisposable
    content.vb: Public Shared Function SetElementErrorWhenComparisonCalcValueRule(Of TElement As {Class, INotifyCalculationInfo, INotifyPropertyChanged}, TProperty)(collection As ObservableCollection(Of TElement), propertySelector As Expression(Of Func(Of TElement, TProperty)), rulesObserver As RulesObserver, messageFactory As Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String), importantError As Boolean = True) As IDisposable
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule*
  nameWithType.vb: INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), RulesObserver, Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String), Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(System.Collections.ObjectModel.ObservableCollection(Of TElement), System.Linq.Expressions.Expression(Of System.Func(Of TElement, TProperty)), ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver, System.Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String), Boolean)
  name.vb: SetElementErrorWhenComparisonCalcValueRule(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), RulesObserver, Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String), Boolean)
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)
  id: ObserveElementCalcProperty``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)
  isExtensionMethod: true
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions
  langs:
  - csharp
  - vb
  name: ObserveElementCalcProperty<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, bool)
  nameWithType: INotifyCalculationInfoExtensions.ObserveElementCalcProperty<TElement, TProperty>(ObservableCollection<TElement>, Expression<Func<TElement, TProperty>>, bool)
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty<TElement, TProperty>(System.Collections.ObjectModel.ObservableCollection<TElement>, System.Linq.Expressions.Expression<System.Func<TElement, TProperty>>, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObserveElementCalcProperty
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Data.UI/ReactiveRules/INotifyCalculationInfoExtensions.cs
    startLine: 111
  assemblies:
  - ParmaGIS.WPF.Modules.Data.UI
  namespace: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  syntax:
    content: 'public static IObservable<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue)> ObserveElementCalcProperty<TElement, TProperty>(this ObservableCollection<TElement> collection, Expression<Func<TElement, TProperty>> propertySelector, bool isPushCurrentValueAtFirst = true) where TElement : class, INotifyCalculationInfo'
    parameters:
    - id: collection
      type: System.Collections.ObjectModel.ObservableCollection{{TElement}}
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{{TElement},{TProperty}}}
    - id: isPushCurrentValueAtFirst
      type: System.Boolean
    typeParameters:
    - id: TElement
    - id: TProperty
    return:
      type: System.IObservable{System.ValueTuple{{TElement},System.String,{TProperty},{TProperty}}}
    content.vb: Public Shared Function ObserveElementCalcProperty(Of TElement As {Class, INotifyCalculationInfo}, TProperty)(collection As ObservableCollection(Of TElement), propertySelector As Expression(Of Func(Of TElement, TProperty)), isPushCurrentValueAtFirst As Boolean = True) As IObservable(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty))
  overload: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty*
  nameWithType.vb: INotifyCalculationInfoExtensions.ObserveElementCalcProperty(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty(Of TElement, TProperty)(System.Collections.ObjectModel.ObservableCollection(Of TElement), System.Linq.Expressions.Expression(Of System.Func(Of TElement, TProperty)), Boolean)
  name.vb: ObserveElementCalcProperty(Of TElement, TProperty)(ObservableCollection(Of TElement), Expression(Of Func(Of TElement, TProperty)), Boolean)
references:
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  commentId: N:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  href: ParmaGIS.html
  name: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  nameWithType: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data
    name: Data
    href: ParmaGIS.WPF.Modules.Data.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Data.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
    name: ReactiveRules
    href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data
    name: Data
    href: ParmaGIS.WPF.Modules.Data.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Data.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
    name: ReactiveRules
    href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty
  href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.html#ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_INotifyCalculationInfoExtensions_ObserveCalcProperty__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: ObserveCalcProperty
  nameWithType: INotifyCalculationInfoExtensions.ObserveCalcProperty
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveCalcProperty
- uid: '{TSubject}'
  commentId: '!:TSubject'
  definition: TSubject
  name: TSubject
  nameWithType: TSubject
  fullName: TSubject
- uid: System.Linq.Expressions.Expression{System.Func{{TSubject},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TSubject, TProperty>>
  nameWithType: Expression<Func<TSubject, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TSubject, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TSubject, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TSubject, TProperty))
  name.vb: Expression(Of Func(Of TSubject, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSubject
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSubject
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: System.IObservable{System.ValueTuple{{TProperty},{TProperty}}}
  commentId: T:System.IObservable{System.ValueTuple{``1,``1}}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<(TProperty Value, TProperty CalcValue)>
  nameWithType: IObservable<(TProperty Value, TProperty CalcValue)>
  fullName: System.IObservable<(TProperty Value, TProperty CalcValue)>
  nameWithType.vb: IObservable(Of (Value As TProperty, CalcValue As TProperty))
  fullName.vb: System.IObservable(Of (Value As TProperty, CalcValue As TProperty))
  name.vb: IObservable(Of (Value As TProperty, CalcValue As TProperty))
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: (
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.value
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.calcvalue
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.value
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.calcvalue
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: TSubject
  name: TSubject
  nameWithType: TSubject
  fullName: TSubject
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue
  href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.html#ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_INotifyCalculationInfoExtensions_SetErrorWhenComparisonCalcValue__2___0_System_Linq_Expressions_Expression_System_Func___0___1___ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_RulesObserver_System_String_System_Boolean_System_Collections_Generic_IEqualityComparer___1__
  name: SetErrorWhenComparisonCalcValue
  nameWithType: INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetErrorWhenComparisonCalcValue
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
  commentId: T:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
  parent: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules
  href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver.html
  name: RulesObserver
  nameWithType: RulesObserver
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.RulesObserver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEqualityComparer{{TProperty}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TProperty>
  nameWithType: IEqualityComparer<TProperty>
  fullName: System.Collections.Generic.IEqualityComparer<TProperty>
  nameWithType.vb: IEqualityComparer(Of TProperty)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TProperty)
  name.vb: IEqualityComparer(Of TProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TProperty
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func{System.ValueTuple{{TProperty},{TProperty}},System.String}
  commentId: T:System.Func{System.ValueTuple{``1,``1},System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(TProperty Value, TProperty CalcValue), string>
  nameWithType: Func<(TProperty Value, TProperty CalcValue), string>
  fullName: System.Func<(TProperty Value, TProperty CalcValue), string>
  nameWithType.vb: Func(Of (Value As TProperty, CalcValue As TProperty), String)
  fullName.vb: System.Func(Of (Value As TProperty, CalcValue As TProperty), String)
  name.vb: Func(Of (Value As TProperty, CalcValue As TProperty), String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.value
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.calcvalue
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.value
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---1,--1-.calcvalue
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule
  href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.html#ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_INotifyCalculationInfoExtensions_SetElementErrorWhenComparisonCalcValueRule__2_System_Collections_ObjectModel_ObservableCollection___0__System_Linq_Expressions_Expression_System_Func___0___1___ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_RulesObserver_System_String_System_Boolean_System_Collections_Generic_IEqualityComparer___1__
  name: SetElementErrorWhenComparisonCalcValueRule
  nameWithType: INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.SetElementErrorWhenComparisonCalcValueRule
- uid: System.Collections.ObjectModel.ObservableCollection{{TElement}}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{``0}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: ObservableCollection<TElement>
  nameWithType: ObservableCollection<TElement>
  fullName: System.Collections.ObjectModel.ObservableCollection<TElement>
  nameWithType.vb: ObservableCollection(Of TElement)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of TElement)
  name.vb: ObservableCollection(Of TElement)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - name: TElement
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TElement},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TElement, TProperty>>
  nameWithType: Expression<Func<TElement, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TElement, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TElement, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TElement, TProperty))
  name.vb: Expression(Of Func(Of TElement, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.Func{System.ValueTuple{{TElement},System.String,{TProperty},{TProperty}},System.String}
  commentId: T:System.Func{System.ValueTuple{``0,System.String,``1,``1},System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string>
  nameWithType: Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string>
  fullName: System.Func<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue), string>
  nameWithType.vb: Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String)
  fullName.vb: System.Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String)
  name.vb: Func(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty), String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - name: TElement
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Element
    name: Element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.element
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.PropertyName
    name: PropertyName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.propertyname
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.value
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.calcvalue
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Element
    name: Element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.element
  - name: " "
  - name: As
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.PropertyName
    name: PropertyName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.propertyname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.value
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.calcvalue
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty*
  commentId: Overload:ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty
  href: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.html#ParmaGIS_WPF_Modules_Data_UI_ReactiveRules_INotifyCalculationInfoExtensions_ObserveElementCalcProperty__2_System_Collections_ObjectModel_ObservableCollection___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Boolean_
  name: ObserveElementCalcProperty
  nameWithType: INotifyCalculationInfoExtensions.ObserveElementCalcProperty
  fullName: ParmaGIS.WPF.Modules.Data.UI.ReactiveRules.INotifyCalculationInfoExtensions.ObserveElementCalcProperty
- uid: System.IObservable{System.ValueTuple{{TElement},System.String,{TProperty},{TProperty}}}
  commentId: T:System.IObservable{System.ValueTuple{``0,System.String,``1,``1}}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue)>
  nameWithType: IObservable<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue)>
  fullName: System.IObservable<(TElement Element, string PropertyName, TProperty Value, TProperty CalcValue)>
  nameWithType.vb: IObservable(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty))
  fullName.vb: System.IObservable(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty))
  name.vb: IObservable(Of (Element As TElement, PropertyName As String, Value As TProperty, CalcValue As TProperty))
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: (
  - name: TElement
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Element
    name: Element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.element
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.PropertyName
    name: PropertyName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.propertyname
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.value
  - name: ','
  - name: " "
  - name: TProperty
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.calcvalue
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Element
    name: Element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.element
  - name: " "
  - name: As
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.PropertyName
    name: PropertyName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.propertyname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.Value
    name: Value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.value
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.String,``1,``1}.CalcValue
    name: CalcValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.string,--1,--1-.calcvalue
  - name: " "
  - name: As
  - name: " "
  - name: TProperty
  - name: )
  - name: )
