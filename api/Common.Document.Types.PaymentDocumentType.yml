### YamlMime:ManagedReference
items:
- uid: Common.Document.Types.PaymentDocumentType
  commentId: T:Common.Document.Types.PaymentDocumentType
  id: PaymentDocumentType
  parent: Common.Document.Types
  children:
  - Common.Document.Types.PaymentDocumentType.AccountNumber
  - Common.Document.Types.PaymentDocumentType.Amount
  - Common.Document.Types.PaymentDocumentType.BankName
  - Common.Document.Types.PaymentDocumentType.Bik
  - Common.Document.Types.PaymentDocumentType.CorrAccountNumber
  - Common.Document.Types.PaymentDocumentType.DocDate
  - Common.Document.Types.PaymentDocumentType.DocDateSpecified
  - Common.Document.Types.PaymentDocumentType.Issuer
  - Common.Document.Types.PaymentDocumentType.Name
  - Common.Document.Types.PaymentDocumentType.Number
  - Common.Document.Types.PaymentDocumentType.Oktmo
  - Common.Document.Types.PaymentDocumentType.PayerName
  - Common.Document.Types.PaymentDocumentType.Series
  langs:
  - csharp
  - vb
  name: PaymentDocumentType
  nameWithType: PaymentDocumentType
  fullName: Common.Document.Types.PaymentDocumentType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PaymentDocumentType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 375
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: <p>Платежный документ</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PaymentDocumentType
    content.vb: >-
      <Serializable>

      Public Class PaymentDocumentType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.Name
  commentId: P:Common.Document.Types.PaymentDocumentType.Name
  id: Name
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PaymentDocumentType.Name
  fullName: Common.Document.Types.PaymentDocumentType.Name
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Name
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 390
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Наименование</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      [Required]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      <Required>

      Public Property Name As String
  overload: Common.Document.Types.PaymentDocumentType.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.DocDate
  commentId: P:Common.Document.Types.PaymentDocumentType.DocDate
  id: DocDate
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: DocDate
  nameWithType: PaymentDocumentType.DocDate
  fullName: Common.Document.Types.PaymentDocumentType.DocDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DocDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 403
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Дата выдачи</p>

    <p>Тип Дата в формате ГГГГ-ММ-ДД (2100-01-01 - 1900-01-01)</p>

    <p>Minimum inclusive value: 1900-01-01.</p>

    <p>Maximum inclusive value: 2100-01-01.</p>
  example: []
  syntax:
    content: >-
      [Range(typeof(DateTime), "1900-01-01", "2100-01-01")]

      public DateTime DocDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Range(GetType(Date), "1900-01-01", "2100-01-01")>

      Public Property DocDate As Date
  overload: Common.Document.Types.PaymentDocumentType.DocDate*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)
    arguments:
    - type: System.Type
      value: System.DateTime
    - type: System.String
      value: 1900-01-01
    - type: System.String
      value: 2100-01-01
- uid: Common.Document.Types.PaymentDocumentType.DocDateSpecified
  commentId: P:Common.Document.Types.PaymentDocumentType.DocDateSpecified
  id: DocDateSpecified
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: DocDateSpecified
  nameWithType: PaymentDocumentType.DocDateSpecified
  fullName: Common.Document.Types.PaymentDocumentType.DocDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DocDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 411
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: <p>Gets or sets a value indicating whether the DocDate property is specified.</p>
  example: []
  syntax:
    content: public bool DocDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DocDateSpecified As Boolean
  overload: Common.Document.Types.PaymentDocumentType.DocDateSpecified*
- uid: Common.Document.Types.PaymentDocumentType.Issuer
  commentId: P:Common.Document.Types.PaymentDocumentType.Issuer
  id: Issuer
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: PaymentDocumentType.Issuer
  fullName: Common.Document.Types.PaymentDocumentType.Issuer
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Issuer
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 420
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Кем выдан</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      public string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      Public Property Issuer As String
  overload: Common.Document.Types.PaymentDocumentType.Issuer*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
- uid: Common.Document.Types.PaymentDocumentType.Series
  commentId: P:Common.Document.Types.PaymentDocumentType.Series
  id: Series
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Series
  nameWithType: PaymentDocumentType.Series
  fullName: Common.Document.Types.PaymentDocumentType.Series
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Series
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 432
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Серия</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      public string Series { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      Public Property Series As String
  overload: Common.Document.Types.PaymentDocumentType.Series*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
- uid: Common.Document.Types.PaymentDocumentType.Number
  commentId: P:Common.Document.Types.PaymentDocumentType.Number
  id: Number
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: PaymentDocumentType.Number
  fullName: Common.Document.Types.PaymentDocumentType.Number
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Number
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 444
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Номер</p>

    <p>Тип Строка длиной от 1 до 50 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string Number { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property Number As String
  overload: Common.Document.Types.PaymentDocumentType.Number*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Document.Types.PaymentDocumentType.PayerName
  commentId: P:Common.Document.Types.PaymentDocumentType.PayerName
  id: PayerName
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: PayerName
  nameWithType: PaymentDocumentType.PayerName
  fullName: Common.Document.Types.PaymentDocumentType.PayerName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PayerName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 453
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: <p>ФИО плательщика</p>
  example: []
  syntax:
    content: >-
      [Required]

      public PersonNameType PayerName { get; set; }
    parameters: []
    return:
      type: Common.Complex.Types.PersonNameType
    content.vb: >-
      <Required>

      Public Property PayerName As PersonNameType
  overload: Common.Document.Types.PaymentDocumentType.PayerName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.Amount
  commentId: P:Common.Document.Types.PaymentDocumentType.Amount
  id: Amount
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: PaymentDocumentType.Amount
  fullName: Common.Document.Types.PaymentDocumentType.Amount
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Amount
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 464
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Сумма</p>

    <p>Тип Денежные суммы</p>

    <p>Total number of digits: 15.</p>

    <p>Total number of digits in fraction: 2.</p>
  example: []
  syntax:
    content: >-
      [Required]

      public decimal Amount { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <Required>

      Public Property Amount As Decimal
  overload: Common.Document.Types.PaymentDocumentType.Amount*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.Oktmo
  commentId: P:Common.Document.Types.PaymentDocumentType.Oktmo
  id: Oktmo
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Oktmo
  nameWithType: PaymentDocumentType.Oktmo
  fullName: Common.Document.Types.PaymentDocumentType.Oktmo
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Oktmo
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 474
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>ОКТМО</p>

    <p>ОКТМО</p>

    <p>Maximum length: 11.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(11)]

      public string Oktmo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(11)>

      Public Property Oktmo As String
  overload: Common.Document.Types.PaymentDocumentType.Oktmo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 11
- uid: Common.Document.Types.PaymentDocumentType.AccountNumber
  commentId: P:Common.Document.Types.PaymentDocumentType.AccountNumber
  id: AccountNumber
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: AccountNumber
  nameWithType: PaymentDocumentType.AccountNumber
  fullName: Common.Document.Types.PaymentDocumentType.AccountNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AccountNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 486
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Номер счета</p>

    <p>Тип Номер расчетного и корренспондентского счета 20 цифр</p>

    <p>Minimum length: 20.</p>

    <p>Maximum length: 20.</p>

    <p>Pattern: [0-9]{20}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(20)]

      [MaxLength(20)]

      [RegularExpression("[0-9]{20}")]

      [Required]

      public string AccountNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(20)>

      <MaxLength(20)>

      <RegularExpression("[0-9]{20}")>

      <Required>

      Public Property AccountNumber As String
  overload: Common.Document.Types.PaymentDocumentType.AccountNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{20}'
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.CorrAccountNumber
  commentId: P:Common.Document.Types.PaymentDocumentType.CorrAccountNumber
  id: CorrAccountNumber
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: CorrAccountNumber
  nameWithType: PaymentDocumentType.CorrAccountNumber
  fullName: Common.Document.Types.PaymentDocumentType.CorrAccountNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CorrAccountNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 501
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Номер корреспондентского счета</p>

    <p>Тип Номер расчетного и корренспондентского счета 20 цифр</p>

    <p>Minimum length: 20.</p>

    <p>Maximum length: 20.</p>

    <p>Pattern: [0-9]{20}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(20)]

      [MaxLength(20)]

      [RegularExpression("[0-9]{20}")]

      public string CorrAccountNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(20)>

      <MaxLength(20)>

      <RegularExpression("[0-9]{20}")>

      Public Property CorrAccountNumber As String
  overload: Common.Document.Types.PaymentDocumentType.CorrAccountNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{20}'
- uid: Common.Document.Types.PaymentDocumentType.BankName
  commentId: P:Common.Document.Types.PaymentDocumentType.BankName
  id: BankName
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: BankName
  nameWithType: PaymentDocumentType.BankName
  fullName: Common.Document.Types.PaymentDocumentType.BankName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: BankName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 514
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>Наименование банка получателя</p>

    <p>Тип Строка длиной от 1 до 255 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 255.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(255)]

      [Required]

      public string BankName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(255)>

      <Required>

      Public Property BankName As String
  overload: Common.Document.Types.PaymentDocumentType.BankName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Document.Types.PaymentDocumentType.Bik
  commentId: P:Common.Document.Types.PaymentDocumentType.Bik
  id: Bik
  parent: Common.Document.Types.PaymentDocumentType
  langs:
  - csharp
  - vb
  name: Bik
  nameWithType: PaymentDocumentType.Bik
  fullName: Common.Document.Types.PaymentDocumentType.Bik
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Bik
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Document.Types.cs
    startLine: 528
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Document.Types
  summary: >-
    <p>БИК</p>

    <p>Тип БИК банка 9 цифр</p>

    <p>Minimum length: 9.</p>

    <p>Maximum length: 9.</p>

    <p>Pattern: [0-9]{9}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(9)]

      [MaxLength(9)]

      [RegularExpression("[0-9]{9}")]

      [Required]

      public string Bik { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(9)>

      <MaxLength(9)>

      <RegularExpression("[0-9]{9}")>

      <Required>

      Public Property Bik As String
  overload: Common.Document.Types.PaymentDocumentType.Bik*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 9
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 9
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{9}'
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
references:
- uid: Common.Document.Types
  commentId: N:Common.Document.Types
  href: Common.html
  name: Common.Document.Types
  nameWithType: Common.Document.Types
  fullName: Common.Document.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Document
    name: Document
    href: Common.Document.html
  - name: .
  - uid: Common.Document.Types
    name: Types
    href: Common.Document.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Document
    name: Document
    href: Common.Document.html
  - name: .
  - uid: Common.Document.Types
    name: Types
    href: Common.Document.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.Document.Types.PaymentDocumentType.Name*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Name
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Name
  name: Name
  nameWithType: PaymentDocumentType.Name
  fullName: Common.Document.Types.PaymentDocumentType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Common.Document.Types.PaymentDocumentType.DocDate*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.DocDate
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_DocDate
  name: DocDate
  nameWithType: PaymentDocumentType.DocDate
  fullName: Common.Document.Types.PaymentDocumentType.DocDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Common.Document.Types.PaymentDocumentType.DocDateSpecified*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.DocDateSpecified
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_DocDateSpecified
  name: DocDateSpecified
  nameWithType: PaymentDocumentType.DocDateSpecified
  fullName: Common.Document.Types.PaymentDocumentType.DocDateSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Common.Document.Types.PaymentDocumentType.Issuer*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Issuer
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Issuer
  name: Issuer
  nameWithType: PaymentDocumentType.Issuer
  fullName: Common.Document.Types.PaymentDocumentType.Issuer
- uid: Common.Document.Types.PaymentDocumentType.Series*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Series
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Series
  name: Series
  nameWithType: PaymentDocumentType.Series
  fullName: Common.Document.Types.PaymentDocumentType.Series
- uid: Common.Document.Types.PaymentDocumentType.Number*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Number
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Number
  name: Number
  nameWithType: PaymentDocumentType.Number
  fullName: Common.Document.Types.PaymentDocumentType.Number
- uid: Common.Document.Types.PaymentDocumentType.PayerName*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.PayerName
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_PayerName
  name: PayerName
  nameWithType: PaymentDocumentType.PayerName
  fullName: Common.Document.Types.PaymentDocumentType.PayerName
- uid: Common.Complex.Types.PersonNameType
  commentId: T:Common.Complex.Types.PersonNameType
  parent: Common.Complex.Types
  href: Common.Complex.Types.PersonNameType.html
  name: PersonNameType
  nameWithType: PersonNameType
  fullName: Common.Complex.Types.PersonNameType
- uid: Common.Complex.Types
  commentId: N:Common.Complex.Types
  href: Common.html
  name: Common.Complex.Types
  nameWithType: Common.Complex.Types
  fullName: Common.Complex.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Complex
    name: Complex
    href: Common.Complex.html
  - name: .
  - uid: Common.Complex.Types
    name: Types
    href: Common.Complex.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Complex
    name: Complex
    href: Common.Complex.html
  - name: .
  - uid: Common.Complex.Types
    name: Types
    href: Common.Complex.Types.html
- uid: Common.Document.Types.PaymentDocumentType.Amount*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Amount
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Amount
  name: Amount
  nameWithType: PaymentDocumentType.Amount
  fullName: Common.Document.Types.PaymentDocumentType.Amount
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: Common.Document.Types.PaymentDocumentType.Oktmo*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Oktmo
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Oktmo
  name: Oktmo
  nameWithType: PaymentDocumentType.Oktmo
  fullName: Common.Document.Types.PaymentDocumentType.Oktmo
- uid: Common.Document.Types.PaymentDocumentType.AccountNumber*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.AccountNumber
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_AccountNumber
  name: AccountNumber
  nameWithType: PaymentDocumentType.AccountNumber
  fullName: Common.Document.Types.PaymentDocumentType.AccountNumber
- uid: Common.Document.Types.PaymentDocumentType.CorrAccountNumber*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.CorrAccountNumber
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_CorrAccountNumber
  name: CorrAccountNumber
  nameWithType: PaymentDocumentType.CorrAccountNumber
  fullName: Common.Document.Types.PaymentDocumentType.CorrAccountNumber
- uid: Common.Document.Types.PaymentDocumentType.BankName*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.BankName
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_BankName
  name: BankName
  nameWithType: PaymentDocumentType.BankName
  fullName: Common.Document.Types.PaymentDocumentType.BankName
- uid: Common.Document.Types.PaymentDocumentType.Bik*
  commentId: Overload:Common.Document.Types.PaymentDocumentType.Bik
  href: Common.Document.Types.PaymentDocumentType.html#Common_Document_Types_PaymentDocumentType_Bik
  name: Bik
  nameWithType: PaymentDocumentType.Bik
  fullName: Common.Document.Types.PaymentDocumentType.Bik
