### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  commentId: T:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  id: ModelToViewModelResolver`2
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  children:
  - ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor(ParmaGIS.Core.Serviceability.IServiceManager)
  - ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2
  - ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2(System.Predicate{``0})
  - ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve``1(``0)
  - ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault``1
  langs:
  - csharp
  - vb
  name: ModelToViewModelResolver<TModel, TViewModel>
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ModelToViewModelResolver
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 31
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: public class ModelToViewModelResolver<TModel, TViewModel>
    typeParameters:
    - id: TModel
    - id: TViewModel
    content.vb: Public Class ModelToViewModelResolver(Of TModel, TViewModel)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel)
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel)
  name.vb: ModelToViewModelResolver(Of TModel, TViewModel)
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor(ParmaGIS.Core.Serviceability.IServiceManager)
  commentId: M:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor(ParmaGIS.Core.Serviceability.IServiceManager)
  id: '#ctor(ParmaGIS.Core.Serviceability.IServiceManager)'
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  langs:
  - csharp
  - vb
  name: ModelToViewModelResolver(IServiceManager)
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.ModelToViewModelResolver(IServiceManager)
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.ModelToViewModelResolver(ParmaGIS.Core.Serviceability.IServiceManager)
  type: Constructor
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 51
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: public ModelToViewModelResolver(IServiceManager serviceManager)
    parameters:
    - id: serviceManager
      type: ParmaGIS.Core.Serviceability.IServiceManager
    content.vb: Public Sub New(serviceManager As IServiceManager)
  overload: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor*
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).New(IServiceManager)
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).New(ParmaGIS.Core.Serviceability.IServiceManager)
  name.vb: New(IServiceManager)
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2
  commentId: M:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2
  id: Register``2
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  langs:
  - csharp
  - vb
  name: Register<TM, TVM>()
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.Register<TM, TVM>()
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.Register<TM, TVM>()
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Register
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 57
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: 'public virtual void Register<TM, TVM>() where TM : TModel where TVM : class, TViewModel'
    typeParameters:
    - id: TM
    - id: TVM
    content.vb: Public Overridable Sub Register(Of TM As TModel, TVM As {Class, TViewModel})()
  overload: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register*
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).Register(Of TM, TVM)()
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).Register(Of TM, TVM)()
  name.vb: Register(Of TM, TVM)()
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2(System.Predicate{``0})
  commentId: M:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register``2(System.Predicate{``0})
  id: Register``2(System.Predicate{``0})
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  langs:
  - csharp
  - vb
  name: Register<TM, TVM>(Predicate<TM>)
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.Register<TM, TVM>(Predicate<TM>)
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.Register<TM, TVM>(System.Predicate<TM>)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Register
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 64
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: 'public virtual void Register<TM, TVM>(Predicate<TM> condition) where TM : TModel where TVM : class, TViewModel'
    parameters:
    - id: condition
      type: System.Predicate{{TM}}
    typeParameters:
    - id: TM
    - id: TVM
    content.vb: Public Overridable Sub Register(Of TM As TModel, TVM As {Class, TViewModel})(condition As Predicate(Of TM))
  overload: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register*
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).Register(Of TM, TVM)(Predicate(Of TM))
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).Register(Of TM, TVM)(System.Predicate(Of TM))
  name.vb: Register(Of TM, TVM)(Predicate(Of TM))
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault``1
  commentId: M:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault``1
  id: SetDefault``1
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  langs:
  - csharp
  - vb
  name: SetDefault<TVM>()
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.SetDefault<TVM>()
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.SetDefault<TVM>()
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetDefault
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 71
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: 'public void SetDefault<TVM>() where TVM : class, TViewModel'
    typeParameters:
    - id: TVM
    content.vb: Public Sub SetDefault(Of TVM As {Class, TViewModel})()
  overload: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault*
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).SetDefault(Of TVM)()
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).SetDefault(Of TVM)()
  name.vb: SetDefault(Of TVM)()
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve``1(``0)
  commentId: M:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve``1(``0)
  id: Resolve``1(``0)
  parent: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2
  langs:
  - csharp
  - vb
  name: Resolve<TM>(TM)
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.Resolve<TM>(TM)
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.Resolve<TM>(TM)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Resolve
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.Parma.UI/Addons/ObjectExplorer/Cards/ViewModels/DepartmentCardViewModel.cs
    startLine: 77
  assemblies:
  - ParmaGIS.WPF.Modules.Parma.UI
  namespace: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  syntax:
    content: 'public TViewModel Resolve<TM>(TM model) where TM : TModel'
    parameters:
    - id: model
      type: '{TM}'
    typeParameters:
    - id: TM
    return:
      type: '{TViewModel}'
    content.vb: Public Function Resolve(Of TM As TModel)(model As TM) As TViewModel
  overload: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve*
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).Resolve(Of TM)(TM)
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).Resolve(Of TM)(TM)
  name.vb: Resolve(Of TM)(TM)
references:
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  commentId: N:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  href: ParmaGIS.html
  name: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  nameWithType: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma
    name: Parma
    href: ParmaGIS.WPF.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Parma.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons
    name: Addons
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer
    name: ObjectExplorer
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards
    name: Cards
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
    name: ViewModels
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma
    name: Parma
    href: ParmaGIS.WPF.Modules.Parma.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI
    name: UI
    href: ParmaGIS.WPF.Modules.Parma.UI.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons
    name: Addons
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer
    name: ObjectExplorer
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards
    name: Cards
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels
    name: ViewModels
    href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor*
  commentId: Overload:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.#ctor
  href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver-2.html#ParmaGIS_WPF_Modules_Parma_UI_Addons_ObjectExplorer_Cards_ViewModels_ModelToViewModelResolver_2__ctor_ParmaGIS_Core_Serviceability_IServiceManager_
  name: ModelToViewModelResolver
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.ModelToViewModelResolver
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.ModelToViewModelResolver
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).New
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).New
  name.vb: New
- uid: ParmaGIS.Core.Serviceability.IServiceManager
  commentId: T:ParmaGIS.Core.Serviceability.IServiceManager
  parent: ParmaGIS.Core.Serviceability
  href: ParmaGIS.Core.Serviceability.IServiceManager.html
  name: IServiceManager
  nameWithType: IServiceManager
  fullName: ParmaGIS.Core.Serviceability.IServiceManager
- uid: ParmaGIS.Core.Serviceability
  commentId: N:ParmaGIS.Core.Serviceability
  href: ParmaGIS.html
  name: ParmaGIS.Core.Serviceability
  nameWithType: ParmaGIS.Core.Serviceability
  fullName: ParmaGIS.Core.Serviceability
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Serviceability
    name: Serviceability
    href: ParmaGIS.Core.Serviceability.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Serviceability
    name: Serviceability
    href: ParmaGIS.Core.Serviceability.html
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register*
  commentId: Overload:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Register
  href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver-2.html#ParmaGIS_WPF_Modules_Parma_UI_Addons_ObjectExplorer_Cards_ViewModels_ModelToViewModelResolver_2_Register__2
  name: Register
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.Register
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.Register
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).Register
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).Register
- uid: System.Predicate{{TM}}
  commentId: T:System.Predicate{``0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<TM>
  nameWithType: Predicate<TM>
  fullName: System.Predicate<TM>
  nameWithType.vb: Predicate(Of TM)
  fullName.vb: System.Predicate(Of TM)
  name.vb: Predicate(Of TM)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TM
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TM
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault*
  commentId: Overload:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.SetDefault
  href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver-2.html#ParmaGIS_WPF_Modules_Parma_UI_Addons_ObjectExplorer_Cards_ViewModels_ModelToViewModelResolver_2_SetDefault__1
  name: SetDefault
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.SetDefault
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.SetDefault
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).SetDefault
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).SetDefault
- uid: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve*
  commentId: Overload:ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver`2.Resolve
  href: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver-2.html#ParmaGIS_WPF_Modules_Parma_UI_Addons_ObjectExplorer_Cards_ViewModels_ModelToViewModelResolver_2_Resolve__1___0_
  name: Resolve
  nameWithType: ModelToViewModelResolver<TModel, TViewModel>.Resolve
  fullName: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver<TModel, TViewModel>.Resolve
  nameWithType.vb: ModelToViewModelResolver(Of TModel, TViewModel).Resolve
  fullName.vb: ParmaGIS.WPF.Modules.Parma.UI.Addons.ObjectExplorer.Cards.ViewModels.ModelToViewModelResolver(Of TModel, TViewModel).Resolve
- uid: '{TM}'
  commentId: '!:TM'
  definition: TM
  name: TM
  nameWithType: TM
  fullName: TM
- uid: '{TViewModel}'
  commentId: '!:TViewModel'
  definition: TViewModel
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
- uid: TM
  commentId: '!:TM'
  name: TM
  nameWithType: TM
  fullName: TM
- uid: TViewModel
  commentId: '!:TViewModel'
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
