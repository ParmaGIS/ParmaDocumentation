### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  commentId: T:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  id: UIDispatcherHelper
  parent: ParmaGIS.WPF.UI.Utilities
  children:
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action)
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action,System.Windows.Threading.DispatcherPriority)
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action)
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action,System.Windows.Threading.DispatcherPriority)
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action)
  - ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  langs:
  - csharp
  - vb
  name: UIDispatcherHelper
  nameWithType: UIDispatcherHelper
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  type: Class
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: UIDispatcherHelper
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 14
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Provides a mechanism for invoking actions on the UI dispatcher
  remarks: Based on Galasoft MvvmLight DispatcherHelper, but allowing a DispatcherPriority value to be applied.
  example: []
  syntax:
    content: public static class UIDispatcherHelper
    content.vb: Public Module UIDispatcherHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise
  id: Initialise
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: Initialise()
  nameWithType: UIDispatcherHelper.Initialise()
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise()
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Initialise
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 18
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: public static void Initialise()
    content.vb: Public Shared Sub Initialise()
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action)
  id: InvokeOnUIContext(System.Action)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: InvokeOnUIContext(Action)
  nameWithType: UIDispatcherHelper.InvokeOnUIContext(Action)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InvokeOnUIContext
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 45
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Invoke the action on the captured UI dispatcher, using the default priority
  example: []
  syntax:
    content: public static void InvokeOnUIContext(Action action)
    parameters:
    - id: action
      type: System.Action
      description: ''
    content.vb: Public Shared Sub InvokeOnUIContext(action As Action)
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action,System.Windows.Threading.DispatcherPriority)
  id: InvokeOnUIContext(System.Action,System.Windows.Threading.DispatcherPriority)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: InvokeOnUIContext(Action, DispatcherPriority)
  nameWithType: UIDispatcherHelper.InvokeOnUIContext(Action, DispatcherPriority)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext(System.Action, System.Windows.Threading.DispatcherPriority)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InvokeOnUIContext
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 55
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Invoke the action on the captured UI dispatcher, using the specified priority
  example: []
  syntax:
    content: public static void InvokeOnUIContext(Action action, DispatcherPriority priority)
    parameters:
    - id: action
      type: System.Action
      description: ''
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: ''
    content.vb: Public Shared Sub InvokeOnUIContext(action As Action, priority As DispatcherPriority)
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action)
  id: RunAsync(System.Action)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: RunAsync(Action)
  nameWithType: UIDispatcherHelper.RunAsync(Action)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RunAsync
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 65
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: >-
    Invoke the action on the captured UI dispatcher, using the default priority

    and return an awaitable object
  example: []
  syntax:
    content: public static DispatcherOperation RunAsync(Action action)
    parameters:
    - id: action
      type: System.Action
      description: ''
    return:
      type: System.Windows.Threading.DispatcherOperation
    content.vb: Public Shared Function RunAsync(action As Action) As DispatcherOperation
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  id: RunAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: RunAsync(Action, DispatcherPriority)
  nameWithType: UIDispatcherHelper.RunAsync(Action, DispatcherPriority)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync(System.Action, System.Windows.Threading.DispatcherPriority)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RunAsync
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 76
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: >-
    Invoke the action on the captured UI dispatcher, using the specified priority

    and return an awaitable object
  example: []
  syntax:
    content: public static DispatcherOperation RunAsync(Action action, DispatcherPriority priority)
    parameters:
    - id: action
      type: System.Action
      description: ''
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: ''
    return:
      type: System.Windows.Threading.DispatcherOperation
    content.vb: Public Shared Function RunAsync(action As Action, priority As DispatcherPriority) As DispatcherOperation
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action)
  id: AddToQueue(System.Action)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: AddToQueue(Action)
  nameWithType: UIDispatcherHelper.AddToQueue(Action)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AddToQueue
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 92
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Add a new operation to the queue, with the default priority
  remarks: Operations are executed in DispatcherPriority order (highest value executes first)
  example: []
  syntax:
    content: public static void AddToQueue(Action action)
    parameters:
    - id: action
      type: System.Action
      description: ''
    content.vb: Public Shared Sub AddToQueue(action As Action)
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action,System.Windows.Threading.DispatcherPriority)
  id: AddToQueue(System.Action,System.Windows.Threading.DispatcherPriority)
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: AddToQueue(Action, DispatcherPriority)
  nameWithType: UIDispatcherHelper.AddToQueue(Action, DispatcherPriority)
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue(System.Action, System.Windows.Threading.DispatcherPriority)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AddToQueue
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 105
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Add a new operation to the queue, with the specified priority
  remarks: Operations are executed in DispatcherPriority order (highest value executes first)
  example: []
  syntax:
    content: public static void AddToQueue(Action action, DispatcherPriority dispatcherPriority)
    parameters:
    - id: action
      type: System.Action
      description: ''
    - id: dispatcherPriority
      type: System.Windows.Threading.DispatcherPriority
      description: ''
    content.vb: Public Shared Sub AddToQueue(action As Action, dispatcherPriority As DispatcherPriority)
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync
  id: ProcessQueueAsync
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: ProcessQueueAsync()
  nameWithType: UIDispatcherHelper.ProcessQueueAsync()
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync()
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ProcessQueueAsync
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 121
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Execute each operation from the operations queue in order.
  remarks: >-
    An operation may result in more items being added to the queue, which will be

    executed in the appropriate order.
  example: []
  syntax:
    content: public static Task ProcessQueueAsync()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function ProcessQueueAsync() As Task
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync*
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue
  commentId: M:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue
  id: ResetQueue
  parent: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper
  langs:
  - csharp
  - vb
  name: ResetQueue()
  nameWithType: UIDispatcherHelper.ResetQueue()
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue()
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ResetQueue
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/UIDispatcherHelper.cs
    startLine: 148
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Clear any outstanding operations from the queue
  example: []
  syntax:
    content: public static void ResetQueue()
    content.vb: Public Shared Sub ResetQueue()
  overload: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue*
references:
- uid: ParmaGIS.WPF.UI.Utilities
  commentId: N:ParmaGIS.WPF.UI.Utilities
  href: ParmaGIS.html
  name: ParmaGIS.WPF.UI.Utilities
  nameWithType: ParmaGIS.WPF.UI.Utilities
  fullName: ParmaGIS.WPF.UI.Utilities
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Utilities
    name: Utilities
    href: ParmaGIS.WPF.UI.Utilities.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Utilities
    name: Utilities
    href: ParmaGIS.WPF.UI.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_Initialise
  name: Initialise
  nameWithType: UIDispatcherHelper.Initialise
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.Initialise
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_InvokeOnUIContext_System_Action_
  name: InvokeOnUIContext
  nameWithType: UIDispatcherHelper.InvokeOnUIContext
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.InvokeOnUIContext
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Windows.Threading.DispatcherPriority
  commentId: T:System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcherpriority
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_RunAsync_System_Action_
  name: RunAsync
  nameWithType: UIDispatcherHelper.RunAsync
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.RunAsync
- uid: System.Windows.Threading.DispatcherOperation
  commentId: T:System.Windows.Threading.DispatcherOperation
  parent: System.Windows.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.threading.dispatcheroperation
  name: DispatcherOperation
  nameWithType: DispatcherOperation
  fullName: System.Windows.Threading.DispatcherOperation
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_AddToQueue_System_Action_
  name: AddToQueue
  nameWithType: UIDispatcherHelper.AddToQueue
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.AddToQueue
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_ProcessQueueAsync
  name: ProcessQueueAsync
  nameWithType: UIDispatcherHelper.ProcessQueueAsync
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ProcessQueueAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue
  href: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.html#ParmaGIS_WPF_UI_Utilities_UIDispatcherHelper_ResetQueue
  name: ResetQueue
  nameWithType: UIDispatcherHelper.ResetQueue
  fullName: ParmaGIS.WPF.UI.Utilities.UIDispatcherHelper.ResetQueue
