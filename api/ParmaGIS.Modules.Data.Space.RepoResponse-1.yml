### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse`1
  id: RepoResponse`1
  parent: ParmaGIS.Modules.Data.Space
  children:
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0)
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0,System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource``1(ParmaGIS.Modules.Data.Space.RepoResponse{``0})
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.Value
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit(`0)~ParmaGIS.Modules.Data.Space.RepoResponse{`0}
  - ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit(ParmaGIS.Modules.Data.Space.RepoResponse{`0})~`0
  langs:
  - csharp
  - vb
  name: RepoResponse<T>
  nameWithType: RepoResponse<T>
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RepoResponse
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 6
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Представляет простую реализацию ответа репозитория со значением.
  example: []
  syntax:
    content: 'public class RepoResponse<T> : RepoResponse'
    typeParameters:
    - id: T
      description: Тип значения результата.
    content.vb: Public Class RepoResponse(Of T) Inherits RepoResponse
  inheritance:
  - System.Object
  - ParmaGIS.Modules.Data.Space.RepoResponse
  inheritedMembers:
  - ParmaGIS.Modules.Data.Space.RepoResponse.Message
  - ParmaGIS.Modules.Data.Space.RepoResponse.Result
  - ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  - ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  - ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{{T}},System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{{T}},System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1({T})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RepoResponse(Of T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T)
  name.vb: RepoResponse(Of T)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: RepoResponse(T)
  nameWithType: RepoResponse<T>.RepoResponse(T)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.RepoResponse(T)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref> с ответом <xref href="ParmaGIS.Modules.Data.Space.RepoResponseResult.Success" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RepoResponse(T value)
    parameters:
    - id: value
      type: '{T}'
      description: Значение результата.
    content.vb: Public Sub New(value As T)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor*
  nameWithType.vb: RepoResponse(Of T).New(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).New(T)
  name.vb: New(T)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  id: '#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)'
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: RepoResponse(string, RepoResponseResult)
  nameWithType: RepoResponse<T>.RepoResponse(string, RepoResponseResult)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.RepoResponse(string, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 23
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: >-
    Инициализирует экземпляр класса <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.

    Значение будет выставлено как <code>default</code>.
  example: []
  syntax:
    content: public RepoResponse(string message, RepoResponseResult result = RepoResponseResult.Error)
    parameters:
    - id: message
      type: System.String
      description: Сообщение ответа.
    - id: result
      type: ParmaGIS.Modules.Data.Space.RepoResponseResult
      description: Результат ответа.
    content.vb: Public Sub New(message As String, result As RepoResponseResult = RepoResponseResult.Error)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor*
  nameWithType.vb: RepoResponse(Of T).New(String, RepoResponseResult)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).New(String, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  name.vb: New(String, RepoResponseResult)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0,System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor(`0,System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  id: '#ctor(`0,System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)'
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: RepoResponse(T, string, RepoResponseResult)
  nameWithType: RepoResponse<T>.RepoResponse(T, string, RepoResponseResult)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.RepoResponse(T, string, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 36
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RepoResponse(T value, string message, RepoResponseResult result)
    parameters:
    - id: value
      type: '{T}'
      description: Значение резальтата.
    - id: message
      type: System.String
      description: Сообщение ответа.
    - id: result
      type: ParmaGIS.Modules.Data.Space.RepoResponseResult
      description: Результат ответа.
    content.vb: Public Sub New(value As T, message As String, result As RepoResponseResult)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor*
  nameWithType.vb: RepoResponse(Of T).New(T, String, RepoResponseResult)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).New(T, String, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  name.vb: New(T, String, RepoResponseResult)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.Value
  commentId: P:ParmaGIS.Modules.Data.Space.RepoResponse`1.Value
  id: Value
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: RepoResponse<T>.Value
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.Value
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Value
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 46
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Возвращает значение результата.
  example: []
  syntax:
    content: public T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Value As T
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.Value*
  nameWithType.vb: RepoResponse(Of T).Value
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).Value
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource``1(ParmaGIS.Modules.Data.Space.RepoResponse{``0})
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource``1(ParmaGIS.Modules.Data.Space.RepoResponse{``0})
  id: FromSource``1(ParmaGIS.Modules.Data.Space.RepoResponse{``0})
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: FromSource<TSource>(RepoResponse<TSource>)
  nameWithType: RepoResponse<T>.FromSource<TSource>(RepoResponse<TSource>)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.FromSource<TSource>(ParmaGIS.Modules.Data.Space.RepoResponse<TSource>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FromSource
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 55
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Конвертирует ответ.
  example: []
  syntax:
    content: 'public static RepoResponse<T> FromSource<TSource>(RepoResponse<TSource> sourceResponse) where TSource : T'
    parameters:
    - id: sourceResponse
      type: ParmaGIS.Modules.Data.Space.RepoResponse{{TSource}}
      description: Ответ источник.
    typeParameters:
    - id: TSource
      description: Тип значения источника. Должен наследоваться от выходного типа.
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponse`1
      description: Результирующий ответ.
    content.vb: Public Shared Function FromSource(Of TSource As T)(sourceResponse As RepoResponse(Of TSource)) As RepoResponse(Of T)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource*
  nameWithType.vb: RepoResponse(Of T).FromSource(Of TSource)(RepoResponse(Of TSource))
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).FromSource(Of TSource)(ParmaGIS.Modules.Data.Space.RepoResponse(Of TSource))
  name.vb: FromSource(Of TSource)(RepoResponse(Of TSource))
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull
  id: IsSuccessAndNotNull
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: IsSuccessAndNotNull()
  nameWithType: RepoResponse<T>.IsSuccessAndNotNull()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.IsSuccessAndNotNull()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsSuccessAndNotNull
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 65
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Проверяет, что ответ успешный и его значение не пустое.
  example: []
  syntax:
    content: public bool IsSuccessAndNotNull()
    return:
      type: System.Boolean
      description: Значение <code>true</code>, если <code>Result == RepoResponseResult.Success and Value != null</code>, <code>false</code> иначе.
    content.vb: Public Function IsSuccessAndNotNull() As Boolean
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull*
  nameWithType.vb: RepoResponse(Of T).IsSuccessAndNotNull()
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).IsSuccessAndNotNull()
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit(ParmaGIS.Modules.Data.Space.RepoResponse{`0})~`0
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit(ParmaGIS.Modules.Data.Space.RepoResponse{`0})~`0
  id: op_Implicit(ParmaGIS.Modules.Data.Space.RepoResponse{`0})~`0
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: implicit operator T(RepoResponse<T>)
  nameWithType: RepoResponse<T>.implicit operator T(RepoResponse<T>)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.implicit operator T(ParmaGIS.Modules.Data.Space.RepoResponse<T>)
  type: Operator
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: op_Implicit
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 70
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public static implicit operator T(RepoResponse<T> response)
    parameters:
    - id: response
      type: ParmaGIS.Modules.Data.Space.RepoResponse`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(response As RepoResponse(Of T)) As T
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit*
  nameWithType.vb: RepoResponse(Of T).CType(RepoResponse(Of T))
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).CType(ParmaGIS.Modules.Data.Space.RepoResponse(Of T))
  name.vb: CType(RepoResponse(Of T))
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit(`0)~ParmaGIS.Modules.Data.Space.RepoResponse{`0}
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit(`0)~ParmaGIS.Modules.Data.Space.RepoResponse{`0}
  id: op_Explicit(`0)~ParmaGIS.Modules.Data.Space.RepoResponse{`0}
  parent: ParmaGIS.Modules.Data.Space.RepoResponse`1
  langs:
  - csharp
  - vb
  name: explicit operator RepoResponse<T>(T)
  nameWithType: RepoResponse<T>.explicit operator RepoResponse<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.explicit operator ParmaGIS.Modules.Data.Space.RepoResponse<T>(T)
  type: Operator
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: op_Explicit
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse1.cs
    startLine: 71
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  syntax:
    content: public static explicit operator RepoResponse<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponse`1
    content.vb: Public Shared Narrowing Operator CType(value As T) As RepoResponse(Of T)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit*
  nameWithType.vb: RepoResponse(Of T).CType(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).CType(T)
  name.vb: CType(T)
references:
- uid: ParmaGIS.Modules.Data.Space
  commentId: N:ParmaGIS.Modules.Data.Space
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space
  nameWithType: ParmaGIS.Modules.Data.Space
  fullName: ParmaGIS.Modules.Data.Space
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ParmaGIS.Modules.Data.Space.RepoResponse
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  name: RepoResponse
  nameWithType: RepoResponse
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Message
  commentId: P:ParmaGIS.Modules.Data.Space.RepoResponse.Message
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Message
  name: Message
  nameWithType: RepoResponse.Message
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Message
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Result
  commentId: P:ParmaGIS.Modules.Data.Space.RepoResponse.Result
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Result
  name: Result
  nameWithType: RepoResponse.Result
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Result
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  name: IsSuccess()
  nameWithType: RepoResponse.IsSuccess()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess()
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
    name: IsSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  - name: (
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
    name: IsSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  - name: (
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsNotSuccess
  name: IsNotSuccess()
  nameWithType: RepoResponse.IsNotSuccess()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess()
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
    name: IsNotSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsNotSuccess
  - name: (
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
    name: IsNotSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsNotSuccess
  - name: (
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  name: Invoke(Action, bool)
  nameWithType: RepoResponse.Invoke(Action, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, bool)
  nameWithType.vb: RepoResponse.Invoke(Action, Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, Boolean)
  name.vb: Invoke(Action, Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{{T}},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  definition: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  name: Invoke<T>(Func<T>, bool)
  nameWithType: RepoResponse.Invoke<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke<T>(System.Func<T>, bool)
  nameWithType.vb: RepoResponse.Invoke(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(Of T)(System.Func(Of T), Boolean)
  name.vb: Invoke(Of T)(Func(Of T), Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc_System_Action_System_Boolean_
  name: CreateFunc(Action, bool)
  nameWithType: RepoResponse.CreateFunc(Action, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action, bool)
  nameWithType.vb: RepoResponse.CreateFunc(Action, Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action, Boolean)
  name.vb: CreateFunc(Action, Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{{T}},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  definition: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  name: CreateFunc<T>(Func<T>, bool)
  nameWithType: RepoResponse.CreateFunc<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc<T>(System.Func<T>, bool)
  nameWithType.vb: RepoResponse.CreateFunc(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(Of T)(System.Func(Of T), Boolean)
  name.vb: CreateFunc(Of T)(Func(Of T), Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1({T})
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  definition: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  name: FromResult<T>(T)
  nameWithType: RepoResponse.FromResult<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult<T>(T)
  nameWithType.vb: RepoResponse.FromResult(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult(Of T)(T)
  name.vb: FromResult(Of T)(T)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
    name: FromResult
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
    name: FromResult
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  name: Invoke<T>(Func<T>, bool)
  nameWithType: RepoResponse.Invoke<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke<T>(System.Func<T>, bool)
  nameWithType.vb: RepoResponse.Invoke(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(Of T)(System.Func(Of T), Boolean)
  name.vb: Invoke(Of T)(Func(Of T), Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  name: CreateFunc<T>(Func<T>, bool)
  nameWithType: RepoResponse.CreateFunc<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc<T>(System.Func<T>, bool)
  nameWithType.vb: RepoResponse.CreateFunc(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(Of T)(System.Func(Of T), Boolean)
  name.vb: CreateFunc(Of T)(Func(Of T), Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
    name: CreateFunc
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc__1_System_Func___0__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  name: FromResult<T>(T)
  nameWithType: RepoResponse.FromResult<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult<T>(T)
  nameWithType.vb: RepoResponse.FromResult(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult(Of T)(T)
  name.vb: FromResult(Of T)(T)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
    name: FromResult
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
    name: FromResult
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse`1
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  name: RepoResponse<T>
  nameWithType: RepoResponse<T>
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>
  nameWithType.vb: RepoResponse(Of T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T)
  name.vb: RepoResponse(Of T)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
  commentId: F:ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
  href: ParmaGIS.Modules.Data.Space.RepoResponseResult.html#ParmaGIS_Modules_Data_Space_RepoResponseResult_Success
  name: Success
  nameWithType: RepoResponseResult.Success
  fullName: ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.#ctor
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html#ParmaGIS_Modules_Data_Space_RepoResponse_1__ctor__0_
  name: RepoResponse
  nameWithType: RepoResponse<T>.RepoResponse
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.RepoResponse
  nameWithType.vb: RepoResponse(Of T).New
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ParmaGIS.Modules.Data.Space.RepoResponseResult
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponseResult
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponseResult.html
  name: RepoResponseResult
  nameWithType: RepoResponseResult
  fullName: ParmaGIS.Modules.Data.Space.RepoResponseResult
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.Value*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.Value
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html#ParmaGIS_Modules_Data_Space_RepoResponse_1_Value
  name: Value
  nameWithType: RepoResponse<T>.Value
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.Value
  nameWithType.vb: RepoResponse(Of T).Value
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).Value
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.FromSource
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html#ParmaGIS_Modules_Data_Space_RepoResponse_1_FromSource__1_ParmaGIS_Modules_Data_Space_RepoResponse___0__
  name: FromSource
  nameWithType: RepoResponse<T>.FromSource
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.FromSource
  nameWithType.vb: RepoResponse(Of T).FromSource
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).FromSource
- uid: ParmaGIS.Modules.Data.Space.RepoResponse{{TSource}}
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse{``0}
  parent: ParmaGIS.Modules.Data.Space
  definition: ParmaGIS.Modules.Data.Space.RepoResponse`1
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  name: RepoResponse<TSource>
  nameWithType: RepoResponse<TSource>
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<TSource>
  nameWithType.vb: RepoResponse(Of TSource)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of TSource)
  name.vb: RepoResponse(Of TSource)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.IsSuccessAndNotNull
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html#ParmaGIS_Modules_Data_Space_RepoResponse_1_IsSuccessAndNotNull
  name: IsSuccessAndNotNull
  nameWithType: RepoResponse<T>.IsSuccessAndNotNull
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.IsSuccessAndNotNull
  nameWithType.vb: RepoResponse(Of T).IsSuccessAndNotNull
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).IsSuccessAndNotNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Implicit
  name: implicit operator
  nameWithType: RepoResponse<T>.implicit operator
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.implicit operator
  nameWithType.vb: RepoResponse(Of T).CType
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse`1.op_Explicit
  name: explicit operator
  nameWithType: RepoResponse<T>.explicit operator
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>.explicit operator
  nameWithType.vb: RepoResponse(Of T).CType
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
