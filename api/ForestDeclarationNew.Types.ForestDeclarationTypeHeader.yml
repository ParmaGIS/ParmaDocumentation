### YamlMime:ManagedReference
items:
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  commentId: T:ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  id: ForestDeclarationTypeHeader
  parent: ForestDeclarationNew.Types
  children:
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
  - ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
  langs:
  - csharp
  - vb
  name: ForestDeclarationTypeHeader
  nameWithType: ForestDeclarationTypeHeader
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForestDeclarationTypeHeader
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 374
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  syntax:
    content: >-
      [Serializable]

      public class ForestDeclarationTypeHeader
    content.vb: >-
      <Serializable>

      Public Class ForestDeclarationTypeHeader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
  id: Subject
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: ForestDeclarationTypeHeader.Subject
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Subject
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 385
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Субъект РФ</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ConstituentEntityKindEType Subject { get; set; }
    parameters: []
    return:
      type: Common.Enums.ConstituentEntity.Types.ConstituentEntityKindEType
    content.vb: >-
      <Required>

      Public Property Subject As ConstituentEntityKindEType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
  id: Forestry
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: Forestry
  nameWithType: ForestDeclarationTypeHeader.Forestry
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Forestry
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 393
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Наименование и номер лесничества</p>
  example: []
  syntax:
    content: public ForestryKindEType Forestry { get; set; }
    parameters: []
    return:
      type: Common.Enums.Forestry.Types.ForestryKindEType
    content.vb: Public Property Forestry As ForestryKindEType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry*
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
  id: ForestrySpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: ForestrySpecified
  nameWithType: ForestDeclarationTypeHeader.ForestrySpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForestrySpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 400
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets or sets a value indicating whether the Forestry property is specified.</p>
  example: []
  syntax:
    content: public bool ForestrySpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ForestrySpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
  id: ExecutiveAuthority
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: ExecutiveAuthority
  nameWithType: ForestDeclarationTypeHeader.ExecutiveAuthority
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ExecutiveAuthority
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 407
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Наименование органа государственной власти, органа местного
                                       самоуправления</p>
  example: []
  syntax:
    content: >-
      [Required]

      public SubordinateAuthorityKindEType ExecutiveAuthority { get; set; }
    parameters: []
    return:
      type: Common.Enums.SubordinateAuthority.Types.SubordinateAuthorityKindEType
    content.vb: >-
      <Required>

      Public Property ExecutiveAuthority As SubordinateAuthorityKindEType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
  id: Period
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: ForestDeclarationTypeHeader.Period
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Period
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 415
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Период действия документа</p>
  example: []
  syntax:
    content: >-
      [Required]

      public PeriodType Period { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.PeriodType
    content.vb: >-
      <Required>

      Public Property Period As PeriodType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
  id: Partner
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: Partner
  nameWithType: ForestDeclarationTypeHeader.Partner
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Partner
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 423
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Лесопользователь</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ForestUserType Partner { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.ForestUserType
    content.vb: >-
      <Required>

      Public Property Partner As ForestUserType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
  id: SignerData
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: SignerData
  nameWithType: ForestDeclarationTypeHeader.SignerData
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SignerData
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 431
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Подписант документа</p>
  example: []
  syntax:
    content: >-
      [Required]

      public SignerDataType SignerData { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.SignerDataType
    content.vb: >-
      <Required>

      Public Property SignerData As SignerDataType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
  id: Contract
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: Contract
  nameWithType: ForestDeclarationTypeHeader.Contract
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Contract
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 439
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Договор</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ContractType Contract { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.ContractType
    content.vb: >-
      <Required>

      Public Property Contract As ContractType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
  id: UsageTypes
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: UsageTypes
  nameWithType: ForestDeclarationTypeHeader.UsageTypes
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: UsageTypes
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 450
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Виды использования лесов</p>
  example: []
  syntax:
    content: >-
      [Required]

      public Collection<UsageType> UsageTypes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.UsageType}
    content.vb: >-
      <Required>

      Public Property UsageTypes As Collection(Of UsageType)
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor
  commentId: M:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor
  id: '#ctor'
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: ForestDeclarationTypeHeader()
  nameWithType: ForestDeclarationTypeHeader.ForestDeclarationTypeHeader()
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestDeclarationTypeHeader()
  type: Constructor
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 469
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Initializes a new instance of the <xref href="ForestDeclarationNew.Types.ForestDeclarationTypeHeader" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public ForestDeclarationTypeHeader()
    content.vb: Public Sub New()
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor*
  nameWithType.vb: ForestDeclarationTypeHeader.New()
  fullName.vb: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.New()
  name.vb: New()
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
  id: BasissForChange
  parent: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  langs:
  - csharp
  - vb
  name: BasissForChange
  nameWithType: ForestDeclarationTypeHeader.BasissForChange
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: BasissForChange
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 477
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Основание внесения изменений в лесную декларацию</p>
  example: []
  syntax:
    content: public BasissForChangeType BasissForChange { get; set; }
    parameters: []
    return:
      type: ForestDeclarationNew.Types.BasissForChangeType
    content.vb: Public Property BasissForChange As BasissForChangeType
  overload: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange*
references:
- uid: ForestDeclarationNew.Types
  commentId: N:ForestDeclarationNew.Types
  href: ForestDeclarationNew.html
  name: ForestDeclarationNew.Types
  nameWithType: ForestDeclarationNew.Types
  fullName: ForestDeclarationNew.Types
  spec.csharp:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
  spec.vb:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_Subject
  name: Subject
  nameWithType: ForestDeclarationTypeHeader.Subject
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Subject
- uid: Common.Enums.ConstituentEntity.Types.ConstituentEntityKindEType
  commentId: T:Common.Enums.ConstituentEntity.Types.ConstituentEntityKindEType
  parent: Common.Enums.ConstituentEntity.Types
  href: Common.Enums.ConstituentEntity.Types.ConstituentEntityKindEType.html
  name: ConstituentEntityKindEType
  nameWithType: ConstituentEntityKindEType
  fullName: Common.Enums.ConstituentEntity.Types.ConstituentEntityKindEType
- uid: Common.Enums.ConstituentEntity.Types
  commentId: N:Common.Enums.ConstituentEntity.Types
  href: Common.html
  name: Common.Enums.ConstituentEntity.Types
  nameWithType: Common.Enums.ConstituentEntity.Types
  fullName: Common.Enums.ConstituentEntity.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ConstituentEntity
    name: ConstituentEntity
    href: Common.Enums.ConstituentEntity.html
  - name: .
  - uid: Common.Enums.ConstituentEntity.Types
    name: Types
    href: Common.Enums.ConstituentEntity.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.ConstituentEntity
    name: ConstituentEntity
    href: Common.Enums.ConstituentEntity.html
  - name: .
  - uid: Common.Enums.ConstituentEntity.Types
    name: Types
    href: Common.Enums.ConstituentEntity.Types.html
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_Forestry
  name: Forestry
  nameWithType: ForestDeclarationTypeHeader.Forestry
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Forestry
- uid: Common.Enums.Forestry.Types.ForestryKindEType
  commentId: T:Common.Enums.Forestry.Types.ForestryKindEType
  parent: Common.Enums.Forestry.Types
  href: Common.Enums.Forestry.Types.ForestryKindEType.html
  name: ForestryKindEType
  nameWithType: ForestryKindEType
  fullName: Common.Enums.Forestry.Types.ForestryKindEType
- uid: Common.Enums.Forestry.Types
  commentId: N:Common.Enums.Forestry.Types
  href: Common.html
  name: Common.Enums.Forestry.Types
  nameWithType: Common.Enums.Forestry.Types
  fullName: Common.Enums.Forestry.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Forestry
    name: Forestry
    href: Common.Enums.Forestry.html
  - name: .
  - uid: Common.Enums.Forestry.Types
    name: Types
    href: Common.Enums.Forestry.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.Forestry
    name: Forestry
    href: Common.Enums.Forestry.html
  - name: .
  - uid: Common.Enums.Forestry.Types
    name: Types
    href: Common.Enums.Forestry.Types.html
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_ForestrySpecified
  name: ForestrySpecified
  nameWithType: ForestDeclarationTypeHeader.ForestrySpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestrySpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_ExecutiveAuthority
  name: ExecutiveAuthority
  nameWithType: ForestDeclarationTypeHeader.ExecutiveAuthority
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ExecutiveAuthority
- uid: Common.Enums.SubordinateAuthority.Types.SubordinateAuthorityKindEType
  commentId: T:Common.Enums.SubordinateAuthority.Types.SubordinateAuthorityKindEType
  parent: Common.Enums.SubordinateAuthority.Types
  href: Common.Enums.SubordinateAuthority.Types.SubordinateAuthorityKindEType.html
  name: SubordinateAuthorityKindEType
  nameWithType: SubordinateAuthorityKindEType
  fullName: Common.Enums.SubordinateAuthority.Types.SubordinateAuthorityKindEType
- uid: Common.Enums.SubordinateAuthority.Types
  commentId: N:Common.Enums.SubordinateAuthority.Types
  href: Common.html
  name: Common.Enums.SubordinateAuthority.Types
  nameWithType: Common.Enums.SubordinateAuthority.Types
  fullName: Common.Enums.SubordinateAuthority.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.SubordinateAuthority
    name: SubordinateAuthority
    href: Common.Enums.SubordinateAuthority.html
  - name: .
  - uid: Common.Enums.SubordinateAuthority.Types
    name: Types
    href: Common.Enums.SubordinateAuthority.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.SubordinateAuthority
    name: SubordinateAuthority
    href: Common.Enums.SubordinateAuthority.html
  - name: .
  - uid: Common.Enums.SubordinateAuthority.Types
    name: Types
    href: Common.Enums.SubordinateAuthority.Types.html
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_Period
  name: Period
  nameWithType: ForestDeclarationTypeHeader.Period
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Period
- uid: Common.CommonReport.Types.PeriodType
  commentId: T:Common.CommonReport.Types.PeriodType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.PeriodType.html
  name: PeriodType
  nameWithType: PeriodType
  fullName: Common.CommonReport.Types.PeriodType
- uid: Common.CommonReport.Types
  commentId: N:Common.CommonReport.Types
  href: Common.html
  name: Common.CommonReport.Types
  nameWithType: Common.CommonReport.Types
  fullName: Common.CommonReport.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_Partner
  name: Partner
  nameWithType: ForestDeclarationTypeHeader.Partner
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Partner
- uid: Common.CommonReport.Types.ForestUserType
  commentId: T:Common.CommonReport.Types.ForestUserType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.ForestUserType.html
  name: ForestUserType
  nameWithType: ForestUserType
  fullName: Common.CommonReport.Types.ForestUserType
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_SignerData
  name: SignerData
  nameWithType: ForestDeclarationTypeHeader.SignerData
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.SignerData
- uid: Common.CommonReport.Types.SignerDataType
  commentId: T:Common.CommonReport.Types.SignerDataType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.SignerDataType.html
  name: SignerDataType
  nameWithType: SignerDataType
  fullName: Common.CommonReport.Types.SignerDataType
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_Contract
  name: Contract
  nameWithType: ForestDeclarationTypeHeader.Contract
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.Contract
- uid: Common.CommonReport.Types.ContractType
  commentId: T:Common.CommonReport.Types.ContractType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.ContractType.html
  name: ContractType
  nameWithType: ContractType
  fullName: Common.CommonReport.Types.ContractType
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_UsageTypes
  name: UsageTypes
  nameWithType: ForestDeclarationTypeHeader.UsageTypes
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.UsageTypes
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.UsageType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.UsageType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<UsageType>
  nameWithType: Collection<UsageType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.UsageType>
  nameWithType.vb: Collection(Of UsageType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.UsageType)
  name.vb: Collection(Of UsageType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.UsageType
    name: UsageType
    href: ForestDeclarationNew.Types.UsageType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.UsageType
    name: UsageType
    href: ForestDeclarationNew.Types.UsageType.html
  - name: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  commentId: T:ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  parent: ForestDeclarationNew.Types
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html
  name: ForestDeclarationTypeHeader
  nameWithType: ForestDeclarationTypeHeader
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.#ctor
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader__ctor
  name: ForestDeclarationTypeHeader
  nameWithType: ForestDeclarationTypeHeader.ForestDeclarationTypeHeader
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.ForestDeclarationTypeHeader
  nameWithType.vb: ForestDeclarationTypeHeader.New
  fullName.vb: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.New
  name.vb: New
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html#ForestDeclarationNew_Types_ForestDeclarationTypeHeader_BasissForChange
  name: BasissForChange
  nameWithType: ForestDeclarationTypeHeader.BasissForChange
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.BasissForChange
- uid: ForestDeclarationNew.Types.BasissForChangeType
  commentId: T:ForestDeclarationNew.Types.BasissForChangeType
  parent: ForestDeclarationNew.Types
  href: ForestDeclarationNew.Types.BasissForChangeType.html
  name: BasissForChangeType
  nameWithType: BasissForChangeType
  fullName: ForestDeclarationNew.Types.BasissForChangeType
