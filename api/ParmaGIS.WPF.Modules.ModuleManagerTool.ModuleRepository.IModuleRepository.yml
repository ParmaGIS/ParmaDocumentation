### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  commentId: T:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  id: IModuleRepository
  parent: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  children:
  - ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync
  - ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync(ParmaGIS.Core.Modularity.IModuleManager)
  - ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion(System.String,System.Boolean)
  - ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync
  langs:
  - csharp
  - vb
  name: IModuleRepository
  nameWithType: IModuleRepository
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  type: Interface
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IModuleRepository
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
    startLine: 9
  assemblies:
  - ParmaGIS.WPF.Modules.ModuleManagerTool
  namespace: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  syntax:
    content: public interface IModuleRepository
    content.vb: Public Interface IModuleRepository
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync(ParmaGIS.Core.Modularity.IModuleManager)
  commentId: M:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync(ParmaGIS.Core.Modularity.IModuleManager)
  id: GetAvailableModulesAsync(ParmaGIS.Core.Modularity.IModuleManager)
  parent: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  langs:
  - csharp
  - vb
  name: GetAvailableModulesAsync(IModuleManager)
  nameWithType: IModuleRepository.GetAvailableModulesAsync(IModuleManager)
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync(ParmaGIS.Core.Modularity.IModuleManager)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetAvailableModulesAsync
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
    startLine: 11
  assemblies:
  - ParmaGIS.WPF.Modules.ModuleManagerTool
  namespace: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  syntax:
    content: Task<IEnumerable<IModuleEntry>> GetAvailableModulesAsync(IModuleManager moduleManager)
    parameters:
    - id: moduleManager
      type: ParmaGIS.Core.Modularity.IModuleManager
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry}}
    content.vb: Function GetAvailableModulesAsync(moduleManager As IModuleManager) As Task(Of IEnumerable(Of IModuleEntry))
  overload: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync*
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync
  commentId: M:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync
  id: GetAppEntryAsync
  parent: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  langs:
  - csharp
  - vb
  name: GetAppEntryAsync()
  nameWithType: IModuleRepository.GetAppEntryAsync()
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync()
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetAppEntryAsync
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
    startLine: 13
  assemblies:
  - ParmaGIS.WPF.Modules.ModuleManagerTool
  namespace: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  syntax:
    content: Task<IAppEntry> GetAppEntryAsync()
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry}
    content.vb: Function GetAppEntryAsync() As Task(Of IAppEntry)
  overload: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync*
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync
  commentId: M:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync
  id: GetUpdaterEntryAsync
  parent: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  langs:
  - csharp
  - vb
  name: GetUpdaterEntryAsync()
  nameWithType: IModuleRepository.GetUpdaterEntryAsync()
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync()
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetUpdaterEntryAsync
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
    startLine: 15
  assemblies:
  - ParmaGIS.WPF.Modules.ModuleManagerTool
  namespace: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  syntax:
    content: Task<IUpdaterEntry> GetUpdaterEntryAsync()
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry}
    content.vb: Function GetUpdaterEntryAsync() As Task(Of IUpdaterEntry)
  overload: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync*
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion(System.String,System.Boolean)
  commentId: M:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion(System.String,System.Boolean)
  id: GetLatestAvailableVersion(System.String,System.Boolean)
  parent: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository
  langs:
  - csharp
  - vb
  name: GetLatestAvailableVersion(string, bool)
  nameWithType: IModuleRepository.GetLatestAvailableVersion(string, bool)
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion(string, bool)
  type: Method
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetLatestAvailableVersion
    path: ../ParmaGIS master/platforms/wpf/modules/ParmaGIS.WPF.Modules.ModuleManagerTool/ModuleRepository/IModulerepository.cs
    startLine: 16
  assemblies:
  - ParmaGIS.WPF.Modules.ModuleManagerTool
  namespace: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  syntax:
    content: Task<IVersionInfo?> GetLatestAvailableVersion(string moduleName, bool isPlatform)
    parameters:
    - id: moduleName
      type: System.String
    - id: isPlatform
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo}
    content.vb: Function GetLatestAvailableVersion(moduleName As String, isPlatform As Boolean) As Task(Of IVersionInfo)
  overload: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion*
  nameWithType.vb: IModuleRepository.GetLatestAvailableVersion(String, Boolean)
  fullName.vb: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion(String, Boolean)
  name.vb: GetLatestAvailableVersion(String, Boolean)
references:
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  commentId: N:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  href: ParmaGIS.html
  name: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  nameWithType: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool
    name: ModuleManagerTool
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
    name: ModuleRepository
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.Modules
    name: Modules
    href: ParmaGIS.WPF.Modules.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool
    name: ModuleManagerTool
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.html
  - name: .
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository
    name: ModuleRepository
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.html
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync*
  commentId: Overload:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync
  href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.html#ParmaGIS_WPF_Modules_ModuleManagerTool_ModuleRepository_IModuleRepository_GetAvailableModulesAsync_ParmaGIS_Core_Modularity_IModuleManager_
  name: GetAvailableModulesAsync
  nameWithType: IModuleRepository.GetAvailableModulesAsync
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAvailableModulesAsync
- uid: ParmaGIS.Core.Modularity.IModuleManager
  commentId: T:ParmaGIS.Core.Modularity.IModuleManager
  parent: ParmaGIS.Core.Modularity
  href: ParmaGIS.Core.Modularity.IModuleManager.html
  name: IModuleManager
  nameWithType: IModuleManager
  fullName: ParmaGIS.Core.Modularity.IModuleManager
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<IModuleEntry>>
  nameWithType: Task<IEnumerable<IModuleEntry>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry>>
  nameWithType.vb: Task(Of IEnumerable(Of IModuleEntry))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry))
  name.vb: Task(Of IEnumerable(Of IModuleEntry))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry
    name: IModuleEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry
    name: IModuleEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleEntry.html
  - name: )
  - name: )
- uid: ParmaGIS.Core.Modularity
  commentId: N:ParmaGIS.Core.Modularity
  href: ParmaGIS.html
  name: ParmaGIS.Core.Modularity
  nameWithType: ParmaGIS.Core.Modularity
  fullName: ParmaGIS.Core.Modularity
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Modularity
    name: Modularity
    href: ParmaGIS.Core.Modularity.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Modularity
    name: Modularity
    href: ParmaGIS.Core.Modularity.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync*
  commentId: Overload:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync
  href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.html#ParmaGIS_WPF_Modules_ModuleManagerTool_ModuleRepository_IModuleRepository_GetAppEntryAsync
  name: GetAppEntryAsync
  nameWithType: IModuleRepository.GetAppEntryAsync
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetAppEntryAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IAppEntry>
  nameWithType: Task<IAppEntry>
  fullName: System.Threading.Tasks.Task<ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry>
  nameWithType.vb: Task(Of IAppEntry)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry)
  name.vb: Task(Of IAppEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry
    name: IAppEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry
    name: IAppEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IAppEntry.html
  - name: )
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync*
  commentId: Overload:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync
  href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.html#ParmaGIS_WPF_Modules_ModuleManagerTool_ModuleRepository_IModuleRepository_GetUpdaterEntryAsync
  name: GetUpdaterEntryAsync
  nameWithType: IModuleRepository.GetUpdaterEntryAsync
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetUpdaterEntryAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IUpdaterEntry>
  nameWithType: Task<IUpdaterEntry>
  fullName: System.Threading.Tasks.Task<ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry>
  nameWithType.vb: Task(Of IUpdaterEntry)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry)
  name.vb: Task(Of IUpdaterEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry
    name: IUpdaterEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry
    name: IUpdaterEntry
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IUpdaterEntry.html
  - name: )
- uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion*
  commentId: Overload:ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion
  href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.html#ParmaGIS_WPF_Modules_ModuleManagerTool_ModuleRepository_IModuleRepository_GetLatestAvailableVersion_System_String_System_Boolean_
  name: GetLatestAvailableVersion
  nameWithType: IModuleRepository.GetLatestAvailableVersion
  fullName: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IModuleRepository.GetLatestAvailableVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IVersionInfo>
  nameWithType: Task<IVersionInfo>
  fullName: System.Threading.Tasks.Task<ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo>
  nameWithType.vb: Task(Of IVersionInfo)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo)
  name.vb: Task(Of IVersionInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo
    name: IVersionInfo
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo
    name: IVersionInfo
    href: ParmaGIS.WPF.Modules.ModuleManagerTool.ModuleRepository.IVersionInfo.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
