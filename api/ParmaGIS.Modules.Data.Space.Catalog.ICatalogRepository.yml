### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  id: ICatalogRepository
  parent: ParmaGIS.Modules.Data.Space.Catalog
  children:
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: ICatalogRepository
  nameWithType: ICatalogRepository
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  type: Interface
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ICatalogRepository
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 6
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: public interface ICatalogRepository
    content.vb: Public Interface ICatalogRepository
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  id: GetCatalogItemAsync``1(System.Object)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemAsync<T>(object)
  nameWithType: ICatalogRepository.GetCatalogItemAsync<T>(object)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync<T>(object)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 8
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<T?> GetCatalogItemAsync<T>(object id) where T : class, ICatalogItem'
    parameters:
    - id: id
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function GetCatalogItemAsync(Of T As {Class, ICatalogItem})(id As Object) As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemAsync(Of T)(Object)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(Of T)(Object)
  name.vb: GetCatalogItemAsync(Of T)(Object)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync``1(``0)
  id: AddCatalogItemAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: AddCatalogItemAsync<T>(T)
  nameWithType: ICatalogRepository.AddCatalogItemAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AddCatalogItemAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 9
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task AddCatalogItemAsync<T>(T catalogItem) where T : class, ICatalogItem'
    parameters:
    - id: catalogItem
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddCatalogItemAsync(Of T As {Class, ICatalogItem})(catalogItem As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.AddCatalogItemAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync(Of T)(T)
  name.vb: AddCatalogItemAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync``1(``0)
  id: DeleteCatalogItemAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: DeleteCatalogItemAsync<T>(T)
  nameWithType: ICatalogRepository.DeleteCatalogItemAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DeleteCatalogItemAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 10
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task DeleteCatalogItemAsync<T>(T catalogItem) where T : class, ICatalogItem'
    parameters:
    - id: catalogItem
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteCatalogItemAsync(Of T As {Class, ICatalogItem})(catalogItem As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.DeleteCatalogItemAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync(Of T)(T)
  name.vb: DeleteCatalogItemAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: ICatalogRepository.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveChangesAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 11
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveChangesAsync() As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  id: GetCatalogItemsAsync``1
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync<T>()
  nameWithType: ICatalogRepository.GetCatalogItemsAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<IEnumerable<T>> GetCatalogItemsAsync<T>() where T : class, ICatalogItem'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
    content.vb: Function GetCatalogItemsAsync(Of T As {Class, ICatalogItem})() As Task(Of IEnumerable(Of T))
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemsAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(Of T)()
  name.vb: GetCatalogItemsAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  id: GetCatalogItemsAsync(System.Type)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync(Type)
  nameWithType: ICatalogRepository.GetCatalogItemsAsync(Type)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 13
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<IEnumerable<ICatalogItem>> GetCatalogItemsAsync(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}}
    content.vb: Function GetCatalogItemsAsync(type As Type) As Task(Of IEnumerable(Of ICatalogItem))
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  id: GetCatalogAsync``1
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogAsync<T>()
  nameWithType: ICatalogRepository.GetCatalogAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 15
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<ICatalog?> GetCatalogAsync<T>() where T : class, ICatalogItem'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function GetCatalogAsync(Of T As {Class, ICatalogItem})() As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(Of T)()
  name.vb: GetCatalogAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync
  id: GetAllCatalogsAsync
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetAllCatalogsAsync()
  nameWithType: ICatalogRepository.GetAllCatalogsAsync()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetAllCatalogsAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 16
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<IEnumerable<ICatalog>> GetAllCatalogsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}}
    content.vb: Function GetAllCatalogsAsync() As Task(Of IEnumerable(Of ICatalog))
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  id: GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync(ICatalog)
  nameWithType: ICatalogRepository.GetCatalogItemsAsync(ICatalog)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 17
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<IEnumerable<ICatalogItem>> GetCatalogItemsAsync(ICatalog catalogInfo)
    parameters:
    - id: catalogInfo
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}}
    content.vb: Function GetCatalogItemsAsync(catalogInfo As ICatalog) As Task(Of IEnumerable(Of ICatalogItem))
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  id: GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogAsync(ICatalogItem)
  nameWithType: ICatalogRepository.GetCatalogAsync(ICatalogItem)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/master
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogAsync
    path: ../../ParmaTest/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 18
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalog?> GetCatalogAsync(ICatalogItem catalogItem)
    parameters:
    - id: catalogItem
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function GetCatalogAsync(catalogItem As ICatalogItem) As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
references:
- uid: ParmaGIS.Modules.Data.Space.Catalog
  commentId: N:ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Catalog
  nameWithType: ParmaGIS.Modules.Data.Space.Catalog
  fullName: ParmaGIS.Modules.Data.Space.Catalog
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Data.Space.Catalog.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Data.Space.Catalog.html
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogItemAsync__1_System_Object_
  name: GetCatalogItemAsync
  nameWithType: ICatalogRepository.GetCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_AddCatalogItemAsync__1___0_
  name: AddCatalogItemAsync
  nameWithType: ICatalogRepository.AddCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.AddCatalogItemAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_DeleteCatalogItemAsync__1___0_
  name: DeleteCatalogItemAsync
  nameWithType: ICatalogRepository.DeleteCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.DeleteCatalogItemAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: ICatalogRepository.SaveChangesAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogItemsAsync__1
  name: GetCatalogItemsAsync
  nameWithType: ICatalogRepository.GetCatalogItemsAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<ICatalogItem>>
  nameWithType: Task<IEnumerable<ICatalogItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem>>
  nameWithType.vb: Task(Of IEnumerable(Of ICatalogItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem))
  name.vb: Task(Of IEnumerable(Of ICatalogItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogAsync__1
  name: GetCatalogAsync
  nameWithType: ICatalogRepository.GetCatalogAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICatalog>
  nameWithType: Task<ICatalog>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.Catalog.ICatalog>
  nameWithType.vb: Task(Of ICatalog)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  name.vb: Task(Of ICatalog)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetAllCatalogsAsync
  name: GetAllCatalogsAsync
  nameWithType: ICatalogRepository.GetAllCatalogsAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetAllCatalogsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<ICatalog>>
  nameWithType: Task<IEnumerable<ICatalog>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<ParmaGIS.Modules.Data.Space.Catalog.ICatalog>>
  nameWithType.vb: Task(Of IEnumerable(Of ICatalog))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalog))
  name.vb: Task(Of IEnumerable(Of ICatalog))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalog
  parent: ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  name: ICatalog
  nameWithType: ICatalog
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
  parent: ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  name: ICatalogItem
  nameWithType: ICatalogItem
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
