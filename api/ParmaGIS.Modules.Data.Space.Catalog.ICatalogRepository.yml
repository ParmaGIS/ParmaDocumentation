### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  id: ICatalogRepository
  parent: ParmaGIS.Modules.Data.Space.Catalog
  children:
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(System.String,System.Type)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync``1(System.String)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(System.Type)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync``1
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(System.Type)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog,System.Object)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(System.Type,System.Object)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: ICatalogRepository
  nameWithType: ICatalogRepository
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  type: Interface
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ICatalogRepository
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: public interface ICatalogRepository
    content.vb: Public Interface ICatalogRepository
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync
  id: GetCatalogsAsync
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogsAsync()
  nameWithType: ICatalogRepository.GetCatalogsAsync()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 9
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalog[]> GetCatalogsAsync()
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog[]}
    content.vb: Function GetCatalogsAsync() As Task(Of ICatalog())
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  id: GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogAsync(ICatalogItem)
  nameWithType: ICatalogRepository.GetCatalogAsync(ICatalogItem)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 11
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalog?> GetCatalogAsync(ICatalogItem catalogItem)
    parameters:
    - id: catalogItem
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function GetCatalogAsync(catalogItem As ICatalogItem) As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync``1
  id: GetCatalogAsync``1
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogAsync<TItem>()
  nameWithType: ICatalogRepository.GetCatalogAsync<TItem>()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync<TItem>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<ICatalog?> GetCatalogAsync<TItem>() where TItem : class, ICatalogItem'
    typeParameters:
    - id: TItem
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function GetCatalogAsync(Of TItem As {Class, ICatalogItem})() As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogAsync(Of TItem)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(Of TItem)()
  name.vb: GetCatalogAsync(Of TItem)()
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(System.Type)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(System.Type)
  id: GetCatalogAsync(System.Type)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogAsync(Type)
  nameWithType: ICatalogRepository.GetCatalogAsync(Type)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync(System.Type)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 13
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalog?> GetCatalogAsync(Type itemType)
    parameters:
    - id: itemType
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function GetCatalogAsync(itemType As Type) As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync``1(System.Object)
  id: GetCatalogItemAsync``1(System.Object)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemAsync<T>(object)
  nameWithType: ICatalogRepository.GetCatalogItemAsync<T>(object)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync<T>(object)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 15
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<T?> GetCatalogItemAsync<T>(object id) where T : class, ICatalogItem'
    parameters:
    - id: id
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function GetCatalogItemAsync(Of T As {Class, ICatalogItem})(id As Object) As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemAsync(Of T)(Object)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(Of T)(Object)
  name.vb: GetCatalogItemAsync(Of T)(Object)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(System.Type,System.Object)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(System.Type,System.Object)
  id: GetCatalogItemAsync(System.Type,System.Object)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemAsync(Type, object)
  nameWithType: ICatalogRepository.GetCatalogItemAsync(Type, object)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(System.Type, object)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 16
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem?> GetCatalogItemAsync(Type itemType, object id)
    parameters:
    - id: itemType
      type: System.Type
    - id: id
      type: System.Object
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
    content.vb: Function GetCatalogItemAsync(itemType As Type, id As Object) As Task(Of ICatalogItem)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemAsync(Type, Object)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(System.Type, Object)
  name.vb: GetCatalogItemAsync(Type, Object)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog,System.Object)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog,System.Object)
  id: GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog,System.Object)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemAsync(ICatalog, object)
  nameWithType: ICatalogRepository.GetCatalogItemAsync(ICatalog, object)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog, object)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 17
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem?> GetCatalogItemAsync(ICatalog catalog, object id)
    parameters:
    - id: catalog
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    - id: id
      type: System.Object
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
    content.vb: Function GetCatalogItemAsync(catalog As ICatalog, id As Object) As Task(Of ICatalogItem)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemAsync(ICatalog, Object)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog, Object)
  name.vb: GetCatalogItemAsync(ICatalog, Object)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync``1
  id: GetCatalogItemsAsync``1
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync<T>()
  nameWithType: ICatalogRepository.GetCatalogItemsAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 19
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<T[]> GetCatalogItemsAsync<T>() where T : class, ICatalogItem'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}[]}
    content.vb: Function GetCatalogItemsAsync(Of T As {Class, ICatalogItem})() As Task(Of T())
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
  nameWithType.vb: ICatalogRepository.GetCatalogItemsAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(Of T)()
  name.vb: GetCatalogItemsAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  id: GetCatalogItemsAsync(System.Type)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync(Type)
  nameWithType: ICatalogRepository.GetCatalogItemsAsync(Type)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(System.Type)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 20
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem[]> GetCatalogItemsAsync(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem[]}
    content.vb: Function GetCatalogItemsAsync(type As Type) As Task(Of ICatalogItem())
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  id: GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: GetCatalogItemsAsync(ICatalog)
  nameWithType: ICatalogRepository.GetCatalogItemsAsync(ICatalog)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCatalogItemsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 21
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem[]> GetCatalogItemsAsync(ICatalog catalogInfo)
    parameters:
    - id: catalogInfo
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem[]}
    content.vb: Function GetCatalogItemsAsync(catalogInfo As ICatalog) As Task(Of ICatalogItem())
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  id: InsertCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: InsertCatalogAsync(ICatalog)
  nameWithType: ICatalogRepository.InsertCatalogAsync(ICatalog)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 24
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task InsertCatalogAsync(ICatalog catalog)
    parameters:
    - id: catalog
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InsertCatalogAsync(catalog As ICatalog) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  id: RemoveCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: RemoveCatalogAsync(ICatalog)
  nameWithType: ICatalogRepository.RemoveCatalogAsync(ICatalog)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 25
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task RemoveCatalogAsync(ICatalog catalog)
    parameters:
    - id: catalog
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveCatalogAsync(catalog As ICatalog) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(System.String,System.Type)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(System.String,System.Type)
  id: CreateCatalogAsync(System.String,System.Type)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: CreateCatalogAsync(string, Type)
  nameWithType: ICatalogRepository.CreateCatalogAsync(string, Type)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(string, System.Type)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 26
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalog> CreateCatalogAsync(string name, Type itemType)
    parameters:
    - id: name
      type: System.String
    - id: itemType
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function CreateCatalogAsync(name As String, itemType As Type) As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync*
  nameWithType.vb: ICatalogRepository.CreateCatalogAsync(String, Type)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(String, System.Type)
  name.vb: CreateCatalogAsync(String, Type)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync``1(System.String)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync``1(System.String)
  id: CreateCatalogAsync``1(System.String)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: CreateCatalogAsync<T>(string)
  nameWithType: ICatalogRepository.CreateCatalogAsync<T>(string)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync<T>(string)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCatalogAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 27
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<ICatalog> CreateCatalogAsync<T>(string name) where T : class, ICatalogItem'
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
    content.vb: Function CreateCatalogAsync(Of T As {Class, ICatalogItem})(name As String) As Task(Of ICatalog)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync*
  nameWithType.vb: ICatalogRepository.CreateCatalogAsync(Of T)(String)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync(Of T)(String)
  name.vb: CreateCatalogAsync(Of T)(String)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync``1(``0)
  id: InsertCatalogItemAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: InsertCatalogItemAsync<T>(T)
  nameWithType: ICatalogRepository.InsertCatalogItemAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 29
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task InsertCatalogItemAsync<T>(T catalogItem) where T : class, ICatalogItem'
    parameters:
    - id: catalogItem
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InsertCatalogItemAsync(Of T As {Class, ICatalogItem})(catalogItem As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.InsertCatalogItemAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync(Of T)(T)
  name.vb: InsertCatalogItemAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync``1(``0)
  id: RemoveCatalogItemAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: RemoveCatalogItemAsync<T>(T)
  nameWithType: ICatalogRepository.RemoveCatalogItemAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 30
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task RemoveCatalogItemAsync<T>(T catalogItem) where T : class, ICatalogItem'
    parameters:
    - id: catalogItem
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveCatalogItemAsync(Of T As {Class, ICatalogItem})(catalogItem As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.RemoveCatalogItemAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync(Of T)(T)
  name.vb: RemoveCatalogItemAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync``1
  id: CreateCatalogItemAsync``1
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: CreateCatalogItemAsync<T>()
  nameWithType: ICatalogRepository.CreateCatalogItemAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 31
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: 'Task<T> CreateCatalogItemAsync<T>() where T : class, ICatalogItem'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function CreateCatalogItemAsync(Of T As {Class, ICatalogItem})() As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync*
  nameWithType.vb: ICatalogRepository.CreateCatalogItemAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(Of T)()
  name.vb: CreateCatalogItemAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  id: CreateCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: CreateCatalogItemAsync(ICatalog)
  nameWithType: ICatalogRepository.CreateCatalogItemAsync(ICatalog)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 32
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem> CreateCatalogItemAsync(ICatalog catalog)
    parameters:
    - id: catalog
      type: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
    content.vb: Function CreateCatalogItemAsync(catalog As ICatalog) As Task(Of ICatalogItem)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(System.Type)
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(System.Type)
  id: CreateCatalogItemAsync(System.Type)
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: CreateCatalogItemAsync(Type)
  nameWithType: ICatalogRepository.CreateCatalogItemAsync(Type)
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync(System.Type)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCatalogItemAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 33
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task<ICatalogItem> CreateCatalogItemAsync(Type itemType)
    parameters:
    - id: itemType
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
    content.vb: Function CreateCatalogItemAsync(itemType As Type) As Task(Of ICatalogItem)
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync*
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: ICatalogRepository.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveChangesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Catalog/ICatalogRepository.cs
    startLine: 35
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Catalog
  syntax:
    content: Task SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveChangesAsync() As Task
  overload: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync*
references:
- uid: ParmaGIS.Modules.Data.Space.Catalog
  commentId: N:ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Catalog
  nameWithType: ParmaGIS.Modules.Data.Space.Catalog
  fullName: ParmaGIS.Modules.Data.Space.Catalog
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Data.Space.Catalog.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Catalog
    name: Catalog
    href: ParmaGIS.Modules.Data.Space.Catalog.html
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogsAsync
  name: GetCatalogsAsync
  nameWithType: ICatalogRepository.GetCatalogsAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogsAsync
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog[]}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICatalog[]>
  nameWithType: Task<ICatalog[]>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.Catalog.ICatalog[]>
  nameWithType.vb: Task(Of ICatalog())
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalog())
  name.vb: Task(Of ICatalog())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogAsync_ParmaGIS_Modules_Data_Space_Catalog_ICatalogItem_
  name: GetCatalogAsync
  nameWithType: ICatalogRepository.GetCatalogAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
  parent: ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  name: ICatalogItem
  nameWithType: ICatalogItem
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalog}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICatalog>
  nameWithType: Task<ICatalog>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.Catalog.ICatalog>
  nameWithType.vb: Task(Of ICatalog)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalog)
  name.vb: Task(Of ICatalog)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
    name: ICatalog
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogItemAsync__1_System_Object_
  name: GetCatalogItemAsync
  nameWithType: ICatalogRepository.GetCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICatalogItem>
  nameWithType: Task<ICatalogItem>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem>
  nameWithType.vb: Task(Of ICatalogItem)
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem)
  name.vb: Task(Of ICatalogItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
  commentId: T:ParmaGIS.Modules.Data.Space.Catalog.ICatalog
  parent: ParmaGIS.Modules.Data.Space.Catalog
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalog.html
  name: ICatalog
  nameWithType: ICatalog
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalog
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_GetCatalogItemsAsync__1
  name: GetCatalogItemsAsync
  nameWithType: ICatalogRepository.GetCatalogItemsAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.GetCatalogItemsAsync
- uid: System.Threading.Tasks.Task{{T}[]}
  commentId: T:System.Threading.Tasks.Task{`0[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T[]>
  nameWithType: Task<T[]>
  fullName: System.Threading.Tasks.Task<T[]>
  nameWithType.vb: Task(Of T())
  fullName.vb: System.Threading.Tasks.Task(Of T())
  name.vb: Task(Of T())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem[]}
  commentId: T:System.Threading.Tasks.Task{ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICatalogItem[]>
  nameWithType: Task<ICatalogItem[]>
  fullName: System.Threading.Tasks.Task<ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem[]>
  nameWithType.vb: Task(Of ICatalogItem())
  fullName.vb: System.Threading.Tasks.Task(Of ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem())
  name.vb: Task(Of ICatalogItem())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem
    name: ICatalogItem
    href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogItem.html
  - name: (
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_InsertCatalogAsync_ParmaGIS_Modules_Data_Space_Catalog_ICatalog_
  name: InsertCatalogAsync
  nameWithType: ICatalogRepository.InsertCatalogAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_RemoveCatalogAsync_ParmaGIS_Modules_Data_Space_Catalog_ICatalog_
  name: RemoveCatalogAsync
  nameWithType: ICatalogRepository.RemoveCatalogAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_CreateCatalogAsync_System_String_System_Type_
  name: CreateCatalogAsync
  nameWithType: ICatalogRepository.CreateCatalogAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_InsertCatalogItemAsync__1___0_
  name: InsertCatalogItemAsync
  nameWithType: ICatalogRepository.InsertCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.InsertCatalogItemAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_RemoveCatalogItemAsync__1___0_
  name: RemoveCatalogItemAsync
  nameWithType: ICatalogRepository.RemoveCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.RemoveCatalogItemAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_CreateCatalogItemAsync__1
  name: CreateCatalogItemAsync
  nameWithType: ICatalogRepository.CreateCatalogItemAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.CreateCatalogItemAsync
- uid: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
  href: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.html#ParmaGIS_Modules_Data_Space_Catalog_ICatalogRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: ICatalogRepository.SaveChangesAsync
  fullName: ParmaGIS.Modules.Data.Space.Catalog.ICatalogRepository.SaveChangesAsync
