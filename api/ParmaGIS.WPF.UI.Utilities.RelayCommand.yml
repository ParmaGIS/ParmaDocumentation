### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand
  commentId: T:ParmaGIS.WPF.UI.Utilities.RelayCommand
  id: RelayCommand
  parent: ParmaGIS.WPF.UI.Utilities
  children:
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},ParmaGIS.WPF.UI.Utilities.CommandMode)
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object},ParmaGIS.WPF.UI.Utilities.CommandMode)
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute(System.Object)
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecuteChanged
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute
  - ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute(System.Object)
  langs:
  - csharp
  - vb
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand
  type: Class
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RelayCommand
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 6
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: 'public class RelayCommand : ICommand'
    content.vb: Public Class RelayCommand Implements ICommand
  inheritance:
  - System.Object
  derivedClasses:
  - ParmaGIS.WPF.UI.Utilities.RelayCommand`1
  implements:
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},ParmaGIS.WPF.UI.Utilities.CommandMode)
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},ParmaGIS.WPF.UI.Utilities.CommandMode)
  id: '#ctor(System.Action,System.Func{System.Boolean},ParmaGIS.WPF.UI.Utilities.CommandMode)'
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: RelayCommand(Action, Func<bool>?, CommandMode)
  nameWithType: RelayCommand.RelayCommand(Action, Func<bool>?, CommandMode)
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.RelayCommand(System.Action, System.Func<bool>?, ParmaGIS.WPF.UI.Utilities.CommandMode)
  type: Constructor
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 16
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: public RelayCommand(Action execute, Func<bool>? canExecute = null, CommandMode commandMode = CommandMode.Slim)
    parameters:
    - id: execute
      type: System.Action
    - id: canExecute
      type: System.Func{System.Boolean}
    - id: commandMode
      type: ParmaGIS.WPF.UI.Utilities.CommandMode
    content.vb: Public Sub New(execute As Action, canExecute As Func(Of Boolean) = Nothing, commandMode As CommandMode = CommandMode.Slim)
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor*
  nameWithType.vb: RelayCommand.New(Action, Func(Of Boolean), CommandMode)
  fullName.vb: ParmaGIS.WPF.UI.Utilities.RelayCommand.New(System.Action, System.Func(Of Boolean), ParmaGIS.WPF.UI.Utilities.CommandMode)
  name.vb: New(Action, Func(Of Boolean), CommandMode)
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object},ParmaGIS.WPF.UI.Utilities.CommandMode)
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object},ParmaGIS.WPF.UI.Utilities.CommandMode)
  id: '#ctor(System.Action{System.Object},System.Predicate{System.Object},ParmaGIS.WPF.UI.Utilities.CommandMode)'
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<object?>, Predicate<object?>?, CommandMode)
  nameWithType: RelayCommand.RelayCommand(Action<object?>, Predicate<object?>?, CommandMode)
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.RelayCommand(System.Action<object?>, System.Predicate<object?>?, ParmaGIS.WPF.UI.Utilities.CommandMode)
  type: Constructor
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 20
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: public RelayCommand(Action<object?> execute, Predicate<object?>? canExecute = null, CommandMode commandMode = CommandMode.Slim)
    parameters:
    - id: execute
      type: System.Action{System.Object}
    - id: canExecute
      type: System.Predicate{System.Object}
    - id: commandMode
      type: ParmaGIS.WPF.UI.Utilities.CommandMode
    content.vb: Public Sub New(execute As Action(Of Object), canExecute As Predicate(Of Object) = Nothing, commandMode As CommandMode = CommandMode.Slim)
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor*
  nameWithType.vb: RelayCommand.New(Action(Of Object), Predicate(Of Object), CommandMode)
  fullName.vb: ParmaGIS.WPF.UI.Utilities.RelayCommand.New(System.Action(Of Object), System.Predicate(Of Object), ParmaGIS.WPF.UI.Utilities.CommandMode)
  name.vb: New(Action(Of Object), Predicate(Of Object), CommandMode)
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute
  id: CanExecute
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: CanExecute()
  nameWithType: RelayCommand.CanExecute()
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute()
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CanExecute
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 30
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: public bool CanExecute()
    return:
      type: System.Boolean
    content.vb: Public Function CanExecute() As Boolean
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute*
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute(System.Object)
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: CanExecute(object?)
  nameWithType: RelayCommand.CanExecute(object?)
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute(object?)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CanExecute
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 34
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Defines the method that determines whether the command can execute in its current state.
  example: []
  syntax:
    content: public bool CanExecute(object? parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this command can be executed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType.vb: RelayCommand.CanExecute(Object)
  fullName.vb: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute(Object)
  name.vb: CanExecute(Object)
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecuteChanged
  commentId: E:ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: RelayCommand.CanExecuteChanged
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecuteChanged
  type: Event
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CanExecuteChanged
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 39
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Occurs when changes occur that affect whether or not the command should execute.
  example: []
  syntax:
    content: public event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute(System.Object)
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: Execute(object?)
  nameWithType: RelayCommand.Execute(object?)
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute(object?)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Execute
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 45
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  summary: Defines the method to be called when the command is invoked.
  example: []
  syntax:
    content: public void Execute(object? parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Sub Execute(parameter As Object)
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType.vb: RelayCommand.Execute(Object)
  fullName.vb: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute(Object)
  name.vb: Execute(Object)
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute
  commentId: M:ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute
  id: Execute
  parent: ParmaGIS.WPF.UI.Utilities.RelayCommand
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: RelayCommand.Execute()
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute()
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Execute
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Utilities/RelayCommand.cs
    startLine: 56
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Utilities
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute()
  overload: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute*
references:
- uid: ParmaGIS.WPF.UI.Utilities
  commentId: N:ParmaGIS.WPF.UI.Utilities
  href: ParmaGIS.html
  name: ParmaGIS.WPF.UI.Utilities
  nameWithType: ParmaGIS.WPF.UI.Utilities
  fullName: ParmaGIS.WPF.UI.Utilities
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Utilities
    name: Utilities
    href: ParmaGIS.WPF.UI.Utilities.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Utilities
    name: Utilities
    href: ParmaGIS.WPF.UI.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.RelayCommand.#ctor
  href: ParmaGIS.WPF.UI.Utilities.RelayCommand.html#ParmaGIS_WPF_UI_Utilities_RelayCommand__ctor_System_Action_System_Func_System_Boolean__ParmaGIS_WPF_UI_Utilities_CommandMode_
  name: RelayCommand
  nameWithType: RelayCommand.RelayCommand
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.RelayCommand
  nameWithType.vb: RelayCommand.New
  fullName.vb: ParmaGIS.WPF.UI.Utilities.RelayCommand.New
  name.vb: New
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.WPF.UI.Utilities.CommandMode
  commentId: T:ParmaGIS.WPF.UI.Utilities.CommandMode
  parent: ParmaGIS.WPF.UI.Utilities
  href: ParmaGIS.WPF.UI.Utilities.CommandMode.html
  name: CommandMode
  nameWithType: CommandMode
  fullName: ParmaGIS.WPF.UI.Utilities.CommandMode
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Predicate{System.Object}
  commentId: T:System.Predicate{System.Object}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<object>
  nameWithType: Predicate<object>
  fullName: System.Predicate<object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: System.Predicate(Of Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute
  href: ParmaGIS.WPF.UI.Utilities.RelayCommand.html#ParmaGIS_WPF_UI_Utilities_RelayCommand_CanExecute
  name: CanExecute
  nameWithType: RelayCommand.CanExecute
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.CanExecute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  name: CanExecute(object)
  nameWithType: ICommand.CanExecute(object)
  fullName: System.Windows.Input.ICommand.CanExecute(object)
  nameWithType.vb: ICommand.CanExecute(Object)
  fullName.vb: System.Windows.Input.ICommand.CanExecute(Object)
  name.vb: CanExecute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecutechanged
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute*
  commentId: Overload:ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute
  href: ParmaGIS.WPF.UI.Utilities.RelayCommand.html#ParmaGIS_WPF_UI_Utilities_RelayCommand_Execute_System_Object_
  name: Execute
  nameWithType: RelayCommand.Execute
  fullName: ParmaGIS.WPF.UI.Utilities.RelayCommand.Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  name: Execute(object)
  nameWithType: ICommand.Execute(object)
  fullName: System.Windows.Input.ICommand.Execute(object)
  nameWithType.vb: ICommand.Execute(Object)
  fullName.vb: System.Windows.Input.ICommand.Execute(Object)
  name.vb: Execute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
