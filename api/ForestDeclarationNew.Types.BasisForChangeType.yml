### YamlMime:ManagedReference
items:
- uid: ForestDeclarationNew.Types.BasisForChangeType
  commentId: T:ForestDeclarationNew.Types.BasisForChangeType
  id: BasisForChangeType
  parent: ForestDeclarationNew.Types
  children:
  - ForestDeclarationNew.Types.BasisForChangeType.#ctor
  - ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
  - ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
  - ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
  - ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
  - ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
  langs:
  - csharp
  - vb
  name: BasisForChangeType
  nameWithType: BasisForChangeType
  fullName: ForestDeclarationNew.Types.BasisForChangeType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: BasisForChangeType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 595
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Основание для внесения изменений</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class BasisForChangeType
    content.vb: >-
      <Serializable>

      Public Class BasisForChangeType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
  commentId: P:ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
  id: CatalogForChange
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: CatalogForChange
  nameWithType: BasisForChangeType.CatalogForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CatalogForChange
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 607
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Справочник "Основание для внесения изменений в Лесную декларацию"</p>
  example: []
  syntax:
    content: >-
      [Required]

      public BasisForChangeKindEType CatalogForChange { get; set; }
    parameters: []
    return:
      type: Common.Enums.BasisForChange.Types.BasisForChangeKindEType
    content.vb: >-
      <Required>

      Public Property CatalogForChange As BasisForChangeKindEType
  overload: ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
  commentId: P:ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
  id: ClearcutForChange
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: ClearcutForChange
  nameWithType: BasisForChangeType.ClearcutForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ClearcutForChange
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 621
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Номер лесосеки для внесения изменений</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      public Collection<string> ClearcutForChange { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      Public Property ClearcutForChange As Collection(Of String)
  overload: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
- uid: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
  commentId: P:ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
  id: ClearcutForChangeSpecified
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: ClearcutForChangeSpecified
  nameWithType: BasisForChangeType.ClearcutForChangeSpecified
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ClearcutForChangeSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 640
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the ClearcutForChange collection is empty.</p>
  example: []
  syntax:
    content: public bool ClearcutForChangeSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ClearcutForChangeSpecified As Boolean
  overload: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified*
- uid: ForestDeclarationNew.Types.BasisForChangeType.#ctor
  commentId: M:ForestDeclarationNew.Types.BasisForChangeType.#ctor
  id: '#ctor'
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: BasisForChangeType()
  nameWithType: BasisForChangeType.BasisForChangeType()
  fullName: ForestDeclarationNew.Types.BasisForChangeType.BasisForChangeType()
  type: Constructor
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 652
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Initializes a new instance of the <xref href="ForestDeclarationNew.Types.BasisForChangeType" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public BasisForChangeType()
    content.vb: Public Sub New()
  overload: ForestDeclarationNew.Types.BasisForChangeType.#ctor*
  nameWithType.vb: BasisForChangeType.New()
  fullName.vb: ForestDeclarationNew.Types.BasisForChangeType.New()
  name.vb: New()
- uid: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
  commentId: P:ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
  id: ObjectForChange
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: ObjectForChange
  nameWithType: BasisForChangeType.ObjectForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObjectForChange
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 667
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Номер объекта для внесения изменений</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      public Collection<string> ObjectForChange { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      Public Property ObjectForChange As Collection(Of String)
  overload: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
- uid: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
  commentId: P:ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
  id: ObjectForChangeSpecified
  parent: ForestDeclarationNew.Types.BasisForChangeType
  langs:
  - csharp
  - vb
  name: ObjectForChangeSpecified
  nameWithType: BasisForChangeType.ObjectForChangeSpecified
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObjectForChangeSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 686
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the ObjectForChange collection is empty.</p>
  example: []
  syntax:
    content: public bool ObjectForChangeSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ObjectForChangeSpecified As Boolean
  overload: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified*
references:
- uid: ForestDeclarationNew.Types
  commentId: N:ForestDeclarationNew.Types
  href: ForestDeclarationNew.html
  name: ForestDeclarationNew.Types
  nameWithType: ForestDeclarationNew.Types
  fullName: ForestDeclarationNew.Types
  spec.csharp:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
  spec.vb:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType_CatalogForChange
  name: CatalogForChange
  nameWithType: BasisForChangeType.CatalogForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.CatalogForChange
- uid: Common.Enums.BasisForChange.Types.BasisForChangeKindEType
  commentId: T:Common.Enums.BasisForChange.Types.BasisForChangeKindEType
  parent: Common.Enums.BasisForChange.Types
  href: Common.Enums.BasisForChange.Types.BasisForChangeKindEType.html
  name: BasisForChangeKindEType
  nameWithType: BasisForChangeKindEType
  fullName: Common.Enums.BasisForChange.Types.BasisForChangeKindEType
- uid: Common.Enums.BasisForChange.Types
  commentId: N:Common.Enums.BasisForChange.Types
  href: Common.html
  name: Common.Enums.BasisForChange.Types
  nameWithType: Common.Enums.BasisForChange.Types
  fullName: Common.Enums.BasisForChange.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.BasisForChange
    name: BasisForChange
    href: Common.Enums.BasisForChange.html
  - name: .
  - uid: Common.Enums.BasisForChange.Types
    name: Types
    href: Common.Enums.BasisForChange.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Enums
    name: Enums
    href: Common.Enums.html
  - name: .
  - uid: Common.Enums.BasisForChange
    name: BasisForChange
    href: Common.Enums.BasisForChange.html
  - name: .
  - uid: Common.Enums.BasisForChange.Types
    name: Types
    href: Common.Enums.BasisForChange.Types.html
- uid: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType_ClearcutForChange
  name: ClearcutForChange
  nameWithType: BasisForChangeType.ClearcutForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChange
- uid: System.Collections.ObjectModel.Collection{System.String}
  commentId: T:System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<string>
  nameWithType: Collection<string>
  fullName: System.Collections.ObjectModel.Collection<string>
  nameWithType.vb: Collection(Of String)
  fullName.vb: System.Collections.ObjectModel.Collection(Of String)
  name.vb: Collection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType_ClearcutForChangeSpecified
  name: ClearcutForChangeSpecified
  nameWithType: BasisForChangeType.ClearcutForChangeSpecified
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ClearcutForChangeSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ForestDeclarationNew.Types.BasisForChangeType
  commentId: T:ForestDeclarationNew.Types.BasisForChangeType
  href: ForestDeclarationNew.Types.BasisForChangeType.html
  name: BasisForChangeType
  nameWithType: BasisForChangeType
  fullName: ForestDeclarationNew.Types.BasisForChangeType
- uid: ForestDeclarationNew.Types.BasisForChangeType.#ctor*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.#ctor
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType__ctor
  name: BasisForChangeType
  nameWithType: BasisForChangeType.BasisForChangeType
  fullName: ForestDeclarationNew.Types.BasisForChangeType.BasisForChangeType
  nameWithType.vb: BasisForChangeType.New
  fullName.vb: ForestDeclarationNew.Types.BasisForChangeType.New
  name.vb: New
- uid: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType_ObjectForChange
  name: ObjectForChange
  nameWithType: BasisForChangeType.ObjectForChange
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChange
- uid: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified*
  commentId: Overload:ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
  href: ForestDeclarationNew.Types.BasisForChangeType.html#ForestDeclarationNew_Types_BasisForChangeType_ObjectForChangeSpecified
  name: ObjectForChangeSpecified
  nameWithType: BasisForChangeType.ObjectForChangeSpecified
  fullName: ForestDeclarationNew.Types.BasisForChangeType.ObjectForChangeSpecified
