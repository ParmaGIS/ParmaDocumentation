### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Core.Modularity.ModuleEntity
  commentId: T:ParmaGIS.Core.Modularity.ModuleEntity
  id: ModuleEntity
  parent: ParmaGIS.Core.Modularity
  children:
  - ParmaGIS.Core.Modularity.ModuleEntity.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Collections.Generic.IEnumerable{System.Type})
  - ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
  - ParmaGIS.Core.Modularity.ModuleEntity.Name
  - ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
  - ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
  - ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
  - ParmaGIS.Core.Modularity.ModuleEntity.Reference
  - ParmaGIS.Core.Modularity.ModuleEntity.Type
  langs:
  - csharp
  - vb
  name: ModuleEntity
  nameWithType: ModuleEntity
  fullName: ParmaGIS.Core.Modularity.ModuleEntity
  type: Class
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ModuleEntity
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public class ModuleEntity
    content.vb: Public Class ModuleEntity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Core.Modularity.ModuleEntity.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:ParmaGIS.Core.Modularity.ModuleEntity.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Collections.Generic.IEnumerable{System.Type})'
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: ModuleEntity(string, string?, string, bool, IEnumerable<string>, Type?, IEnumerable<Type>)
  nameWithType: ModuleEntity.ModuleEntity(string, string?, string, bool, IEnumerable<string>, Type?, IEnumerable<Type>)
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.ModuleEntity(string, string?, string, bool, System.Collections.Generic.IEnumerable<string>, System.Type?, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 14
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public ModuleEntity(string name, string? qualifiedName, string reference, bool onDemand, IEnumerable<string> dependsOn, Type? type, IEnumerable<Type> providesTypes)
    parameters:
    - id: name
      type: System.String
    - id: qualifiedName
      type: System.String
    - id: reference
      type: System.String
    - id: onDemand
      type: System.Boolean
    - id: dependsOn
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: type
      type: System.Type
    - id: providesTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Sub New(name As String, qualifiedName As String, reference As String, onDemand As Boolean, dependsOn As IEnumerable(Of String), type As Type, providesTypes As IEnumerable(Of Type))
  overload: ParmaGIS.Core.Modularity.ModuleEntity.#ctor*
  nameWithType.vb: ModuleEntity.New(String, String, String, Boolean, IEnumerable(Of String), Type, IEnumerable(Of Type))
  fullName.vb: ParmaGIS.Core.Modularity.ModuleEntity.New(String, String, String, Boolean, System.Collections.Generic.IEnumerable(Of String), System.Type, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(String, String, String, Boolean, IEnumerable(Of String), Type, IEnumerable(Of Type))
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Name
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.Name
  id: Name
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModuleEntity.Name
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Name
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Name
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 25
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: ParmaGIS.Core.Modularity.ModuleEntity.Name*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
  id: QualifiedName
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: QualifiedName
  nameWithType: ModuleEntity.QualifiedName
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: QualifiedName
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 27
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public string? QualifiedName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QualifiedName As String
  overload: ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Reference
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.Reference
  id: Reference
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: ModuleEntity.Reference
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Reference
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Reference
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 29
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public string Reference { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Reference As String
  overload: ParmaGIS.Core.Modularity.ModuleEntity.Reference*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
  id: OnDemand
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: OnDemand
  nameWithType: ModuleEntity.OnDemand
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OnDemand
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 32
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public bool OnDemand { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OnDemand As Boolean
  overload: ParmaGIS.Core.Modularity.ModuleEntity.OnDemand*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
  id: DependsOn
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: DependsOn
  nameWithType: ModuleEntity.DependsOn
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DependsOn
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 34
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public IEnumerable<string> DependsOn { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property DependsOn As IEnumerable(Of String)
  overload: ParmaGIS.Core.Modularity.ModuleEntity.DependsOn*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Type
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.Type
  id: Type
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ModuleEntity.Type
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Type
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Type
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 36
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public Type? Type { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property Type As Type
  overload: ParmaGIS.Core.Modularity.ModuleEntity.Type*
- uid: ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
  commentId: P:ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
  id: ProvidesTypes
  parent: ParmaGIS.Core.Modularity.ModuleEntity
  langs:
  - csharp
  - vb
  name: ProvidesTypes
  nameWithType: ModuleEntity.ProvidesTypes
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
  type: Property
  source:
    remote:
      path: common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
      branch: origin/dev
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ProvidesTypes
    path: ../../ParmaTest/common/src/ParmaGIS.Core/Modularity/ModuleExtensions.cs
    startLine: 38
  assemblies:
  - ParmaGIS.Core
  namespace: ParmaGIS.Core.Modularity
  syntax:
    content: public IEnumerable<Type> ProvidesTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public ReadOnly Property ProvidesTypes As IEnumerable(Of Type)
  overload: ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes*
references:
- uid: ParmaGIS.Core.Modularity
  commentId: N:ParmaGIS.Core.Modularity
  href: ParmaGIS.html
  name: ParmaGIS.Core.Modularity
  nameWithType: ParmaGIS.Core.Modularity
  fullName: ParmaGIS.Core.Modularity
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Modularity
    name: Modularity
    href: ParmaGIS.Core.Modularity.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Core
    name: Core
    href: ParmaGIS.Core.html
  - name: .
  - uid: ParmaGIS.Core.Modularity
    name: Modularity
    href: ParmaGIS.Core.Modularity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Core.Modularity.ModuleEntity.#ctor*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.#ctor
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity__ctor_System_String_System_String_System_String_System_Boolean_System_Collections_Generic_IEnumerable_System_String__System_Type_System_Collections_Generic_IEnumerable_System_Type__
  name: ModuleEntity
  nameWithType: ModuleEntity.ModuleEntity
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.ModuleEntity
  nameWithType.vb: ModuleEntity.New
  fullName.vb: ParmaGIS.Core.Modularity.ModuleEntity.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Name*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.Name
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_Name
  name: Name
  nameWithType: ModuleEntity.Name
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Name
- uid: ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_QualifiedName
  name: QualifiedName
  nameWithType: ModuleEntity.QualifiedName
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.QualifiedName
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Reference*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.Reference
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_Reference
  name: Reference
  nameWithType: ModuleEntity.Reference
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Reference
- uid: ParmaGIS.Core.Modularity.ModuleEntity.OnDemand*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_OnDemand
  name: OnDemand
  nameWithType: ModuleEntity.OnDemand
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.OnDemand
- uid: ParmaGIS.Core.Modularity.ModuleEntity.DependsOn*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_DependsOn
  name: DependsOn
  nameWithType: ModuleEntity.DependsOn
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.DependsOn
- uid: ParmaGIS.Core.Modularity.ModuleEntity.Type*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.Type
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_Type
  name: Type
  nameWithType: ModuleEntity.Type
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.Type
- uid: ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes*
  commentId: Overload:ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
  href: ParmaGIS.Core.Modularity.ModuleEntity.html#ParmaGIS_Core_Modularity_ModuleEntity_ProvidesTypes
  name: ProvidesTypes
  nameWithType: ModuleEntity.ProvidesTypes
  fullName: ParmaGIS.Core.Modularity.ModuleEntity.ProvidesTypes
