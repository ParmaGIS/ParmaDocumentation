### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.RepoResponse
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse
  id: RepoResponse
  parent: ParmaGIS.Modules.Data.Space
  children:
  - ParmaGIS.Modules.Data.Space.RepoResponse.#ctor
  - ParmaGIS.Modules.Data.Space.RepoResponse.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  - ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  - ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  - ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  - ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  - ParmaGIS.Modules.Data.Space.RepoResponse.Message
  - ParmaGIS.Modules.Data.Space.RepoResponse.Result
  langs:
  - csharp
  - vb
  name: RepoResponse
  nameWithType: RepoResponse
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RepoResponse
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Представляет простую реализацию ответа репозитория.
  example: []
  syntax:
    content: public class RepoResponse
    content.vb: Public Class RepoResponse
  inheritance:
  - System.Object
  derivedClasses:
  - ParmaGIS.Modules.Data.Space.RepoResponse`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.#ctor
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.#ctor
  id: '#ctor'
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: RepoResponse()
  nameWithType: RepoResponse.RepoResponse()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.RepoResponse()
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 12
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref> с ответом <xref href="ParmaGIS.Modules.Data.Space.RepoResponseResult.Success" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RepoResponse()
    content.vb: Public Sub New()
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.#ctor*
  nameWithType.vb: RepoResponse.New()
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.New()
  name.vb: New()
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)
  id: '#ctor(System.String,ParmaGIS.Modules.Data.Space.RepoResponseResult)'
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: RepoResponse(string, RepoResponseResult)
  nameWithType: RepoResponse.RepoResponse(string, RepoResponseResult)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.RepoResponse(string, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 22
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Инициализирует экземпляр класса <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RepoResponse(string message, RepoResponseResult result = RepoResponseResult.Error)
    parameters:
    - id: message
      type: System.String
      description: Сообщение ответа.
    - id: result
      type: ParmaGIS.Modules.Data.Space.RepoResponseResult
      description: Результат ответа репозитория.
    content.vb: Public Sub New(message As String, result As RepoResponseResult = RepoResponseResult.Error)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.#ctor*
  nameWithType.vb: RepoResponse.New(String, RepoResponseResult)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.New(String, ParmaGIS.Modules.Data.Space.RepoResponseResult)
  name.vb: New(String, RepoResponseResult)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Message
  commentId: P:ParmaGIS.Modules.Data.Space.RepoResponse.Message
  id: Message
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: RepoResponse.Message
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Message
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Message
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 30
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  example: []
  syntax:
    content: public string? Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.Message*
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Result
  commentId: P:ParmaGIS.Modules.Data.Space.RepoResponse.Result
  id: Result
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: RepoResponse.Result
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Result
  type: Property
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Result
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 33
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  example: []
  syntax:
    content: public RepoResponseResult Result { get; }
    parameters: []
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponseResult
    content.vb: Public ReadOnly Property Result As RepoResponseResult
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.Result*
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  id: IsSuccess
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: IsSuccess()
  nameWithType: RepoResponse.IsSuccess()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsSuccess
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 39
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Проверяет успешность ответа.
  example: []
  syntax:
    content: public bool IsSuccess()
    return:
      type: System.Boolean
      description: Значение <code>true</code>, если <code>Result == RepoResponseResult.Success</code>, <code>false</code> - иначе.
    content.vb: Public Function IsSuccess() As Boolean
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess*
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  id: IsNotSuccess
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: IsNotSuccess()
  nameWithType: RepoResponse.IsNotSuccess()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsNotSuccess
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 48
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Проверяет успешность ответа. Обратная <xref href="ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsNotSuccess()
    return:
      type: System.Boolean
      description: Значение <code>true</code>, если <code>Result != RepoResponseResult.Success</code>, <code>false</code> - иначе.
    content.vb: Public Function IsNotSuccess() As Boolean
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess*
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  id: Invoke(System.Action,System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: Invoke(Action, bool)
  nameWithType: RepoResponse.Invoke(Action, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, bool)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Invoke
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 60
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: >-
    Вызывает функцию и формирует реузльтат ее выполнения в <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref>.

    Если при выполнении функции произойдет ошибка, то будет сформирован соответствующий ответ.
  example: []
  syntax:
    content: public static RepoResponse Invoke(Action acion, bool throwException = false)
    parameters:
    - id: acion
      type: System.Action
      description: Функция.
    - id: throwException
      type: System.Boolean
      description: Вызвать исключение при возникновении исключения.
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponse
      description: <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Invoke(acion As Action, throwException As Boolean = False) As RepoResponse
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke*
  nameWithType.vb: RepoResponse.Invoke(Action, Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, Boolean)
  name.vb: Invoke(Action, Boolean)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  id: Invoke``1(System.Func{``0},System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: Invoke<T>(Func<T>, bool)
  nameWithType: RepoResponse.Invoke<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke<T>(System.Func<T>, bool)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Invoke
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 82
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: >-
    Вызывает функцию и формирует реузльтат ее выполнения в <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.

    Если при выполнении функции произойдет ошибка, то будет сформирован соответствующий ответ.
  example: []
  syntax:
    content: public static RepoResponse<T> Invoke<T>(Func<T> func, bool throwException = false)
    parameters:
    - id: func
      type: System.Func{{T}}
    - id: throwException
      type: System.Boolean
      description: Вызвать исключение при возникновении исключения.
    typeParameters:
    - id: T
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponse{{T}}
      description: <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Invoke(Of T)(func As Func(Of T), throwException As Boolean = False) As RepoResponse(Of T)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke*
  nameWithType.vb: RepoResponse.Invoke(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(Of T)(System.Func(Of T), Boolean)
  name.vb: Invoke(Of T)(Func(Of T), Boolean)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action,System.Boolean)
  id: CreateFunc(System.Action,System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: CreateFunc(Action, bool)
  nameWithType: RepoResponse.CreateFunc(Action, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action, bool)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateFunc
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 104
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: >-
    Оборачивает функцию в контекст <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref>.

    <code class="paramref">acion</code> вызывается через <xref href="ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Func<RepoResponse> CreateFunc(Action acion, bool throwException = false)
    parameters:
    - id: acion
      type: System.Action
      description: Функция.
    - id: throwException
      type: System.Boolean
      description: Вызвать исключение при возникновении исключения.
    return:
      type: System.Func{ParmaGIS.Modules.Data.Space.RepoResponse}
      description: Функция, возвращающая <xref href="ParmaGIS.Modules.Data.Space.RepoResponse" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateFunc(acion As Action, throwException As Boolean = False) As Func(Of RepoResponse)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc*
  nameWithType.vb: RepoResponse.CreateFunc(Action, Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(System.Action, Boolean)
  name.vb: CreateFunc(Action, Boolean)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc``1(System.Func{``0},System.Boolean)
  id: CreateFunc``1(System.Func{``0},System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: CreateFunc<T>(Func<T>, bool)
  nameWithType: RepoResponse.CreateFunc<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc<T>(System.Func<T>, bool)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateFunc
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 117
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: >-
    Оборачивает функцию в контекст <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.

    <code class="paramref">func</code> вызывается через <xref href="ParmaGIS.Modules.Data.Space.RepoResponse.Invoke%60%601(System.Func%7b%60%600%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Func<RepoResponse<T>> CreateFunc<T>(Func<T> func, bool throwException = false)
    parameters:
    - id: func
      type: System.Func{{T}}
      description: Функция.
    - id: throwException
      type: System.Boolean
      description: Вызвать исключение при возникновении исключения.
    typeParameters:
    - id: T
      description: Тип возвращаемого значения.
    return:
      type: System.Func{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
      description: Функция, возвращающая <xref href="ParmaGIS.Modules.Data.Space.RepoResponse%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateFunc(Of T)(func As Func(Of T), throwException As Boolean = False) As Func(Of RepoResponse(Of T))
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc*
  nameWithType.vb: RepoResponse.CreateFunc(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc(Of T)(System.Func(Of T), Boolean)
  name.vb: CreateFunc(Of T)(Func(Of T), Boolean)
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.FromResult``1(``0)
  id: FromResult``1(``0)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  langs:
  - csharp
  - vb
  name: FromResult<T>(T)
  nameWithType: RepoResponse.FromResult<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
      branch: origin/test
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: FromResult
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/RepoResponse.cs
    startLine: 128
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space
  summary: Создает простой успешный ответ из уже имующегося результата.
  example: []
  syntax:
    content: public static RepoResponse<T> FromResult<T>(T value)
    parameters:
    - id: value
      type: '{T}'
      description: Результат ответа.
    typeParameters:
    - id: T
      description: Тип результата.
    return:
      type: ParmaGIS.Modules.Data.Space.RepoResponse{{T}}
      description: Ответ с результатом <code class="paramref">value</code>.
    content.vb: Public Shared Function FromResult(Of T)(value As T) As RepoResponse(Of T)
  overload: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult*
  nameWithType.vb: RepoResponse.FromResult(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult(Of T)(T)
  name.vb: FromResult(Of T)(T)
references:
- uid: ParmaGIS.Modules.Data.Space
  commentId: N:ParmaGIS.Modules.Data.Space
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space
  nameWithType: ParmaGIS.Modules.Data.Space
  fullName: ParmaGIS.Modules.Data.Space
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.RepoResponse
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  name: RepoResponse
  nameWithType: RepoResponse
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse
- uid: ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
  commentId: F:ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
  href: ParmaGIS.Modules.Data.Space.RepoResponseResult.html#ParmaGIS_Modules_Data_Space_RepoResponseResult_Success
  name: Success
  nameWithType: RepoResponseResult.Success
  fullName: ParmaGIS.Modules.Data.Space.RepoResponseResult.Success
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.#ctor*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.#ctor
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse__ctor
  name: RepoResponse
  nameWithType: RepoResponse.RepoResponse
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.RepoResponse
  nameWithType.vb: RepoResponse.New
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ParmaGIS.Modules.Data.Space.RepoResponseResult
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponseResult
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponseResult.html
  name: RepoResponseResult
  nameWithType: RepoResponseResult
  fullName: ParmaGIS.Modules.Data.Space.RepoResponseResult
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Message*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.Message
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Message
  name: Message
  nameWithType: RepoResponse.Message
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Message
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Result*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.Result
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Result
  name: Result
  nameWithType: RepoResponse.Result
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Result
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  name: IsSuccess
  nameWithType: RepoResponse.IsSuccess
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  name: IsSuccess()
  nameWithType: RepoResponse.IsSuccess()
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess()
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
    name: IsSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  - name: (
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsSuccess
    name: IsSuccess
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsSuccess
  - name: (
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_IsNotSuccess
  name: IsNotSuccess
  nameWithType: RepoResponse.IsNotSuccess
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.IsNotSuccess
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  name: Invoke
  nameWithType: RepoResponse.Invoke
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse`1
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  name: RepoResponse<T>
  nameWithType: RepoResponse<T>
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>
  nameWithType.vb: RepoResponse(Of T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T)
  name.vb: RepoResponse(Of T)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse{{T}}
  commentId: T:ParmaGIS.Modules.Data.Space.RepoResponse{``0}
  parent: ParmaGIS.Modules.Data.Space
  definition: ParmaGIS.Modules.Data.Space.RepoResponse`1
  href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  name: RepoResponse<T>
  nameWithType: RepoResponse<T>
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse<T>
  nameWithType.vb: RepoResponse(Of T)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse(Of T)
  name.vb: RepoResponse(Of T)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
  parent: ParmaGIS.Modules.Data.Space.RepoResponse
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  name: Invoke(Action, bool)
  nameWithType: RepoResponse.Invoke(Action, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, bool)
  nameWithType.vb: RepoResponse.Invoke(Action, Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action, Boolean)
  name.vb: Invoke(Action, Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(System.Action,System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke_System_Action_System_Boolean_
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_CreateFunc_System_Action_System_Boolean_
  name: CreateFunc
  nameWithType: RepoResponse.CreateFunc
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.CreateFunc
- uid: System.Func{ParmaGIS.Modules.Data.Space.RepoResponse}
  commentId: T:System.Func{ParmaGIS.Modules.Data.Space.RepoResponse}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<RepoResponse>
  nameWithType: Func<RepoResponse>
  fullName: System.Func<ParmaGIS.Modules.Data.Space.RepoResponse>
  nameWithType.vb: Func(Of RepoResponse)
  fullName.vb: System.Func(Of ParmaGIS.Modules.Data.Space.RepoResponse)
  name.vb: Func(Of RepoResponse)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  commentId: M:ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
  isExternal: true
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  name: Invoke<T>(Func<T>, bool)
  nameWithType: RepoResponse.Invoke<T>(Func<T>, bool)
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke<T>(System.Func<T>, bool)
  nameWithType.vb: RepoResponse.Invoke(Of T)(Func(Of T), Boolean)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke(Of T)(System.Func(Of T), Boolean)
  name.vb: Invoke(Of T)(Func(Of T), Boolean)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse.Invoke``1(System.Func{``0},System.Boolean)
    name: Invoke
    href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_Invoke__1_System_Func___0__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func{ParmaGIS.Modules.Data.Space.RepoResponse{{T}}}
  commentId: T:System.Func{ParmaGIS.Modules.Data.Space.RepoResponse{``0}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<RepoResponse<T>>
  nameWithType: Func<RepoResponse<T>>
  fullName: System.Func<ParmaGIS.Modules.Data.Space.RepoResponse<T>>
  nameWithType.vb: Func(Of RepoResponse(Of T))
  fullName.vb: System.Func(Of ParmaGIS.Modules.Data.Space.RepoResponse(Of T))
  name.vb: Func(Of RepoResponse(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepoResponse`1
    name: RepoResponse
    href: ParmaGIS.Modules.Data.Space.RepoResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult*
  commentId: Overload:ParmaGIS.Modules.Data.Space.RepoResponse.FromResult
  href: ParmaGIS.Modules.Data.Space.RepoResponse.html#ParmaGIS_Modules_Data_Space_RepoResponse_FromResult__1___0_
  name: FromResult
  nameWithType: RepoResponse.FromResult
  fullName: ParmaGIS.Modules.Data.Space.RepoResponse.FromResult
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
