### YamlMime:ManagedReference
items:
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  commentId: T:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  id: CalculationRepositoryBase`4
  parent: ParmaGIS.Modules.Data.Space.Calculation
  children:
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTableRowsChanged
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTablesChanged
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync(`1,System.String)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync``1(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync(`0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync(`1,`0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync``1(`0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`1)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync(`1)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`2,`3)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`3)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(`2,``0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow})
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable})
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync(`2)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync(`3)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync``1(``0)
  - ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>
  type: Class
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalculationRepositoryBase
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 7
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract class CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow> : ICalculationRepository where TCalcTableType : class, ICalcTableType where TCalcTable : class, ICalcTable where TCalcTableRow : class, ICalcTableRow'
    typeParameters:
    - id: TObjectId
    - id: TCalcTableType
    - id: TCalcTable
    - id: TCalcTableRow
    content.vb: Public MustInherit Class CalculationRepositoryBase(Of TObjectId, TCalcTableType As {Class, ICalcTableType}, TCalcTable As {Class, ICalcTable}, TCalcTableRow As {Class, ICalcTableRow}) Implements ICalculationRepository
  inheritance:
  - System.Object
  derivedClasses:
  - ParmaGIS.Modules.Data.Space.DAL.DALCalculationRepositoryBase`4
  implements:
  - ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow)
  name.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTablesChanged
  commentId: E:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTablesChanged
  id: CalcTablesChanged
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CalcTablesChanged
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalcTablesChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalcTablesChanged
  type: Event
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalcTablesChanged
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 14
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  example: []
  syntax:
    content: public event EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>> CalcTablesChanged
    return:
      type: System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}}
    content.vb: Public Event CalcTablesChanged As EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
  implements:
  - ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTablesChanged
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CalcTablesChanged
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CalcTablesChanged
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTableRowsChanged
  commentId: E:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CalcTableRowsChanged
  id: CalcTableRowsChanged
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CalcTableRowsChanged
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalcTableRowsChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalcTableRowsChanged
  type: Event
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CalcTableRowsChanged
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 15
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  example: []
  syntax:
    content: public event EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>> CalcTableRowsChanged
    return:
      type: System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}}
    content.vb: Public Event CalcTableRowsChanged As EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
  implements:
  - ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTableRowsChanged
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CalcTableRowsChanged
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CalcTableRowsChanged
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor
  id: '#ctor'
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CalculationRepositoryBase()
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalculationRepositoryBase()
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalculationRepositoryBase()
  type: Constructor
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 18
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: protected CalculationRepositoryBase()
    content.vb: Protected Sub New()
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).New()
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).New()
  name.vb: New()
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow})
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow})
  id: OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow})
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: OnCalcTableRowsChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTableRowsChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OnCalcTableRowsChanged
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 26
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: protected void OnCalcTableRowsChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow> args)
    parameters:
    - id: args
      type: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}
    content.vb: Protected Sub OnCalcTableRowsChanged(args As RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTableRowsChanged(RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTableRowsChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow))
  name.vb: OnCalcTableRowsChanged(RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable})
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable})
  id: OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable})
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: OnCalcTablesChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTablesChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable>)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OnCalcTablesChanged
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 31
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: protected void OnCalcTablesChanged(RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable> args)
    parameters:
    - id: args
      type: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}
    content.vb: Protected Sub OnCalcTablesChanged(args As RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTablesChanged(RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTablesChanged(ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable))
  name.vb: OnCalcTablesChanged(RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync
  id: GetCalcTablesAsync
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTablesAsync()
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTablesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 36
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTable[]> GetCalcTablesAsync()
    return:
      type: System.Threading.Tasks.Task{{TCalcTable}[]}
    content.vb: Public MustOverride Function GetCalcTablesAsync() As Task(Of TCalcTable())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync()
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync()
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync
  id: GetCalcTableTypesAsync
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableTypesAsync()
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableTypesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableTypesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableTypesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 37
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableType[]> GetCalcTableTypesAsync()
    return:
      type: System.Threading.Tasks.Task{{TCalcTableType}[]}
    content.vb: Public MustOverride Function GetCalcTableTypesAsync() As Task(Of TCalcTableType())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableTypesAsync()
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableTypesAsync()
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync(`1)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync(`1)
  id: GetCalcTablesAsync(`1)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTablesAsync(TCalcTableType)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync(TCalcTableType)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync(TCalcTableType)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTablesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 38
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTable[]> GetCalcTablesAsync(TCalcTableType calcTableType)
    parameters:
    - id: calcTableType
      type: '{TCalcTableType}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTable}[]}
    content.vb: Public MustOverride Function GetCalcTablesAsync(calcTableType As TCalcTableType) As Task(Of TCalcTable())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync(TCalcTableType)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync(TCalcTableType)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`1)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`1)
  id: GetCalcTableRowsAsync(`1)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowsAsync(TCalcTableType)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TCalcTableType)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TCalcTableType)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 39
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableRow[]> GetCalcTableRowsAsync(TCalcTableType calcTableType)
    parameters:
    - id: calcTableType
      type: '{TCalcTableType}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTableRow}[]}
    content.vb: Public MustOverride Function GetCalcTableRowsAsync(calcTableType As TCalcTableType) As Task(Of TCalcTableRow())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TCalcTableType)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TCalcTableType)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync(`0)
  id: GetCalcTableAsync(`0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableAsync(TObjectId)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableAsync(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableAsync(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 40
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTable?> GetCalcTableAsync(TObjectId id)
    parameters:
    - id: id
      type: '{TObjectId}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTable}}
    content.vb: Public MustOverride Function GetCalcTableAsync(id As TObjectId) As Task(Of TCalcTable)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableAsync(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableAsync(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync(`1,`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync(`1,`0)
  id: GetCalcTableRowAsync(`1,`0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowAsync(TCalcTableType, TObjectId)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync(TCalcTableType, TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync(TCalcTableType, TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 41
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableRow?> GetCalcTableRowAsync(TCalcTableType type, TObjectId id)
    parameters:
    - id: type
      type: '{TCalcTableType}'
    - id: id
      type: '{TObjectId}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTableRow}}
    content.vb: Public MustOverride Function GetCalcTableRowAsync(type As TCalcTableType, id As TObjectId) As Task(Of TCalcTableRow)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync(TCalcTableType, TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync(TCalcTableType, TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`2)
  id: GetCalcTableRowsAsync(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowsAsync(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 42
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableRow[]> GetCalcTableRowsAsync(TCalcTable calcTable)
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTableRow}[]}
    content.vb: Public MustOverride Function GetCalcTableRowsAsync(calcTable As TCalcTable) As Task(Of TCalcTableRow())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync(`0)
  id: GetCalcTableRowsAsync(`0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowsAsync(TObjectId)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 43
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableRow[]> GetCalcTableRowsAsync(TObjectId calcTableId)
    parameters:
    - id: calcTableId
      type: '{TObjectId}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTableRow}[]}
    content.vb: Public MustOverride Function GetCalcTableRowsAsync(calcTableId As TObjectId) As Task(Of TCalcTableRow())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync(`1,System.String)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync(`1,System.String)
  id: CreateCalcTableAsync(`1,System.String)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CreateCalcTableAsync(TCalcTableType, string)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableAsync(TCalcTableType, string)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableAsync(TCalcTableType, string)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCalcTableAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 44
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTable> CreateCalcTableAsync(TCalcTableType type, string name)
    parameters:
    - id: type
      type: '{TCalcTableType}'
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{{TCalcTable}}
    content.vb: Public MustOverride Function CreateCalcTableAsync(type As TCalcTableType, name As String) As Task(Of TCalcTable)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableAsync(TCalcTableType, String)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableAsync(TCalcTableType, String)
  name.vb: CreateCalcTableAsync(TCalcTableType, String)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync(`2)
  id: InsertCalcTableAsync(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: InsertCalcTableAsync(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableAsync(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableAsync(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCalcTableAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 45
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task InsertCalcTableAsync(TCalcTable calcTable)
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function InsertCalcTableAsync(calcTable As TCalcTable) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableAsync(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableAsync(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync(`2)
  id: RemoveCalcTableAsync(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: RemoveCalcTableAsync(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableAsync(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableAsync(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveCalcTableAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 46
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task RemoveCalcTableAsync(TCalcTable calcTable)
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function RemoveCalcTableAsync(calcTable As TCalcTable) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableAsync(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableAsync(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync(`2)
  id: CreateCalcTableRowAsync(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CreateCalcTableRowAsync(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 47
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task<TCalcTableRow> CreateCalcTableRowAsync(TCalcTable calcTable)
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    return:
      type: System.Threading.Tasks.Task{{TCalcTableRow}}
    content.vb: Public MustOverride Function CreateCalcTableRowAsync(calcTable As TCalcTable) As Task(Of TCalcTableRow)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`2,`3)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`2,`3)
  id: InsertCalcTableRowAsync(`2,`3)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: InsertCalcTableRowAsync(TCalcTable, TCalcTableRow)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync(TCalcTable, TCalcTableRow)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync(TCalcTable, TCalcTableRow)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 48
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task InsertCalcTableRowAsync(TCalcTable calcTable, TCalcTableRow row)
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    - id: row
      type: '{TCalcTableRow}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function InsertCalcTableRowAsync(calcTable As TCalcTable, row As TCalcTableRow) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(TCalcTable, TCalcTableRow)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(TCalcTable, TCalcTableRow)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync(`3)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync(`3)
  id: RemoveCalcTableRowAsync(`3)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: RemoveCalcTableRowAsync(TCalcTableRow)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync(TCalcTableRow)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync(TCalcTableRow)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 49
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task RemoveCalcTableRowAsync(TCalcTableRow calcTableRow)
    parameters:
    - id: calcTableRow
      type: '{TCalcTableRow}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function RemoveCalcTableRowAsync(calcTableRow As TCalcTableRow) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync(TCalcTableRow)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync(TCalcTableRow)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`3)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync(`3)
  id: InsertCalcTableRowAsync(`3)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: InsertCalcTableRowAsync(TCalcTableRow)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync(TCalcTableRow)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync(TCalcTableRow)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 51
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task InsertCalcTableRowAsync(TCalcTableRow row)
    parameters:
    - id: row
      type: '{TCalcTableRow}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function InsertCalcTableRowAsync(row As TCalcTableRow) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(TCalcTableRow)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(TCalcTableRow)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(``0)
  id: InsertCalcTableRowAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: InsertCalcTableRowAsync<T>(T)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 52
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task InsertCalcTableRowAsync<T>(T row) where T : TCalcTableRow'
    parameters:
    - id: row
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function InsertCalcTableRowAsync(Of T As TCalcTableRow)(row As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(Of T)(T)
  name.vb: InsertCalcTableRowAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync``1(`0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync``1(`0)
  id: GetCalcTableRowAsync``1(`0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowAsync<T>(TObjectId)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync<T>(TObjectId)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync<T>(TObjectId)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 54
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task<T?> GetCalcTableRowAsync<T>(TObjectId id) where T : class, TCalcTableRow'
    parameters:
    - id: id
      type: '{TObjectId}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public MustOverride Function GetCalcTableRowAsync(Of T As {Class, TCalcTableRow})(id As TObjectId) As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync(Of T)(TObjectId)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync(Of T)(TObjectId)
  name.vb: GetCalcTableRowAsync(Of T)(TObjectId)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1
  id: GetCalcTableRowsAsync``1
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowsAsync<T>()
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync<T>()
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync<T>()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 55
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task<T[]> GetCalcTableRowsAsync<T>() where T : class, TCalcTableRow'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}[]}
    content.vb: Public MustOverride Function GetCalcTableRowsAsync(Of T As {Class, TCalcTableRow})() As Task(Of T())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(Of T)()
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(Of T)()
  name.vb: GetCalcTableRowsAsync(Of T)()
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync``1(`2)
  id: GetCalcTableRowsAsync``1(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: GetCalcTableRowsAsync<T>(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync<T>(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync<T>(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetCalcTableRowsAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 56
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task<T[]> GetCalcTableRowsAsync<T>(TCalcTable calcTable) where T : class, TCalcTableRow'
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}[]}
    content.vb: Public MustOverride Function GetCalcTableRowsAsync(Of T As {Class, TCalcTableRow})(calcTable As TCalcTable) As Task(Of T())
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(Of T)(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync(Of T)(TCalcTable)
  name.vb: GetCalcTableRowsAsync(Of T)(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync``1(`2)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync``1(`2)
  id: CreateCalcTableRowAsync``1(`2)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: CreateCalcTableRowAsync<T>(TCalcTable)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync<T>(TCalcTable)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync<T>(TCalcTable)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CreateCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 57
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task<T> CreateCalcTableRowAsync<T>(TCalcTable calcTable) where T : class, TCalcTableRow'
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public MustOverride Function CreateCalcTableRowAsync(Of T As {Class, TCalcTableRow})(calcTable As TCalcTable) As Task(Of T)
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync(Of T)(TCalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync(Of T)(TCalcTable)
  name.vb: CreateCalcTableRowAsync(Of T)(TCalcTable)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(`2,``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync``1(`2,``0)
  id: InsertCalcTableRowAsync``1(`2,``0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: InsertCalcTableRowAsync<T>(TCalcTable, T)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync<T>(TCalcTable, T)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync<T>(TCalcTable, T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: InsertCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 58
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task InsertCalcTableRowAsync<T>(TCalcTable calcTable, T row) where T : class, TCalcTableRow'
    parameters:
    - id: calcTable
      type: '{TCalcTable}'
    - id: row
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function InsertCalcTableRowAsync(Of T As {Class, TCalcTableRow})(calcTable As TCalcTable, row As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(Of T)(TCalcTable, T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync(Of T)(TCalcTable, T)
  name.vb: InsertCalcTableRowAsync(Of T)(TCalcTable, T)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync``1(``0)
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync``1(``0)
  id: RemoveCalcTableRowAsync``1(``0)
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: RemoveCalcTableRowAsync<T>(T)
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync<T>(T)
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync<T>(T)
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveCalcTableRowAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 59
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: 'public abstract Task RemoveCalcTableRowAsync<T>(T calcTableRow) where T : class, TCalcTableRow'
    parameters:
    - id: calcTableRow
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function RemoveCalcTableRowAsync(Of T As {Class, TCalcTableRow})(calcTableRow As T) As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync(Of T)(T)
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync(Of T)(T)
  name.vb: RemoveCalcTableRowAsync(Of T)(T)
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync
  commentId: M:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync
  id: SaveChangesAsync
  parent: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.SaveChangesAsync()
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SaveChangesAsync
    path: ../ParmaGIS master/common/modules/ParmaGIS.Modules.Data/Space/Calculation/CalculationRepositoryBase.cs
    startLine: 61
  assemblies:
  - ParmaGIS.Modules.Data
  namespace: ParmaGIS.Modules.Data.Space.Calculation
  syntax:
    content: public abstract Task SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function SaveChangesAsync() As Task
  overload: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync*
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).SaveChangesAsync()
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).SaveChangesAsync()
references:
- uid: ParmaGIS.Modules.Data.Space.Calculation
  commentId: N:ParmaGIS.Modules.Data.Space.Calculation
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space.Calculation
  nameWithType: ParmaGIS.Modules.Data.Space.Calculation
  fullName: ParmaGIS.Modules.Data.Space.Calculation
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Data.Space.Calculation.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space.Calculation
    name: Calculation
    href: ParmaGIS.Modules.Data.Space.Calculation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
  commentId: T:ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
  parent: ParmaGIS.Modules.Data.Space.Calculation
  href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  name: ICalculationRepository
  nameWithType: ICalculationRepository
  fullName: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTablesChanged
  commentId: E:ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTablesChanged
  parent: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
  href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html#ParmaGIS_Modules_Data_Space_Calculation_ICalculationRepository_CalcTablesChanged
  name: CalcTablesChanged
  nameWithType: ICalculationRepository.CalcTablesChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTablesChanged
- uid: System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}}
  commentId: T:System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>>
  nameWithType: EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>>
  fullName: System.EventHandler<ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable>>
  nameWithType.vb: EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
  fullName.vb: System.EventHandler(Of ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable))
  name.vb: EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable
    name: ICalcTable
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable
    name: ICalcTable
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable.html
  - name: )
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTableRowsChanged
  commentId: E:ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTableRowsChanged
  parent: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
  href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html#ParmaGIS_Modules_Data_Space_Calculation_ICalculationRepository_CalcTableRowsChanged
  name: CalcTableRowsChanged
  nameWithType: ICalculationRepository.CalcTableRowsChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.CalcTableRowsChanged
- uid: System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}}
  commentId: T:System.EventHandler{ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>>
  nameWithType: EventHandler<RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>>
  fullName: System.EventHandler<ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow>>
  nameWithType.vb: EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
  fullName.vb: System.EventHandler(Of ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow))
  name.vb: EventHandler(Of RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow
    name: ICalcTableRow
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow
    name: ICalcTableRow
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow.html
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.#ctor
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4__ctor
  name: CalculationRepositoryBase
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalculationRepositoryBase
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CalculationRepositoryBase
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).New
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).New
  name.vb: New
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTableRowsChanged
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_OnCalcTableRowsChanged_ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_ParmaGIS_Modules_Data_Space_Calculation_ICalculationRepository_ParmaGIS_Modules_Data_Space_Calculation_ICalcTableRow__
  name: OnCalcTableRowsChanged
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTableRowsChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTableRowsChanged
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTableRowsChanged
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTableRowsChanged
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}
  commentId: T:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow}
  parent: ParmaGIS.Modules.Data.Space
  definition: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  name: RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>
  nameWithType: RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTableRow>
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow>
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow)
  name.vb: RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTableRow)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow
    name: ICalcTableRow
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow.html
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow
    name: ICalcTableRow
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTableRow.html
  - name: )
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  commentId: T:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  parent: ParmaGIS.Modules.Data.Space
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  name: RepositoryItemsChangedEventArgs<TRep, TItem>
  nameWithType: RepositoryItemsChangedEventArgs<TRep, TItem>
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<TRep, TItem>
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of TRep, TItem)
  name.vb: RepositoryItemsChangedEventArgs(Of TRep, TItem)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - name: TRep
  - name: ','
  - name: " "
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRep
  - name: ','
  - name: " "
  - name: TItem
  - name: )
- uid: ParmaGIS.Modules.Data.Space
  commentId: N:ParmaGIS.Modules.Data.Space
  href: ParmaGIS.html
  name: ParmaGIS.Modules.Data.Space
  nameWithType: ParmaGIS.Modules.Data.Space
  fullName: ParmaGIS.Modules.Data.Space
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.Modules
    name: Modules
    href: ParmaGIS.Modules.html
  - name: .
  - uid: ParmaGIS.Modules.Data
    name: Data
    href: ParmaGIS.Modules.Data.html
  - name: .
  - uid: ParmaGIS.Modules.Data.Space
    name: Space
    href: ParmaGIS.Modules.Data.Space.html
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.OnCalcTablesChanged
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_OnCalcTablesChanged_ParmaGIS_Modules_Data_Space_RepositoryItemsChangedEventArgs_ParmaGIS_Modules_Data_Space_Calculation_ICalculationRepository_ParmaGIS_Modules_Data_Space_Calculation_ICalcTable__
  name: OnCalcTablesChanged
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTablesChanged
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.OnCalcTablesChanged
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTablesChanged
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).OnCalcTablesChanged
- uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}
  commentId: T:ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs{ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository,ParmaGIS.Modules.Data.Space.Calculation.ICalcTable}
  parent: ParmaGIS.Modules.Data.Space
  definition: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
  href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  name: RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>
  nameWithType: RepositoryItemsChangedEventArgs<ICalculationRepository, ICalcTable>
  fullName: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs<ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable>
  nameWithType.vb: RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable)
  fullName.vb: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs(Of ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository, ParmaGIS.Modules.Data.Space.Calculation.ICalcTable)
  name.vb: RepositoryItemsChangedEventArgs(Of ICalculationRepository, ICalcTable)
  spec.csharp:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: <
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable
    name: ICalcTable
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable.html
  - name: '>'
  spec.vb:
  - uid: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs`2
    name: RepositoryItemsChangedEventArgs
    href: ParmaGIS.Modules.Data.Space.RepositoryItemsChangedEventArgs-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository
    name: ICalculationRepository
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalculationRepository.html
  - name: ','
  - name: " "
  - uid: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable
    name: ICalcTable
    href: ParmaGIS.Modules.Data.Space.Calculation.ICalcTable.html
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTablesAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_GetCalcTablesAsync
  name: GetCalcTablesAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTablesAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTablesAsync
- uid: System.Threading.Tasks.Task{{TCalcTable}[]}
  commentId: T:System.Threading.Tasks.Task{`2[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TCalcTable[]>
  nameWithType: Task<TCalcTable[]>
  fullName: System.Threading.Tasks.Task<TCalcTable[]>
  nameWithType.vb: Task(Of TCalcTable())
  fullName.vb: System.Threading.Tasks.Task(Of TCalcTable())
  name.vb: Task(Of TCalcTable())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TCalcTable
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TCalcTable
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableTypesAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_GetCalcTableTypesAsync
  name: GetCalcTableTypesAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableTypesAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableTypesAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableTypesAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableTypesAsync
- uid: System.Threading.Tasks.Task{{TCalcTableType}[]}
  commentId: T:System.Threading.Tasks.Task{`1[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TCalcTableType[]>
  nameWithType: Task<TCalcTableType[]>
  fullName: System.Threading.Tasks.Task<TCalcTableType[]>
  nameWithType.vb: Task(Of TCalcTableType())
  fullName.vb: System.Threading.Tasks.Task(Of TCalcTableType())
  name.vb: Task(Of TCalcTableType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TCalcTableType
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TCalcTableType
  - name: (
  - name: )
  - name: )
- uid: '{TCalcTableType}'
  commentId: '!:TCalcTableType'
  definition: TCalcTableType
  name: TCalcTableType
  nameWithType: TCalcTableType
  fullName: TCalcTableType
- uid: TCalcTableType
  name: TCalcTableType
  nameWithType: TCalcTableType
  fullName: TCalcTableType
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowsAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_GetCalcTableRowsAsync__1_
  name: GetCalcTableRowsAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowsAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowsAsync
- uid: System.Threading.Tasks.Task{{TCalcTableRow}[]}
  commentId: T:System.Threading.Tasks.Task{`3[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TCalcTableRow[]>
  nameWithType: Task<TCalcTableRow[]>
  fullName: System.Threading.Tasks.Task<TCalcTableRow[]>
  nameWithType.vb: Task(Of TCalcTableRow())
  fullName.vb: System.Threading.Tasks.Task(Of TCalcTableRow())
  name.vb: Task(Of TCalcTableRow())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TCalcTableRow
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TCalcTableRow
  - name: (
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_GetCalcTableAsync__0_
  name: GetCalcTableAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableAsync
- uid: '{TObjectId}'
  commentId: '!:TObjectId'
  definition: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: System.Threading.Tasks.Task{{TCalcTable}}
  commentId: T:System.Threading.Tasks.Task{`2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TCalcTable>
  nameWithType: Task<TCalcTable>
  fullName: System.Threading.Tasks.Task<TCalcTable>
  nameWithType.vb: Task(Of TCalcTable)
  fullName.vb: System.Threading.Tasks.Task(Of TCalcTable)
  name.vb: Task(Of TCalcTable)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TCalcTable
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TCalcTable
  - name: )
- uid: TObjectId
  name: TObjectId
  nameWithType: TObjectId
  fullName: TObjectId
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.GetCalcTableRowAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_GetCalcTableRowAsync__1__0_
  name: GetCalcTableRowAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.GetCalcTableRowAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).GetCalcTableRowAsync
- uid: System.Threading.Tasks.Task{{TCalcTableRow}}
  commentId: T:System.Threading.Tasks.Task{`3}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TCalcTableRow>
  nameWithType: Task<TCalcTableRow>
  fullName: System.Threading.Tasks.Task<TCalcTableRow>
  nameWithType.vb: Task(Of TCalcTableRow)
  fullName.vb: System.Threading.Tasks.Task(Of TCalcTableRow)
  name.vb: Task(Of TCalcTableRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TCalcTableRow
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TCalcTableRow
  - name: )
- uid: '{TCalcTable}'
  commentId: '!:TCalcTable'
  definition: TCalcTable
  name: TCalcTable
  nameWithType: TCalcTable
  fullName: TCalcTable
- uid: TCalcTable
  name: TCalcTable
  nameWithType: TCalcTable
  fullName: TCalcTable
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_CreateCalcTableAsync__1_System_String_
  name: CreateCalcTableAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_InsertCalcTableAsync__2_
  name: InsertCalcTableAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_RemoveCalcTableAsync__2_
  name: RemoveCalcTableAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableAsync
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.CreateCalcTableRowAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_CreateCalcTableRowAsync__2_
  name: CreateCalcTableRowAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.CreateCalcTableRowAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).CreateCalcTableRowAsync
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.InsertCalcTableRowAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_InsertCalcTableRowAsync__2__3_
  name: InsertCalcTableRowAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.InsertCalcTableRowAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).InsertCalcTableRowAsync
- uid: '{TCalcTableRow}'
  commentId: '!:TCalcTableRow'
  definition: TCalcTableRow
  name: TCalcTableRow
  nameWithType: TCalcTableRow
  fullName: TCalcTableRow
- uid: TCalcTableRow
  name: TCalcTableRow
  nameWithType: TCalcTableRow
  fullName: TCalcTableRow
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.RemoveCalcTableRowAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_RemoveCalcTableRowAsync__3_
  name: RemoveCalcTableRowAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.RemoveCalcTableRowAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).RemoveCalcTableRowAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task{{T}[]}
  commentId: T:System.Threading.Tasks.Task{`0[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T[]>
  nameWithType: Task<T[]>
  fullName: System.Threading.Tasks.Task<T[]>
  nameWithType.vb: Task(Of T())
  fullName.vb: System.Threading.Tasks.Task(Of T())
  name.vb: Task(Of T())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync*
  commentId: Overload:ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase`4.SaveChangesAsync
  href: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase-4.html#ParmaGIS_Modules_Data_Space_Calculation_CalculationRepositoryBase_4_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.SaveChangesAsync
  fullName: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase<TObjectId, TCalcTableType, TCalcTable, TCalcTableRow>.SaveChangesAsync
  nameWithType.vb: CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).SaveChangesAsync
  fullName.vb: ParmaGIS.Modules.Data.Space.Calculation.CalculationRepositoryBase(Of TObjectId, TCalcTableType, TCalcTable, TCalcTableRow).SaveChangesAsync
