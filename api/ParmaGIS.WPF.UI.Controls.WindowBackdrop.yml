### YamlMime:ManagedReference
items:
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  commentId: T:ParmaGIS.WPF.UI.Controls.WindowBackdrop
  id: WindowBackdrop
  parent: ParmaGIS.WPF.UI.Controls
  children:
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.IntPtr,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.BackdropTypeProperty
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType(System.Windows.Window)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported(ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.IntPtr)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.Windows.Window)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground(System.Windows.Window)
  - ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  langs:
  - csharp
  - vb
  name: WindowBackdrop
  nameWithType: WindowBackdrop
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  type: Class
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: WindowBackdrop
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 42
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Applies the chosen backdrop effect to the selected window.
  example: []
  syntax:
    content: public static class WindowBackdrop
    content.vb: Public Module WindowBackdrop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.BackdropTypeProperty
  commentId: F:ParmaGIS.WPF.UI.Controls.WindowBackdrop.BackdropTypeProperty
  id: BackdropTypeProperty
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: BackdropTypeProperty
  nameWithType: WindowBackdrop.BackdropTypeProperty
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.BackdropTypeProperty
  type: Field
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: BackdropTypeProperty
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 44
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  syntax:
    content: public static readonly DependencyProperty BackdropTypeProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly BackdropTypeProperty As DependencyProperty
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  id: SetBackdropType(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: SetBackdropType(Window, WindowBackdropType)
  nameWithType: WindowBackdrop.SetBackdropType(Window, WindowBackdropType)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType(System.Windows.Window, ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SetBackdropType
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 48
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  syntax:
    content: >-
      [AttachedPropertyBrowsableForType(typeof(Window))]

      public static void SetBackdropType(Window element, WindowBackdropType value)
    parameters:
    - id: element
      type: System.Windows.Window
    - id: value
      type: ParmaGIS.WPF.UI.Controls.WindowBackdropType
    content.vb: >-
      <AttachedPropertyBrowsableForType(GetType(Window))>

      Public Shared Sub SetBackdropType(element As Window, value As WindowBackdropType)
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType*
  attributes:
  - type: System.Windows.AttachedPropertyBrowsableForTypeAttribute
    ctor: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Windows.Window
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType(System.Windows.Window)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType(System.Windows.Window)
  id: GetBackdropType(System.Windows.Window)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: GetBackdropType(Window)
  nameWithType: WindowBackdrop.GetBackdropType(Window)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType(System.Windows.Window)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: GetBackdropType
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 57
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  syntax:
    content: >-
      [AttachedPropertyBrowsableForType(typeof(Window))]

      public static WindowBackdropType GetBackdropType(Window element)
    parameters:
    - id: element
      type: System.Windows.Window
    return:
      type: ParmaGIS.WPF.UI.Controls.WindowBackdropType
    content.vb: >-
      <AttachedPropertyBrowsableForType(GetType(Window))>

      Public Shared Function GetBackdropType(element As Window) As WindowBackdropType
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType*
  attributes:
  - type: System.Windows.AttachedPropertyBrowsableForTypeAttribute
    ctor: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Windows.Window
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported(ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported(ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  id: IsSupported(ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: IsSupported(WindowBackdropType)
  nameWithType: WindowBackdrop.IsSupported(WindowBackdropType)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported(ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsSupported
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 67
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Checks whether the selected backdrop type is supported on current platform.
  example: []
  syntax:
    content: public static bool IsSupported(WindowBackdropType backdropType)
    parameters:
    - id: backdropType
      type: ParmaGIS.WPF.UI.Controls.WindowBackdropType
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the selected backdrop type is supported on current platform.
    content.vb: Public Shared Function IsSupported(backdropType As WindowBackdropType) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported*
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  id: ApplyBackdrop(System.Windows.Window,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: ApplyBackdrop(Window, WindowBackdropType)
  nameWithType: WindowBackdrop.ApplyBackdrop(Window, WindowBackdropType)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.Windows.Window, ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApplyBackdrop
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 85
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Applies backdrop effect to the selected <xref href="System.Windows.Window" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool ApplyBackdrop(Window window, WindowBackdropType backdropType)
    parameters:
    - id: window
      type: System.Windows.Window
      description: Selected window.
    - id: backdropType
      type: ParmaGIS.WPF.UI.Controls.WindowBackdropType
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the operation was successfull, otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function ApplyBackdrop(window As Window, backdropType As WindowBackdropType) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop*
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.IntPtr,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.IntPtr,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  id: ApplyBackdrop(System.IntPtr,ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: ApplyBackdrop(nint, WindowBackdropType)
  nameWithType: WindowBackdrop.ApplyBackdrop(nint, WindowBackdropType)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(nint, ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApplyBackdrop
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 125
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Applies backdrop effect to the selected handle.
  example: []
  syntax:
    content: public static bool ApplyBackdrop(nint hWnd, WindowBackdropType backdropType)
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: Window handle.
    - id: backdropType
      type: ParmaGIS.WPF.UI.Controls.WindowBackdropType
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the operation was successfull, otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function ApplyBackdrop(hWnd As IntPtr, backdropType As WindowBackdropType) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop*
  nameWithType.vb: WindowBackdrop.ApplyBackdrop(IntPtr, WindowBackdropType)
  fullName.vb: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop(System.IntPtr, ParmaGIS.WPF.UI.Controls.WindowBackdropType)
  name.vb: ApplyBackdrop(IntPtr, WindowBackdropType)
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.Windows.Window)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.Windows.Window)
  id: RemoveBackdrop(System.Windows.Window)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: RemoveBackdrop(Window?)
  nameWithType: WindowBackdrop.RemoveBackdrop(Window?)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.Windows.Window?)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveBackdrop
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 181
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Tries to remove backdrop effects if they have been applied to the <xref href="ParmaGIS.WPF.UI.Controls.Window" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool RemoveBackdrop(Window? window)
    parameters:
    - id: window
      type: System.Windows.Window
      description: The window from which the effect should be removed.
    return:
      type: System.Boolean
    content.vb: Public Shared Function RemoveBackdrop(window As Window) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop*
  nameWithType.vb: WindowBackdrop.RemoveBackdrop(Window)
  fullName.vb: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.Windows.Window)
  name.vb: RemoveBackdrop(Window)
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.IntPtr)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.IntPtr)
  id: RemoveBackdrop(System.IntPtr)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: RemoveBackdrop(nint)
  nameWithType: WindowBackdrop.RemoveBackdrop(nint)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(nint)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveBackdrop
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 197
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Tries to remove all effects if they have been applied to the <code>hWnd</code>.
  example: []
  syntax:
    content: public static bool RemoveBackdrop(nint hWnd)
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: Pointer to the window handle.
    return:
      type: System.Boolean
    content.vb: Public Shared Function RemoveBackdrop(hWnd As IntPtr) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop*
  nameWithType.vb: WindowBackdrop.RemoveBackdrop(IntPtr)
  fullName.vb: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop(System.IntPtr)
  name.vb: RemoveBackdrop(IntPtr)
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground(System.Windows.Window)
  commentId: M:ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground(System.Windows.Window)
  id: RemoveBackground(System.Windows.Window)
  parent: ParmaGIS.WPF.UI.Controls.WindowBackdrop
  langs:
  - csharp
  - vb
  name: RemoveBackground(Window?)
  nameWithType: WindowBackdrop.RemoveBackground(Window?)
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground(System.Windows.Window?)
  type: Method
  source:
    remote:
      path: platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
      branch: origin/main
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RemoveBackground
    path: ../ParmaGIS master/platforms/wpf/src/ParmaGIS.WPF.UI/Controls/WindowBackdropType.cs
    startLine: 241
  assemblies:
  - ParmaGIS.WPF.UI
  namespace: ParmaGIS.WPF.UI.Controls
  summary: Tries to remove background from <xref href="ParmaGIS.WPF.UI.Controls.Window" data-throw-if-not-resolved="false"></xref> and it's composition area.
  example: []
  syntax:
    content: public static bool RemoveBackground(Window? window)
    parameters:
    - id: window
      type: System.Windows.Window
      description: Window to manipulate.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if operation was successful.
    content.vb: Public Shared Function RemoveBackground(window As Window) As Boolean
  overload: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground*
  nameWithType.vb: WindowBackdrop.RemoveBackground(Window)
  fullName.vb: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground(System.Windows.Window)
  name.vb: RemoveBackground(Window)
references:
- uid: ParmaGIS.WPF.UI.Controls
  commentId: N:ParmaGIS.WPF.UI.Controls
  href: ParmaGIS.html
  name: ParmaGIS.WPF.UI.Controls
  nameWithType: ParmaGIS.WPF.UI.Controls
  fullName: ParmaGIS.WPF.UI.Controls
  spec.csharp:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Controls
    name: Controls
    href: ParmaGIS.WPF.UI.Controls.html
  spec.vb:
  - uid: ParmaGIS
    name: ParmaGIS
    href: ParmaGIS.html
  - name: .
  - uid: ParmaGIS.WPF
    name: WPF
    href: ParmaGIS.WPF.html
  - name: .
  - uid: ParmaGIS.WPF.UI
    name: UI
    href: ParmaGIS.WPF.UI.html
  - name: .
  - uid: ParmaGIS.WPF.UI.Controls
    name: Controls
    href: ParmaGIS.WPF.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.dependencyproperty
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_SetBackdropType_System_Windows_Window_ParmaGIS_WPF_UI_Controls_WindowBackdropType_
  name: SetBackdropType
  nameWithType: WindowBackdrop.SetBackdropType
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.SetBackdropType
- uid: System.Windows.Window
  commentId: T:System.Windows.Window
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.window
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdropType
  commentId: T:ParmaGIS.WPF.UI.Controls.WindowBackdropType
  parent: ParmaGIS.WPF.UI.Controls
  href: ParmaGIS.WPF.UI.Controls.WindowBackdropType.html
  name: WindowBackdropType
  nameWithType: WindowBackdropType
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdropType
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_GetBackdropType_System_Windows_Window_
  name: GetBackdropType
  nameWithType: WindowBackdrop.GetBackdropType
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.GetBackdropType
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_IsSupported_ParmaGIS_WPF_UI_Controls_WindowBackdropType_
  name: IsSupported
  nameWithType: WindowBackdrop.IsSupported
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.IsSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_ApplyBackdrop_System_Windows_Window_ParmaGIS_WPF_UI_Controls_WindowBackdropType_
  name: ApplyBackdrop
  nameWithType: WindowBackdrop.ApplyBackdrop
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.ApplyBackdrop
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: ParmaGIS.WPF.UI.Controls.Window
  commentId: T:ParmaGIS.WPF.UI.Controls.Window
  href: ParmaGIS.WPF.UI.Controls.Window.html
  name: Window
  nameWithType: Window
  fullName: ParmaGIS.WPF.UI.Controls.Window
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_RemoveBackdrop_System_Windows_Window_
  name: RemoveBackdrop
  nameWithType: WindowBackdrop.RemoveBackdrop
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackdrop
- uid: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground*
  commentId: Overload:ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground
  href: ParmaGIS.WPF.UI.Controls.WindowBackdrop.html#ParmaGIS_WPF_UI_Controls_WindowBackdrop_RemoveBackground_System_Windows_Window_
  name: RemoveBackground
  nameWithType: WindowBackdrop.RemoveBackground
  fullName: ParmaGIS.WPF.UI.Controls.WindowBackdrop.RemoveBackground
