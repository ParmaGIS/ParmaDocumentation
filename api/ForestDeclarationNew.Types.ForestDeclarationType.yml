### YamlMime:ManagedReference
items:
- uid: ForestDeclarationNew.Types.ForestDeclarationType
  commentId: T:ForestDeclarationNew.Types.ForestDeclarationType
  id: ForestDeclarationType
  parent: ForestDeclarationNew.Types
  children:
  - ForestDeclarationNew.Types.ForestDeclarationType.#ctor
  - ForestDeclarationNew.Types.ForestDeclarationType.Attachments
  - ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.Date
  - ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
  - ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
  - ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.Header
  - ForestDeclarationNew.Types.ForestDeclarationType.Id
  - ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
  - ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.Number
  - ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
  - ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
  - ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
  - ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
  - ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
  - ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
  langs:
  - csharp
  - vb
  name: ForestDeclarationType
  nameWithType: ForestDeclarationType
  fullName: ForestDeclarationNew.Types.ForestDeclarationType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ForestDeclarationType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 20
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Описание лесной декларации</p>

    <p>Лесная декларация</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ForestDeclarationType
    content.vb: >-
      <Serializable>

      Public Class ForestDeclarationType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Id
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.Id
  id: Id
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ForestDeclarationType.Id
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Id
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Id
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 36
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Идентификатор Лесной декларации</p>

    <p>Тип Строка длиной от 1 до 1000 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 1000.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(1000)]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(1000)>

      Public Property Id As String
  overload: ForestDeclarationNew.Types.ForestDeclarationType.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
- uid: ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
  id: ServiceInfo
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: ServiceInfo
  nameWithType: ForestDeclarationType.ServiceInfo
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ServiceInfo
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 45
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Служебная информация услуги</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ServiceInfoType ServiceInfo { get; set; }
    parameters: []
    return:
      type: Common.CommonReport.Types.ServiceInfoType
    content.vb: >-
      <Required>

      Public Property ServiceInfo As ServiceInfoType
  overload: ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Number
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.Number
  id: Number
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: ForestDeclarationType.Number
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Number
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Number
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 56
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Номер документа</p>

    <p>Тип Строка длиной от 1 до 128 символов</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 128.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(128)]

      [Required]

      public string Number { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(128)>

      <Required>

      Public Property Number As String
  overload: ForestDeclarationNew.Types.ForestDeclarationType.Number*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 128
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Date
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.Date
  id: Date
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: ForestDeclarationType.Date
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Date
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Date
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 69
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Дата документа</p>

    <p>Тип Дата в формате ГГГГ-ММ-ДД (2100-01-01 - 1900-01-01)</p>

    <p>Minimum inclusive value: 1900-01-01.</p>

    <p>Maximum inclusive value: 2100-01-01.</p>
  example: []
  syntax:
    content: >-
      [Range(typeof(DateTime), "1900-01-01", "2100-01-01")]

      [Required]

      public DateTime Date { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Range(GetType(Date), "1900-01-01", "2100-01-01")>

      <Required>

      Public Property [Date] As Date
  overload: ForestDeclarationNew.Types.ForestDeclarationType.Date*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)
    arguments:
    - type: System.Type
      value: System.DateTime
    - type: System.String
      value: 1900-01-01
    - type: System.String
      value: 2100-01-01
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Header
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.Header
  id: Header
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: ForestDeclarationType.Header
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Header
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Header
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 78
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Общие сведения о документе</p>
  example: []
  syntax:
    content: >-
      [Required]

      public ForestDeclarationTypeHeader Header { get; set; }
    parameters: []
    return:
      type: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
    content.vb: >-
      <Required>

      Public Property Header As ForestDeclarationTypeHeader
  overload: ForestDeclarationNew.Types.ForestDeclarationType.Header*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
  id: HarvestingWood
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: HarvestingWood
  nameWithType: ForestDeclarationType.HarvestingWood
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HarvestingWood
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 89
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Таблица «Объем использования лесов в целях заготовки древесины и (или) живицы»</p>
  example: []
  syntax:
    content: public Collection<HarvestingWoodRowType> HarvestingWood { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingWoodRowType}
    content.vb: Public Property HarvestingWood As Collection(Of HarvestingWoodRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
  id: HarvestingWoodSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: HarvestingWoodSpecified
  nameWithType: ForestDeclarationType.HarvestingWoodSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HarvestingWoodSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 107
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the HarvestingWood collection is empty.</p>
  example: []
  syntax:
    content: public bool HarvestingWoodSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HarvestingWoodSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.#ctor
  commentId: M:ForestDeclarationNew.Types.ForestDeclarationType.#ctor
  id: '#ctor'
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: ForestDeclarationType()
  nameWithType: ForestDeclarationType.ForestDeclarationType()
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.ForestDeclarationType()
  type: Constructor
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: .ctor
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 119
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Initializes a new instance of the <xref href="ForestDeclarationNew.Types.ForestDeclarationType" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public ForestDeclarationType()
    content.vb: Public Sub New()
  overload: ForestDeclarationNew.Types.ForestDeclarationType.#ctor*
  nameWithType.vb: ForestDeclarationType.New()
  fullName.vb: ForestDeclarationNew.Types.ForestDeclarationType.New()
  name.vb: New()
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
  id: HarvestingObject
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: HarvestingObject
  nameWithType: ForestDeclarationType.HarvestingObject
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HarvestingObject
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 137
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Таблица «Создание (снос) объектов лесной инфраструктуры»</p>
  example: []
  syntax:
    content: public Collection<HarvestingObjectRowType> HarvestingObject { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingObjectRowType}
    content.vb: Public Property HarvestingObject As Collection(Of HarvestingObjectRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
  id: HarvestingObjectSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: HarvestingObjectSpecified
  nameWithType: ForestDeclarationType.HarvestingObjectSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HarvestingObjectSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 155
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the HarvestingObject collection is empty.</p>
  example: []
  syntax:
    content: public bool HarvestingObjectSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HarvestingObjectSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
  id: OtherUsageTypes
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: OtherUsageTypes
  nameWithType: ForestDeclarationType.OtherUsageTypes
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OtherUsageTypes
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 171
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Таблица «Объем использования лесов в целях, не связанных с заготовкой древесины и
                           (или) живицы»</p>
  example: []
  syntax:
    content: public Collection<OtherUsageTypesRowType> OtherUsageTypes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageTypesRowType}
    content.vb: Public Property OtherUsageTypes As Collection(Of OtherUsageTypesRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
  id: OtherUsageTypesSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: OtherUsageTypesSpecified
  nameWithType: ForestDeclarationType.OtherUsageTypesSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OtherUsageTypesSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 190
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the OtherUsageTypes collection is empty.</p>
  example: []
  syntax:
    content: public bool OtherUsageTypesSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OtherUsageTypesSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
  id: OtherUsageObjects
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: OtherUsageObjects
  nameWithType: ForestDeclarationType.OtherUsageObjects
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OtherUsageObjects
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 206
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Таблица «Создание (снос) объектов лесной инфраструктуры, лесоперерабатывающей
                           инфраструктуры и объектов, не связанных с созданием лесной инфраструктуры»</p>
  example: []
  syntax:
    content: public Collection<OtherUsageObjectsRowType> OtherUsageObjects { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageObjectsRowType}
    content.vb: Public Property OtherUsageObjects As Collection(Of OtherUsageObjectsRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
  id: OtherUsageObjectsSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: OtherUsageObjectsSpecified
  nameWithType: ForestDeclarationType.OtherUsageObjectsSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OtherUsageObjectsSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 225
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the OtherUsageObjects collection is empty.</p>
  example: []
  syntax:
    content: public bool OtherUsageObjectsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OtherUsageObjectsSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
  id: SchemeHarvestingWood
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: SchemeHarvestingWood
  nameWithType: ForestDeclarationType.SchemeHarvestingWood
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SchemeHarvestingWood
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 241
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Таблица "Общая схема расположения мест проведения работ при использовании лесов в
                           целях заготовки древесины"</p>
  example: []
  syntax:
    content: public Collection<SchemeRowType> SchemeHarvestingWood { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.SchemeRowType}
    content.vb: Public Property SchemeHarvestingWood As Collection(Of SchemeRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
  id: SchemeHarvestingWoodSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: SchemeHarvestingWoodSpecified
  nameWithType: ForestDeclarationType.SchemeHarvestingWoodSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SchemeHarvestingWoodSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 260
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the SchemeHarvestingWood collection is empty.</p>
  example: []
  syntax:
    content: public bool SchemeHarvestingWoodSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SchemeHarvestingWoodSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
  id: SchemeObject
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: SchemeObject
  nameWithType: ForestDeclarationType.SchemeObject
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SchemeObject
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 276
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Таблица "Схемы размещения лесосеки, объекта лесной инфраструктуры, объекта
                           лесоперерабатывающей инфраструктуры и объекта, не связанного с созданием лесной инфраструктуры"</p>
  example: []
  syntax:
    content: public Collection<SchemeRowType> SchemeObject { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.SchemeRowType}
    content.vb: Public Property SchemeObject As Collection(Of SchemeRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
  id: SchemeObjectSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: SchemeObjectSpecified
  nameWithType: ForestDeclarationType.SchemeObjectSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SchemeObjectSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 296
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the SchemeObject collection is empty.</p>
  example: []
  syntax:
    content: public bool SchemeObjectSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SchemeObjectSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
  id: LocationInformation
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: LocationInformation
  nameWithType: ForestDeclarationType.LocationInformation
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: LocationInformation
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 312
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: >-
    <p>Таблица "Сведения о расположении лесосек, объектов, приведенных на схеме(ах)
                           размещения в приложении 4 к форме лесной декларации"</p>
  example: []
  syntax:
    content: public Collection<LocationInformationRowType> LocationInformation { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.LocationInformationRowType}
    content.vb: Public Property LocationInformation As Collection(Of LocationInformationRowType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
  id: LocationInformationSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: LocationInformationSpecified
  nameWithType: ForestDeclarationType.LocationInformationSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: LocationInformationSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 331
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the LocationInformation collection is empty.</p>
  example: []
  syntax:
    content: public bool LocationInformationSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LocationInformationSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Attachments
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.Attachments
  id: Attachments
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: Attachments
  nameWithType: ForestDeclarationType.Attachments
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Attachments
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Attachments
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 346
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Описание файлов вложений</p>
  example: []
  syntax:
    content: public Collection<AttachmentType> Attachments { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Common.Attachment.Types.AttachmentType}
    content.vb: Public Property Attachments As Collection(Of AttachmentType)
  overload: ForestDeclarationNew.Types.ForestDeclarationType.Attachments*
- uid: ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
  commentId: P:ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
  id: AttachmentsSpecified
  parent: ForestDeclarationNew.Types.ForestDeclarationType
  langs:
  - csharp
  - vb
  name: AttachmentsSpecified
  nameWithType: ForestDeclarationType.AttachmentsSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AttachmentsSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/ForestDeclaration.Types.cs
    startLine: 364
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: ForestDeclarationNew.Types
  summary: <p>Gets a value indicating whether the Attachments collection is empty.</p>
  example: []
  syntax:
    content: public bool AttachmentsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AttachmentsSpecified As Boolean
  overload: ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified*
references:
- uid: ForestDeclarationNew.Types
  commentId: N:ForestDeclarationNew.Types
  href: ForestDeclarationNew.html
  name: ForestDeclarationNew.Types
  nameWithType: ForestDeclarationNew.Types
  fullName: ForestDeclarationNew.Types
  spec.csharp:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
  spec.vb:
  - uid: ForestDeclarationNew
    name: ForestDeclarationNew
    href: ForestDeclarationNew.html
  - name: .
  - uid: ForestDeclarationNew.Types
    name: Types
    href: ForestDeclarationNew.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Id*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.Id
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_Id
  name: Id
  nameWithType: ForestDeclarationType.Id
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_ServiceInfo
  name: ServiceInfo
  nameWithType: ForestDeclarationType.ServiceInfo
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.ServiceInfo
- uid: Common.CommonReport.Types.ServiceInfoType
  commentId: T:Common.CommonReport.Types.ServiceInfoType
  parent: Common.CommonReport.Types
  href: Common.CommonReport.Types.ServiceInfoType.html
  name: ServiceInfoType
  nameWithType: ServiceInfoType
  fullName: Common.CommonReport.Types.ServiceInfoType
- uid: Common.CommonReport.Types
  commentId: N:Common.CommonReport.Types
  href: Common.html
  name: Common.CommonReport.Types
  nameWithType: Common.CommonReport.Types
  fullName: Common.CommonReport.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.CommonReport
    name: CommonReport
    href: Common.CommonReport.html
  - name: .
  - uid: Common.CommonReport.Types
    name: Types
    href: Common.CommonReport.Types.html
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Number*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.Number
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_Number
  name: Number
  nameWithType: ForestDeclarationType.Number
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Number
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Date*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.Date
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_Date
  name: Date
  nameWithType: ForestDeclarationType.Date
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Header*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.Header
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_Header
  name: Header
  nameWithType: ForestDeclarationType.Header
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Header
- uid: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  commentId: T:ForestDeclarationNew.Types.ForestDeclarationTypeHeader
  parent: ForestDeclarationNew.Types
  href: ForestDeclarationNew.Types.ForestDeclarationTypeHeader.html
  name: ForestDeclarationTypeHeader
  nameWithType: ForestDeclarationTypeHeader
  fullName: ForestDeclarationNew.Types.ForestDeclarationTypeHeader
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_HarvestingWood
  name: HarvestingWood
  nameWithType: ForestDeclarationType.HarvestingWood
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWood
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingWoodRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingWoodRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<HarvestingWoodRowType>
  nameWithType: Collection<HarvestingWoodRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.HarvestingWoodRowType>
  nameWithType.vb: Collection(Of HarvestingWoodRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.HarvestingWoodRowType)
  name.vb: Collection(Of HarvestingWoodRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.HarvestingWoodRowType
    name: HarvestingWoodRowType
    href: ForestDeclarationNew.Types.HarvestingWoodRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.HarvestingWoodRowType
    name: HarvestingWoodRowType
    href: ForestDeclarationNew.Types.HarvestingWoodRowType.html
  - name: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_HarvestingWoodSpecified
  name: HarvestingWoodSpecified
  nameWithType: ForestDeclarationType.HarvestingWoodSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingWoodSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ForestDeclarationNew.Types.ForestDeclarationType
  commentId: T:ForestDeclarationNew.Types.ForestDeclarationType
  href: ForestDeclarationNew.Types.ForestDeclarationType.html
  name: ForestDeclarationType
  nameWithType: ForestDeclarationType
  fullName: ForestDeclarationNew.Types.ForestDeclarationType
- uid: ForestDeclarationNew.Types.ForestDeclarationType.#ctor*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.#ctor
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType__ctor
  name: ForestDeclarationType
  nameWithType: ForestDeclarationType.ForestDeclarationType
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.ForestDeclarationType
  nameWithType.vb: ForestDeclarationType.New
  fullName.vb: ForestDeclarationNew.Types.ForestDeclarationType.New
  name.vb: New
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_HarvestingObject
  name: HarvestingObject
  nameWithType: ForestDeclarationType.HarvestingObject
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObject
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingObjectRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.HarvestingObjectRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<HarvestingObjectRowType>
  nameWithType: Collection<HarvestingObjectRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.HarvestingObjectRowType>
  nameWithType.vb: Collection(Of HarvestingObjectRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.HarvestingObjectRowType)
  name.vb: Collection(Of HarvestingObjectRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.HarvestingObjectRowType
    name: HarvestingObjectRowType
    href: ForestDeclarationNew.Types.HarvestingObjectRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.HarvestingObjectRowType
    name: HarvestingObjectRowType
    href: ForestDeclarationNew.Types.HarvestingObjectRowType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_HarvestingObjectSpecified
  name: HarvestingObjectSpecified
  nameWithType: ForestDeclarationType.HarvestingObjectSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.HarvestingObjectSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_OtherUsageTypes
  name: OtherUsageTypes
  nameWithType: ForestDeclarationType.OtherUsageTypes
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypes
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageTypesRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageTypesRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<OtherUsageTypesRowType>
  nameWithType: Collection<OtherUsageTypesRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.OtherUsageTypesRowType>
  nameWithType.vb: Collection(Of OtherUsageTypesRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.OtherUsageTypesRowType)
  name.vb: Collection(Of OtherUsageTypesRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.OtherUsageTypesRowType
    name: OtherUsageTypesRowType
    href: ForestDeclarationNew.Types.OtherUsageTypesRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.OtherUsageTypesRowType
    name: OtherUsageTypesRowType
    href: ForestDeclarationNew.Types.OtherUsageTypesRowType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_OtherUsageTypesSpecified
  name: OtherUsageTypesSpecified
  nameWithType: ForestDeclarationType.OtherUsageTypesSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageTypesSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_OtherUsageObjects
  name: OtherUsageObjects
  nameWithType: ForestDeclarationType.OtherUsageObjects
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjects
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageObjectsRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.OtherUsageObjectsRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<OtherUsageObjectsRowType>
  nameWithType: Collection<OtherUsageObjectsRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.OtherUsageObjectsRowType>
  nameWithType.vb: Collection(Of OtherUsageObjectsRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.OtherUsageObjectsRowType)
  name.vb: Collection(Of OtherUsageObjectsRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType
    name: OtherUsageObjectsRowType
    href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.OtherUsageObjectsRowType
    name: OtherUsageObjectsRowType
    href: ForestDeclarationNew.Types.OtherUsageObjectsRowType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_OtherUsageObjectsSpecified
  name: OtherUsageObjectsSpecified
  nameWithType: ForestDeclarationType.OtherUsageObjectsSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.OtherUsageObjectsSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_SchemeHarvestingWood
  name: SchemeHarvestingWood
  nameWithType: ForestDeclarationType.SchemeHarvestingWood
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWood
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.SchemeRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.SchemeRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<SchemeRowType>
  nameWithType: Collection<SchemeRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.SchemeRowType>
  nameWithType.vb: Collection(Of SchemeRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.SchemeRowType)
  name.vb: Collection(Of SchemeRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.SchemeRowType
    name: SchemeRowType
    href: ForestDeclarationNew.Types.SchemeRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.SchemeRowType
    name: SchemeRowType
    href: ForestDeclarationNew.Types.SchemeRowType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_SchemeHarvestingWoodSpecified
  name: SchemeHarvestingWoodSpecified
  nameWithType: ForestDeclarationType.SchemeHarvestingWoodSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeHarvestingWoodSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_SchemeObject
  name: SchemeObject
  nameWithType: ForestDeclarationType.SchemeObject
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObject
- uid: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_SchemeObjectSpecified
  name: SchemeObjectSpecified
  nameWithType: ForestDeclarationType.SchemeObjectSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.SchemeObjectSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_LocationInformation
  name: LocationInformation
  nameWithType: ForestDeclarationType.LocationInformation
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformation
- uid: System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.LocationInformationRowType}
  commentId: T:System.Collections.ObjectModel.Collection{ForestDeclarationNew.Types.LocationInformationRowType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<LocationInformationRowType>
  nameWithType: Collection<LocationInformationRowType>
  fullName: System.Collections.ObjectModel.Collection<ForestDeclarationNew.Types.LocationInformationRowType>
  nameWithType.vb: Collection(Of LocationInformationRowType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of ForestDeclarationNew.Types.LocationInformationRowType)
  name.vb: Collection(Of LocationInformationRowType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: ForestDeclarationNew.Types.LocationInformationRowType
    name: LocationInformationRowType
    href: ForestDeclarationNew.Types.LocationInformationRowType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ForestDeclarationNew.Types.LocationInformationRowType
    name: LocationInformationRowType
    href: ForestDeclarationNew.Types.LocationInformationRowType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_LocationInformationSpecified
  name: LocationInformationSpecified
  nameWithType: ForestDeclarationType.LocationInformationSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.LocationInformationSpecified
- uid: ForestDeclarationNew.Types.ForestDeclarationType.Attachments*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.Attachments
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_Attachments
  name: Attachments
  nameWithType: ForestDeclarationType.Attachments
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.Attachments
- uid: System.Collections.ObjectModel.Collection{Common.Attachment.Types.AttachmentType}
  commentId: T:System.Collections.ObjectModel.Collection{Common.Attachment.Types.AttachmentType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  name: Collection<AttachmentType>
  nameWithType: Collection<AttachmentType>
  fullName: System.Collections.ObjectModel.Collection<Common.Attachment.Types.AttachmentType>
  nameWithType.vb: Collection(Of AttachmentType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Common.Attachment.Types.AttachmentType)
  name.vb: Collection(Of AttachmentType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: <
  - uid: Common.Attachment.Types.AttachmentType
    name: AttachmentType
    href: Common.Attachment.Types.AttachmentType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.collection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Common.Attachment.Types.AttachmentType
    name: AttachmentType
    href: Common.Attachment.Types.AttachmentType.html
  - name: )
- uid: ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified*
  commentId: Overload:ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
  href: ForestDeclarationNew.Types.ForestDeclarationType.html#ForestDeclarationNew_Types_ForestDeclarationType_AttachmentsSpecified
  name: AttachmentsSpecified
  nameWithType: ForestDeclarationType.AttachmentsSpecified
  fullName: ForestDeclarationNew.Types.ForestDeclarationType.AttachmentsSpecified
