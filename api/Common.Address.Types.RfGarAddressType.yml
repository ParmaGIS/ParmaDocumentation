### YamlMime:ManagedReference
items:
- uid: Common.Address.Types.RfGarAddressType
  commentId: T:Common.Address.Types.RfGarAddressType
  id: RfGarAddressType
  parent: Common.Address.Types
  children:
  - Common.Address.Types.RfGarAddressType.AdditionalNumber1
  - Common.Address.Types.RfGarAddressType.AdditionalNumber2
  - Common.Address.Types.RfGarAddressType.AdditionalType1
  - Common.Address.Types.RfGarAddressType.AdditionalType2
  - Common.Address.Types.RfGarAddressType.ApartmentNumber
  - Common.Address.Types.RfGarAddressType.ApartmentType
  - Common.Address.Types.RfGarAddressType.AreaCode
  - Common.Address.Types.RfGarAddressType.CadNumber
  - Common.Address.Types.RfGarAddressType.CityCode
  - Common.Address.Types.RfGarAddressType.Code
  - Common.Address.Types.RfGarAddressType.Counter
  - Common.Address.Types.RfGarAddressType.DivType
  - Common.Address.Types.RfGarAddressType.EndDate
  - Common.Address.Types.RfGarAddressType.EndDateSpecified
  - Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
  - Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
  - Common.Address.Types.RfGarAddressType.HouseNumber
  - Common.Address.Types.RfGarAddressType.HouseType
  - Common.Address.Types.RfGarAddressType.Id
  - Common.Address.Types.RfGarAddressType.IfnsJpCode
  - Common.Address.Types.RfGarAddressType.IfnsJpTerCode
  - Common.Address.Types.RfGarAddressType.IfnsPpCode
  - Common.Address.Types.RfGarAddressType.IfnsPpTerCode
  - Common.Address.Types.RfGarAddressType.IsActive
  - Common.Address.Types.RfGarAddressType.IsActiveSpecified
  - Common.Address.Types.RfGarAddressType.IsActual
  - Common.Address.Types.RfGarAddressType.IsActualSpecified
  - Common.Address.Types.RfGarAddressType.Level
  - Common.Address.Types.RfGarAddressType.Name
  - Common.Address.Types.RfGarAddressType.NextId
  - Common.Address.Types.RfGarAddressType.NextIdSpecified
  - Common.Address.Types.RfGarAddressType.ObejctId
  - Common.Address.Types.RfGarAddressType.ObjectGuid
  - Common.Address.Types.RfGarAddressType.OffName
  - Common.Address.Types.RfGarAddressType.Okato
  - Common.Address.Types.RfGarAddressType.Oktmo
  - Common.Address.Types.RfGarAddressType.OperTypeId
  - Common.Address.Types.RfGarAddressType.ParentAdm
  - Common.Address.Types.RfGarAddressType.ParentAdmSpecified
  - Common.Address.Types.RfGarAddressType.ParentMun
  - Common.Address.Types.RfGarAddressType.ParentMunSpecified
  - Common.Address.Types.RfGarAddressType.ParentObjIdAdm
  - Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
  - Common.Address.Types.RfGarAddressType.ParentObjIdMun
  - Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
  - Common.Address.Types.RfGarAddressType.PlaceCode
  - Common.Address.Types.RfGarAddressType.PlainCode
  - Common.Address.Types.RfGarAddressType.PlanCode
  - Common.Address.Types.RfGarAddressType.PostalCode
  - Common.Address.Types.RfGarAddressType.PrevId
  - Common.Address.Types.RfGarAddressType.PrevIdSpecified
  - Common.Address.Types.RfGarAddressType.ReestrNumber
  - Common.Address.Types.RfGarAddressType.RegionCode
  - Common.Address.Types.RfGarAddressType.RoomNumber
  - Common.Address.Types.RfGarAddressType.RoomType
  - Common.Address.Types.RfGarAddressType.SimpleFullName
  - Common.Address.Types.RfGarAddressType.StartDate
  - Common.Address.Types.RfGarAddressType.StartDateSpecified
  - Common.Address.Types.RfGarAddressType.StreetCode
  - Common.Address.Types.RfGarAddressType.TypeName
  - Common.Address.Types.RfGarAddressType.UpdateDate
  - Common.Address.Types.RfGarAddressType.UpdateDateSpecified
  langs:
  - csharp
  - vb
  name: RfGarAddressType
  nameWithType: RfGarAddressType
  fullName: Common.Address.Types.RfGarAddressType
  type: Class
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RfGarAddressType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 19
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Тип Адрес в РФ (ГАР ФИАС)</p>
  example: []
  syntax:
    content: >-
      [Serializable]

      public class RfGarAddressType
    content.vb: >-
      <Serializable>

      Public Class RfGarAddressType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Common.Address.Types.RfGarAddressType.Id
  commentId: P:Common.Address.Types.RfGarAddressType.Id
  id: Id
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RfGarAddressType.Id
  fullName: Common.Address.Types.RfGarAddressType.Id
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Id
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 33
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Уникальный идентификатор записи адресного объекта</p>

    <p>Тип Уникальный идентификатор записи адресного объекта</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: >-
      [Required]

      public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Required>

      Public Property Id As Long
  overload: Common.Address.Types.RfGarAddressType.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Address.Types.RfGarAddressType.ObejctId
  commentId: P:Common.Address.Types.RfGarAddressType.ObejctId
  id: ObejctId
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ObejctId
  nameWithType: RfGarAddressType.ObejctId
  fullName: Common.Address.Types.RfGarAddressType.ObejctId
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObejctId
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 43
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Глобальный уникальный идентификатор адресного объекта</p>

    <p>Тип Глобальный уникальный идентификатор записи адресного объекта</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: >-
      [Required]

      public long ObejctId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Required>

      Public Property ObejctId As Long
  overload: Common.Address.Types.RfGarAddressType.ObejctId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Address.Types.RfGarAddressType.ObjectGuid
  commentId: P:Common.Address.Types.RfGarAddressType.ObjectGuid
  id: ObjectGuid
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ObjectGuid
  nameWithType: RfGarAddressType.ObjectGuid
  fullName: Common.Address.Types.RfGarAddressType.ObjectGuid
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ObjectGuid
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 54
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Глобальный уникальный идентификатор адресного объекта (GUID)</p>

    <p>Тип Глобальный уникальный идентификатор адресного объекта (GUID)</p>

    <p>Minimum length: 36.</p>

    <p>Maximum length: 36.</p>
  example: []
  syntax:
    content: >-
      [MinLength(36)]

      [MaxLength(36)]

      [Required]

      public string ObjectGuid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(36)>

      <MaxLength(36)>

      <Required>

      Public Property ObjectGuid As String
  overload: Common.Address.Types.RfGarAddressType.ObjectGuid*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 36
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 36
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Address.Types.RfGarAddressType.ParentAdm
  commentId: P:Common.Address.Types.RfGarAddressType.ParentAdm
  id: ParentAdm
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentAdm
  nameWithType: RfGarAddressType.ParentAdm
  fullName: Common.Address.Types.RfGarAddressType.ParentAdm
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentAdm
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 66
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор родительской записи (Административный)</p>

    <p>Тип Идентификатор родительской записи</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long ParentAdm { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ParentAdm As Long
  overload: Common.Address.Types.RfGarAddressType.ParentAdm*
- uid: Common.Address.Types.RfGarAddressType.ParentAdmSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.ParentAdmSpecified
  id: ParentAdmSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentAdmSpecified
  nameWithType: RfGarAddressType.ParentAdmSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentAdmSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentAdmSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 73
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the ParentAdm property is specified.</p>
  example: []
  syntax:
    content: public bool ParentAdmSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ParentAdmSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.ParentAdmSpecified*
- uid: Common.Address.Types.RfGarAddressType.ParentMun
  commentId: P:Common.Address.Types.RfGarAddressType.ParentMun
  id: ParentMun
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentMun
  nameWithType: RfGarAddressType.ParentMun
  fullName: Common.Address.Types.RfGarAddressType.ParentMun
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentMun
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 81
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор родительской записи (Муниципальный)</p>

    <p>Тип Идентификатор родительской записи</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long ParentMun { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ParentMun As Long
  overload: Common.Address.Types.RfGarAddressType.ParentMun*
- uid: Common.Address.Types.RfGarAddressType.ParentMunSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.ParentMunSpecified
  id: ParentMunSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentMunSpecified
  nameWithType: RfGarAddressType.ParentMunSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentMunSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentMunSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 88
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the ParentMun property is specified.</p>
  example: []
  syntax:
    content: public bool ParentMunSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ParentMunSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.ParentMunSpecified*
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdAdm
  commentId: P:Common.Address.Types.RfGarAddressType.ParentObjIdAdm
  id: ParentObjIdAdm
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentObjIdAdm
  nameWithType: RfGarAddressType.ParentObjIdAdm
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdAdm
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentObjIdAdm
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 96
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор родительского объекта (Административный)</p>

    <p>Тип Идентификатор родительского объекта</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long ParentObjIdAdm { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ParentObjIdAdm As Long
  overload: Common.Address.Types.RfGarAddressType.ParentObjIdAdm*
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
  id: ParentObjIdAdmSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentObjIdAdmSpecified
  nameWithType: RfGarAddressType.ParentObjIdAdmSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentObjIdAdmSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 103
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the ParentObjIdAdm property is specified.</p>
  example: []
  syntax:
    content: public bool ParentObjIdAdmSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ParentObjIdAdmSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified*
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdMun
  commentId: P:Common.Address.Types.RfGarAddressType.ParentObjIdMun
  id: ParentObjIdMun
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentObjIdMun
  nameWithType: RfGarAddressType.ParentObjIdMun
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdMun
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentObjIdMun
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 111
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор родительского объекта (Муниципальный)</p>

    <p>Тип Идентификатор родительского объекта</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long ParentObjIdMun { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ParentObjIdMun As Long
  overload: Common.Address.Types.RfGarAddressType.ParentObjIdMun*
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
  id: ParentObjIdMunSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ParentObjIdMunSpecified
  nameWithType: RfGarAddressType.ParentObjIdMunSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ParentObjIdMunSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 118
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the ParentObjIdMun property is specified.</p>
  example: []
  syntax:
    content: public bool ParentObjIdMunSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ParentObjIdMunSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified*
- uid: Common.Address.Types.RfGarAddressType.PrevId
  commentId: P:Common.Address.Types.RfGarAddressType.PrevId
  id: PrevId
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PrevId
  nameWithType: RfGarAddressType.PrevId
  fullName: Common.Address.Types.RfGarAddressType.PrevId
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PrevId
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 126
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор записи связывания с предыдущей исторической записью</p>

    <p>Тип Идентификатор записи связывания с исторической записью</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long PrevId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property PrevId As Long
  overload: Common.Address.Types.RfGarAddressType.PrevId*
- uid: Common.Address.Types.RfGarAddressType.PrevIdSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.PrevIdSpecified
  id: PrevIdSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PrevIdSpecified
  nameWithType: RfGarAddressType.PrevIdSpecified
  fullName: Common.Address.Types.RfGarAddressType.PrevIdSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PrevIdSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 133
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the PrevId property is specified.</p>
  example: []
  syntax:
    content: public bool PrevIdSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PrevIdSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.PrevIdSpecified*
- uid: Common.Address.Types.RfGarAddressType.NextId
  commentId: P:Common.Address.Types.RfGarAddressType.NextId
  id: NextId
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: NextId
  nameWithType: RfGarAddressType.NextId
  fullName: Common.Address.Types.RfGarAddressType.NextId
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: NextId
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 141
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Идентификатор записи связывания с последующей исторической записью</p>

    <p>Тип Идентификатор записи связывания с исторической записью</p>

    <p>Total number of digits: 19.</p>
  example: []
  syntax:
    content: public long NextId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property NextId As Long
  overload: Common.Address.Types.RfGarAddressType.NextId*
- uid: Common.Address.Types.RfGarAddressType.NextIdSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.NextIdSpecified
  id: NextIdSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: NextIdSpecified
  nameWithType: RfGarAddressType.NextIdSpecified
  fullName: Common.Address.Types.RfGarAddressType.NextIdSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: NextIdSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 148
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the NextId property is specified.</p>
  example: []
  syntax:
    content: public bool NextIdSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NextIdSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.NextIdSpecified*
- uid: Common.Address.Types.RfGarAddressType.StartDate
  commentId: P:Common.Address.Types.RfGarAddressType.StartDate
  id: StartDate
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: RfGarAddressType.StartDate
  fullName: Common.Address.Types.RfGarAddressType.StartDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: StartDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 154
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Начало действия записи</p>
  example: []
  syntax:
    content: public DateTime StartDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property StartDate As Date
  overload: Common.Address.Types.RfGarAddressType.StartDate*
- uid: Common.Address.Types.RfGarAddressType.StartDateSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.StartDateSpecified
  id: StartDateSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: StartDateSpecified
  nameWithType: RfGarAddressType.StartDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.StartDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: StartDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 161
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the StartDate property is specified.</p>
  example: []
  syntax:
    content: public bool StartDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StartDateSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.StartDateSpecified*
- uid: Common.Address.Types.RfGarAddressType.EndDate
  commentId: P:Common.Address.Types.RfGarAddressType.EndDate
  id: EndDate
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: RfGarAddressType.EndDate
  fullName: Common.Address.Types.RfGarAddressType.EndDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: EndDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 167
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Окончание действия записи</p>
  example: []
  syntax:
    content: public DateTime EndDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property EndDate As Date
  overload: Common.Address.Types.RfGarAddressType.EndDate*
- uid: Common.Address.Types.RfGarAddressType.EndDateSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.EndDateSpecified
  id: EndDateSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: EndDateSpecified
  nameWithType: RfGarAddressType.EndDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.EndDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: EndDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 174
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the EndDate property is specified.</p>
  example: []
  syntax:
    content: public bool EndDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EndDateSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.EndDateSpecified*
- uid: Common.Address.Types.RfGarAddressType.UpdateDate
  commentId: P:Common.Address.Types.RfGarAddressType.UpdateDate
  id: UpdateDate
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: UpdateDate
  nameWithType: RfGarAddressType.UpdateDate
  fullName: Common.Address.Types.RfGarAddressType.UpdateDate
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: UpdateDate
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 180
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Дата внесения (обновления) записи</p>
  example: []
  syntax:
    content: public DateTime UpdateDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property UpdateDate As Date
  overload: Common.Address.Types.RfGarAddressType.UpdateDate*
- uid: Common.Address.Types.RfGarAddressType.UpdateDateSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.UpdateDateSpecified
  id: UpdateDateSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: UpdateDateSpecified
  nameWithType: RfGarAddressType.UpdateDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.UpdateDateSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: UpdateDateSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 187
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the UpdateDate property is specified.</p>
  example: []
  syntax:
    content: public bool UpdateDateSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UpdateDateSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.UpdateDateSpecified*
- uid: Common.Address.Types.RfGarAddressType.Name
  commentId: P:Common.Address.Types.RfGarAddressType.Name
  id: Name
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RfGarAddressType.Name
  fullName: Common.Address.Types.RfGarAddressType.Name
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Name
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 193
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Формализованное описание</p>
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Common.Address.Types.RfGarAddressType.Name*
- uid: Common.Address.Types.RfGarAddressType.RegionCode
  commentId: P:Common.Address.Types.RfGarAddressType.RegionCode
  id: RegionCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: RegionCode
  nameWithType: RfGarAddressType.RegionCode
  fullName: Common.Address.Types.RfGarAddressType.RegionCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RegionCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 204
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код региона</p>

    <p>Тип Код региона</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string RegionCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property RegionCode As String
  overload: Common.Address.Types.RfGarAddressType.RegionCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.AreaCode
  commentId: P:Common.Address.Types.RfGarAddressType.AreaCode
  id: AreaCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: AreaCode
  nameWithType: RfGarAddressType.AreaCode
  fullName: Common.Address.Types.RfGarAddressType.AreaCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AreaCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 218
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код района</p>

    <p>Тип Код района</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string AreaCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property AreaCode As String
  overload: Common.Address.Types.RfGarAddressType.AreaCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.CityCode
  commentId: P:Common.Address.Types.RfGarAddressType.CityCode
  id: CityCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: CityCode
  nameWithType: RfGarAddressType.CityCode
  fullName: Common.Address.Types.RfGarAddressType.CityCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CityCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 232
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код города</p>

    <p>Тип Код города</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string CityCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property CityCode As String
  overload: Common.Address.Types.RfGarAddressType.CityCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.PlaceCode
  commentId: P:Common.Address.Types.RfGarAddressType.PlaceCode
  id: PlaceCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PlaceCode
  nameWithType: RfGarAddressType.PlaceCode
  fullName: Common.Address.Types.RfGarAddressType.PlaceCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PlaceCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 246
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код населённого пункта</p>

    <p>Тип Код населённого пункта</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string PlaceCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property PlaceCode As String
  overload: Common.Address.Types.RfGarAddressType.PlaceCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.PlanCode
  commentId: P:Common.Address.Types.RfGarAddressType.PlanCode
  id: PlanCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PlanCode
  nameWithType: RfGarAddressType.PlanCode
  fullName: Common.Address.Types.RfGarAddressType.PlanCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PlanCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 260
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код элемента планировочной структуры</p>

    <p>Тип Код элемента планировачной структуры</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string PlanCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property PlanCode As String
  overload: Common.Address.Types.RfGarAddressType.PlanCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.StreetCode
  commentId: P:Common.Address.Types.RfGarAddressType.StreetCode
  id: StreetCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: StreetCode
  nameWithType: RfGarAddressType.StreetCode
  fullName: Common.Address.Types.RfGarAddressType.StreetCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: StreetCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 274
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код улицы</p>

    <p>Тип Код улицы</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{1,4}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(4)]

      [RegularExpression("[0-9]{1,4}")]

      public string StreetCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(4)>

      <RegularExpression("[0-9]{1,4}")>

      Public Property StreetCode As String
  overload: Common.Address.Types.RfGarAddressType.StreetCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,4}'
- uid: Common.Address.Types.RfGarAddressType.OffName
  commentId: P:Common.Address.Types.RfGarAddressType.OffName
  id: OffName
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: OffName
  nameWithType: RfGarAddressType.OffName
  fullName: Common.Address.Types.RfGarAddressType.OffName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OffName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 284
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Официальное наименование</p>
  example: []
  syntax:
    content: public string OffName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OffName As String
  overload: Common.Address.Types.RfGarAddressType.OffName*
- uid: Common.Address.Types.RfGarAddressType.PostalCode
  commentId: P:Common.Address.Types.RfGarAddressType.PostalCode
  id: PostalCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: RfGarAddressType.PostalCode
  fullName: Common.Address.Types.RfGarAddressType.PostalCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PostalCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 294
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Почтовый индекс</p>

    <p>Почтовый индекс</p>

    <p>Maximum length: 6.</p>

    <p>Pattern: [0-9]{6}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(6)]

      [RegularExpression("[0-9]{6}")]

      public string PostalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(6)>

      <RegularExpression("[0-9]{6}")>

      Public Property PostalCode As String
  overload: Common.Address.Types.RfGarAddressType.PostalCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 6
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{6}'
- uid: Common.Address.Types.RfGarAddressType.IfnsJpCode
  commentId: P:Common.Address.Types.RfGarAddressType.IfnsJpCode
  id: IfnsJpCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IfnsJpCode
  nameWithType: RfGarAddressType.IfnsJpCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsJpCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IfnsJpCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 306
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код ИФНС ЮЛ</p>

    <p>Тип Код ИФНС</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{4}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(4)]

      [RegularExpression("[0-9]{4}")]

      public string IfnsJpCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(4)>

      <RegularExpression("[0-9]{4}")>

      Public Property IfnsJpCode As String
  overload: Common.Address.Types.RfGarAddressType.IfnsJpCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{4}'
- uid: Common.Address.Types.RfGarAddressType.IfnsJpTerCode
  commentId: P:Common.Address.Types.RfGarAddressType.IfnsJpTerCode
  id: IfnsJpTerCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IfnsJpTerCode
  nameWithType: RfGarAddressType.IfnsJpTerCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsJpTerCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IfnsJpTerCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 318
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код территориального участка ИФНС ФЛ</p>

    <p>Тип Код территориального участка ИФНС</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{4}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(4)]

      [RegularExpression("[0-9]{4}")]

      public string IfnsJpTerCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(4)>

      <RegularExpression("[0-9]{4}")>

      Public Property IfnsJpTerCode As String
  overload: Common.Address.Types.RfGarAddressType.IfnsJpTerCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{4}'
- uid: Common.Address.Types.RfGarAddressType.IfnsPpCode
  commentId: P:Common.Address.Types.RfGarAddressType.IfnsPpCode
  id: IfnsPpCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IfnsPpCode
  nameWithType: RfGarAddressType.IfnsPpCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsPpCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IfnsPpCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 330
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код ИФНС ФЛ</p>

    <p>Тип Код ИФНС</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{4}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(4)]

      [RegularExpression("[0-9]{4}")]

      public string IfnsPpCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(4)>

      <RegularExpression("[0-9]{4}")>

      Public Property IfnsPpCode As String
  overload: Common.Address.Types.RfGarAddressType.IfnsPpCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{4}'
- uid: Common.Address.Types.RfGarAddressType.IfnsPpTerCode
  commentId: P:Common.Address.Types.RfGarAddressType.IfnsPpTerCode
  id: IfnsPpTerCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IfnsPpTerCode
  nameWithType: RfGarAddressType.IfnsPpTerCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsPpTerCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IfnsPpTerCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 342
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код территориального участка ИФНС ФЛ</p>

    <p>Тип Код территориального участка ИФНС</p>

    <p>Maximum length: 4.</p>

    <p>Pattern: [0-9]{4}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(4)]

      [RegularExpression("[0-9]{4}")]

      public string IfnsPpTerCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(4)>

      <RegularExpression("[0-9]{4}")>

      Public Property IfnsPpTerCode As String
  overload: Common.Address.Types.RfGarAddressType.IfnsPpTerCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{4}'
- uid: Common.Address.Types.RfGarAddressType.Okato
  commentId: P:Common.Address.Types.RfGarAddressType.Okato
  id: Okato
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Okato
  nameWithType: RfGarAddressType.Okato
  fullName: Common.Address.Types.RfGarAddressType.Okato
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Okato
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 354
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>ОКАТО</p>

    <p>ОКАТО</p>

    <p>Maximum length: 11.</p>

    <p>Pattern: \d{1,11}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(11)]

      [RegularExpression("\\d{1,11}")]

      public string Okato { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(11)>

      <RegularExpression("\d{1,11}")>

      Public Property Okato As String
  overload: Common.Address.Types.RfGarAddressType.Okato*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 11
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '\d{1,11}'
- uid: Common.Address.Types.RfGarAddressType.Oktmo
  commentId: P:Common.Address.Types.RfGarAddressType.Oktmo
  id: Oktmo
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Oktmo
  nameWithType: RfGarAddressType.Oktmo
  fullName: Common.Address.Types.RfGarAddressType.Oktmo
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Oktmo
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 365
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>ОКТМО</p>

    <p>ОКТМО</p>

    <p>Maximum length: 11.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(11)]

      public string Oktmo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(11)>

      Public Property Oktmo As String
  overload: Common.Address.Types.RfGarAddressType.Oktmo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 11
- uid: Common.Address.Types.RfGarAddressType.TypeName
  commentId: P:Common.Address.Types.RfGarAddressType.TypeName
  id: TypeName
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: TypeName
  nameWithType: RfGarAddressType.TypeName
  fullName: Common.Address.Types.RfGarAddressType.TypeName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: TypeName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 376
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Краткое наименование типа объекта</p>

    <p>Тип Краткое наименование типа объекта</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string TypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property TypeName As String
  overload: Common.Address.Types.RfGarAddressType.TypeName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.Level
  commentId: P:Common.Address.Types.RfGarAddressType.Level
  id: Level
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: RfGarAddressType.Level
  fullName: Common.Address.Types.RfGarAddressType.Level
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Level
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 389
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Уровень адресного объекта</p>

    <p>Тип Уровень адресного объекта</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 10.</p>

    <p>Pattern: [0-9]{1,10}.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(10)]

      [RegularExpression("[0-9]{1,10}")]

      public string Level { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(10)>

      <RegularExpression("[0-9]{1,10}")>

      Public Property Level As String
  overload: Common.Address.Types.RfGarAddressType.Level*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 10
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{1,10}'
- uid: Common.Address.Types.RfGarAddressType.Code
  commentId: P:Common.Address.Types.RfGarAddressType.Code
  id: Code
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: RfGarAddressType.Code
  fullName: Common.Address.Types.RfGarAddressType.Code
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Code
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 401
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код адресного объекта одной строкой с признаком актуальности из КЛАДР 4.0.</p>

    <p>Код адресного объекта одной строкой с признаком актуальности из КЛАДР 4.0.</p>

    <p>Maximum length: 20.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(20)]

      public string Code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(20)>

      Public Property Code As String
  overload: Common.Address.Types.RfGarAddressType.Code*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 20
- uid: Common.Address.Types.RfGarAddressType.PlainCode
  commentId: P:Common.Address.Types.RfGarAddressType.PlainCode
  id: PlainCode
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: PlainCode
  nameWithType: RfGarAddressType.PlainCode
  fullName: Common.Address.Types.RfGarAddressType.PlainCode
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: PlainCode
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 413
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Код адресного объекта из КЛАДР 4.0 одной строкой без признака актуальности
                           (последних двух цифр)</p>
    <p>Код адресного объекта из КЛАДР 4.0 одной строкой без признака актуальности (последних двух
                   цифр)</p>
    <p>Maximum length: 18.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(18)]

      public string PlainCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(18)>

      Public Property PlainCode As String
  overload: Common.Address.Types.RfGarAddressType.PlainCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 18
- uid: Common.Address.Types.RfGarAddressType.IsActual
  commentId: P:Common.Address.Types.RfGarAddressType.IsActual
  id: IsActual
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IsActual
  nameWithType: RfGarAddressType.IsActual
  fullName: Common.Address.Types.RfGarAddressType.IsActual
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsActual
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 422
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Статус актуальности адресного объекта ФИАС. Актуальный адрес на текущую дату.</p>
  example: []
  syntax:
    content: public bool IsActual { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActual As Boolean
  overload: Common.Address.Types.RfGarAddressType.IsActual*
- uid: Common.Address.Types.RfGarAddressType.IsActualSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.IsActualSpecified
  id: IsActualSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IsActualSpecified
  nameWithType: RfGarAddressType.IsActualSpecified
  fullName: Common.Address.Types.RfGarAddressType.IsActualSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsActualSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 429
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the IsActual property is specified.</p>
  example: []
  syntax:
    content: public bool IsActualSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActualSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.IsActualSpecified*
- uid: Common.Address.Types.RfGarAddressType.IsActive
  commentId: P:Common.Address.Types.RfGarAddressType.IsActive
  id: IsActive
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: RfGarAddressType.IsActive
  fullName: Common.Address.Types.RfGarAddressType.IsActive
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsActive
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 435
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Признак действующего адресного объекта</p>
  example: []
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: Common.Address.Types.RfGarAddressType.IsActive*
- uid: Common.Address.Types.RfGarAddressType.IsActiveSpecified
  commentId: P:Common.Address.Types.RfGarAddressType.IsActiveSpecified
  id: IsActiveSpecified
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: IsActiveSpecified
  nameWithType: RfGarAddressType.IsActiveSpecified
  fullName: Common.Address.Types.RfGarAddressType.IsActiveSpecified
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: IsActiveSpecified
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 442
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Gets or sets a value indicating whether the IsActive property is specified.</p>
  example: []
  syntax:
    content: public bool IsActiveSpecified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActiveSpecified As Boolean
  overload: Common.Address.Types.RfGarAddressType.IsActiveSpecified*
- uid: Common.Address.Types.RfGarAddressType.OperTypeId
  commentId: P:Common.Address.Types.RfGarAddressType.OperTypeId
  id: OperTypeId
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: OperTypeId
  nameWithType: RfGarAddressType.OperTypeId
  fullName: Common.Address.Types.RfGarAddressType.OperTypeId
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: OperTypeId
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 448
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Статус действия над записью – причина появления записи</p>
  example: []
  syntax:
    content: public string OperTypeId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OperTypeId As String
  overload: Common.Address.Types.RfGarAddressType.OperTypeId*
- uid: Common.Address.Types.RfGarAddressType.DivType
  commentId: P:Common.Address.Types.RfGarAddressType.DivType
  id: DivType
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: DivType
  nameWithType: RfGarAddressType.DivType
  fullName: Common.Address.Types.RfGarAddressType.DivType
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: DivType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 455
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Тип адресации</p>
  example: []
  syntax:
    content: public string DivType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DivType As String
  overload: Common.Address.Types.RfGarAddressType.DivType*
- uid: Common.Address.Types.RfGarAddressType.CadNumber
  commentId: P:Common.Address.Types.RfGarAddressType.CadNumber
  id: CadNumber
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: CadNumber
  nameWithType: RfGarAddressType.CadNumber
  fullName: Common.Address.Types.RfGarAddressType.CadNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: CadNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 465
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Кадастровый номер</p>

    <p>Тип Кадастровый номер</p>

    <p>Maximum length: 12.</p>

    <p>Pattern: [0-9]{12}.</p>
  example: []
  syntax:
    content: >-
      [MaxLength(12)]

      [RegularExpression("[0-9]{12}")]

      public string CadNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(12)>

      <RegularExpression("[0-9]{12}")>

      Public Property CadNumber As String
  overload: Common.Address.Types.RfGarAddressType.CadNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 12
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '[0-9]{12}'
- uid: Common.Address.Types.RfGarAddressType.Counter
  commentId: P:Common.Address.Types.RfGarAddressType.Counter
  id: Counter
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: Counter
  nameWithType: RfGarAddressType.Counter
  fullName: Common.Address.Types.RfGarAddressType.Counter
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: Counter
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 474
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Порядковый номер</p>
  example: []
  syntax:
    content: public string Counter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Counter As String
  overload: Common.Address.Types.RfGarAddressType.Counter*
- uid: Common.Address.Types.RfGarAddressType.ReestrNumber
  commentId: P:Common.Address.Types.RfGarAddressType.ReestrNumber
  id: ReestrNumber
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ReestrNumber
  nameWithType: RfGarAddressType.ReestrNumber
  fullName: Common.Address.Types.RfGarAddressType.ReestrNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ReestrNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 481
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Реестровый номер адресного объекта</p>
  example: []
  syntax:
    content: public string ReestrNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReestrNumber As String
  overload: Common.Address.Types.RfGarAddressType.ReestrNumber*
- uid: Common.Address.Types.RfGarAddressType.HouseNumber
  commentId: P:Common.Address.Types.RfGarAddressType.HouseNumber
  id: HouseNumber
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: HouseNumber
  nameWithType: RfGarAddressType.HouseNumber
  fullName: Common.Address.Types.RfGarAddressType.HouseNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HouseNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 491
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Номер дома</p>

    <p>Тип Номер дома</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string HouseNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property HouseNumber As String
  overload: Common.Address.Types.RfGarAddressType.HouseNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.HouseType
  commentId: P:Common.Address.Types.RfGarAddressType.HouseType
  id: HouseType
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: HouseType
  nameWithType: RfGarAddressType.HouseType
  fullName: Common.Address.Types.RfGarAddressType.HouseType
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HouseType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 500
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Признак владения</p>
  example: []
  syntax:
    content: public string HouseType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HouseType As String
  overload: Common.Address.Types.RfGarAddressType.HouseType*
- uid: Common.Address.Types.RfGarAddressType.AdditionalNumber1
  commentId: P:Common.Address.Types.RfGarAddressType.AdditionalNumber1
  id: AdditionalNumber1
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: AdditionalNumber1
  nameWithType: RfGarAddressType.AdditionalNumber1
  fullName: Common.Address.Types.RfGarAddressType.AdditionalNumber1
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AdditionalNumber1
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 510
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Дополнительный номер дома 1</p>

    <p>Тип Номер дома</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string AdditionalNumber1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property AdditionalNumber1 As String
  overload: Common.Address.Types.RfGarAddressType.AdditionalNumber1*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.AdditionalType1
  commentId: P:Common.Address.Types.RfGarAddressType.AdditionalType1
  id: AdditionalType1
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: AdditionalType1
  nameWithType: RfGarAddressType.AdditionalType1
  fullName: Common.Address.Types.RfGarAddressType.AdditionalType1
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AdditionalType1
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 519
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Дополнительный тип дома 1</p>
  example: []
  syntax:
    content: public string AdditionalType1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AdditionalType1 As String
  overload: Common.Address.Types.RfGarAddressType.AdditionalType1*
- uid: Common.Address.Types.RfGarAddressType.AdditionalNumber2
  commentId: P:Common.Address.Types.RfGarAddressType.AdditionalNumber2
  id: AdditionalNumber2
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: AdditionalNumber2
  nameWithType: RfGarAddressType.AdditionalNumber2
  fullName: Common.Address.Types.RfGarAddressType.AdditionalNumber2
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AdditionalNumber2
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 529
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Дополнительный номер дома 2</p>

    <p>Тип Номер дома</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string AdditionalNumber2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property AdditionalNumber2 As String
  overload: Common.Address.Types.RfGarAddressType.AdditionalNumber2*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.AdditionalType2
  commentId: P:Common.Address.Types.RfGarAddressType.AdditionalType2
  id: AdditionalType2
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: AdditionalType2
  nameWithType: RfGarAddressType.AdditionalType2
  fullName: Common.Address.Types.RfGarAddressType.AdditionalType2
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: AdditionalType2
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 538
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Дополнительный тип дома 2</p>
  example: []
  syntax:
    content: public string AdditionalType2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AdditionalType2 As String
  overload: Common.Address.Types.RfGarAddressType.AdditionalType2*
- uid: Common.Address.Types.RfGarAddressType.ApartmentNumber
  commentId: P:Common.Address.Types.RfGarAddressType.ApartmentNumber
  id: ApartmentNumber
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ApartmentNumber
  nameWithType: RfGarAddressType.ApartmentNumber
  fullName: Common.Address.Types.RfGarAddressType.ApartmentNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApartmentNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 548
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Номер помещения или офиса</p>

    <p>Тип Номер помещения или офиса</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string ApartmentNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property ApartmentNumber As String
  overload: Common.Address.Types.RfGarAddressType.ApartmentNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.ApartmentType
  commentId: P:Common.Address.Types.RfGarAddressType.ApartmentType
  id: ApartmentType
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: ApartmentType
  nameWithType: RfGarAddressType.ApartmentType
  fullName: Common.Address.Types.RfGarAddressType.ApartmentType
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: ApartmentType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 557
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Тип помещения</p>
  example: []
  syntax:
    content: public string ApartmentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApartmentType As String
  overload: Common.Address.Types.RfGarAddressType.ApartmentType*
- uid: Common.Address.Types.RfGarAddressType.RoomNumber
  commentId: P:Common.Address.Types.RfGarAddressType.RoomNumber
  id: RoomNumber
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: RoomNumber
  nameWithType: RfGarAddressType.RoomNumber
  fullName: Common.Address.Types.RfGarAddressType.RoomNumber
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RoomNumber
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 567
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: >-
    <p>Номер комнаты</p>

    <p>Тип Номер комнаты</p>

    <p>Minimum length: 1.</p>

    <p>Maximum length: 50.</p>
  example: []
  syntax:
    content: >-
      [MinLength(1)]

      [MaxLength(50)]

      public string RoomNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MinLength(1)>

      <MaxLength(50)>

      Public Property RoomNumber As String
  overload: Common.Address.Types.RfGarAddressType.RoomNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
- uid: Common.Address.Types.RfGarAddressType.RoomType
  commentId: P:Common.Address.Types.RfGarAddressType.RoomType
  id: RoomType
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: RoomType
  nameWithType: RfGarAddressType.RoomType
  fullName: Common.Address.Types.RfGarAddressType.RoomType
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: RoomType
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 576
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Тип комнаты</p>
  example: []
  syntax:
    content: public string RoomType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoomType As String
  overload: Common.Address.Types.RfGarAddressType.RoomType*
- uid: Common.Address.Types.RfGarAddressType.SimpleFullName
  commentId: P:Common.Address.Types.RfGarAddressType.SimpleFullName
  id: SimpleFullName
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: SimpleFullName
  nameWithType: RfGarAddressType.SimpleFullName
  fullName: Common.Address.Types.RfGarAddressType.SimpleFullName
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: SimpleFullName
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 583
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Текущий адрес</p>
  example: []
  syntax:
    content: public string SimpleFullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SimpleFullName As String
  overload: Common.Address.Types.RfGarAddressType.SimpleFullName*
- uid: Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
  commentId: P:Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
  id: HierarchyFullNameAdm
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: HierarchyFullNameAdm
  nameWithType: RfGarAddressType.HierarchyFullNameAdm
  fullName: Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HierarchyFullNameAdm
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 590
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Полный адрес (Административный)</p>
  example: []
  syntax:
    content: >-
      [Required]

      public string HierarchyFullNameAdm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property HierarchyFullNameAdm As String
  overload: Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
  commentId: P:Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
  id: HierarchyFullNameMun
  parent: Common.Address.Types.RfGarAddressType
  langs:
  - csharp
  - vb
  name: HierarchyFullNameMun
  nameWithType: RfGarAddressType.HierarchyFullNameMun
  fullName: Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
  type: Property
  source:
    remote:
      path: platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
      branch: 337a82da41b4970cdcc7638dddfb6599823eb029
      repo: https://github.com/ParmaGIS/ParmaGIS.Net.git
    id: HierarchyFullNameMun
    path: ../../ParmaTest/platforms/wpf/modules/ParmaGIS.WPF.Modules.ReportTool/Test2/Common.Address.Types.cs
    startLine: 598
  assemblies:
  - ParmaGIS.WPF.Modules.ReportTool
  namespace: Common.Address.Types
  summary: <p>Полный адрес (Муниципальный)</p>
  example: []
  syntax:
    content: >-
      [Required]

      public string HierarchyFullNameMun { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property HierarchyFullNameMun As String
  overload: Common.Address.Types.RfGarAddressType.HierarchyFullNameMun*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
references:
- uid: Common.Address.Types
  commentId: N:Common.Address.Types
  href: Common.html
  name: Common.Address.Types
  nameWithType: Common.Address.Types
  fullName: Common.Address.Types
  spec.csharp:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Address
    name: Address
    href: Common.Address.html
  - name: .
  - uid: Common.Address.Types
    name: Types
    href: Common.Address.Types.html
  spec.vb:
  - uid: Common
    name: Common
    href: Common.html
  - name: .
  - uid: Common.Address
    name: Address
    href: Common.Address.html
  - name: .
  - uid: Common.Address.Types
    name: Types
    href: Common.Address.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Common.Address.Types.RfGarAddressType.Id*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Id
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Id
  name: Id
  nameWithType: RfGarAddressType.Id
  fullName: Common.Address.Types.RfGarAddressType.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Common.Address.Types.RfGarAddressType.ObejctId*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ObejctId
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ObejctId
  name: ObejctId
  nameWithType: RfGarAddressType.ObejctId
  fullName: Common.Address.Types.RfGarAddressType.ObejctId
- uid: Common.Address.Types.RfGarAddressType.ObjectGuid*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ObjectGuid
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ObjectGuid
  name: ObjectGuid
  nameWithType: RfGarAddressType.ObjectGuid
  fullName: Common.Address.Types.RfGarAddressType.ObjectGuid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Common.Address.Types.RfGarAddressType.ParentAdm*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentAdm
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentAdm
  name: ParentAdm
  nameWithType: RfGarAddressType.ParentAdm
  fullName: Common.Address.Types.RfGarAddressType.ParentAdm
- uid: Common.Address.Types.RfGarAddressType.ParentAdmSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentAdmSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentAdmSpecified
  name: ParentAdmSpecified
  nameWithType: RfGarAddressType.ParentAdmSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentAdmSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Common.Address.Types.RfGarAddressType.ParentMun*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentMun
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentMun
  name: ParentMun
  nameWithType: RfGarAddressType.ParentMun
  fullName: Common.Address.Types.RfGarAddressType.ParentMun
- uid: Common.Address.Types.RfGarAddressType.ParentMunSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentMunSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentMunSpecified
  name: ParentMunSpecified
  nameWithType: RfGarAddressType.ParentMunSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentMunSpecified
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdAdm*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentObjIdAdm
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentObjIdAdm
  name: ParentObjIdAdm
  nameWithType: RfGarAddressType.ParentObjIdAdm
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdAdm
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentObjIdAdmSpecified
  name: ParentObjIdAdmSpecified
  nameWithType: RfGarAddressType.ParentObjIdAdmSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdAdmSpecified
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdMun*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentObjIdMun
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentObjIdMun
  name: ParentObjIdMun
  nameWithType: RfGarAddressType.ParentObjIdMun
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdMun
- uid: Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ParentObjIdMunSpecified
  name: ParentObjIdMunSpecified
  nameWithType: RfGarAddressType.ParentObjIdMunSpecified
  fullName: Common.Address.Types.RfGarAddressType.ParentObjIdMunSpecified
- uid: Common.Address.Types.RfGarAddressType.PrevId*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PrevId
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PrevId
  name: PrevId
  nameWithType: RfGarAddressType.PrevId
  fullName: Common.Address.Types.RfGarAddressType.PrevId
- uid: Common.Address.Types.RfGarAddressType.PrevIdSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PrevIdSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PrevIdSpecified
  name: PrevIdSpecified
  nameWithType: RfGarAddressType.PrevIdSpecified
  fullName: Common.Address.Types.RfGarAddressType.PrevIdSpecified
- uid: Common.Address.Types.RfGarAddressType.NextId*
  commentId: Overload:Common.Address.Types.RfGarAddressType.NextId
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_NextId
  name: NextId
  nameWithType: RfGarAddressType.NextId
  fullName: Common.Address.Types.RfGarAddressType.NextId
- uid: Common.Address.Types.RfGarAddressType.NextIdSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.NextIdSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_NextIdSpecified
  name: NextIdSpecified
  nameWithType: RfGarAddressType.NextIdSpecified
  fullName: Common.Address.Types.RfGarAddressType.NextIdSpecified
- uid: Common.Address.Types.RfGarAddressType.StartDate*
  commentId: Overload:Common.Address.Types.RfGarAddressType.StartDate
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_StartDate
  name: StartDate
  nameWithType: RfGarAddressType.StartDate
  fullName: Common.Address.Types.RfGarAddressType.StartDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Common.Address.Types.RfGarAddressType.StartDateSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.StartDateSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_StartDateSpecified
  name: StartDateSpecified
  nameWithType: RfGarAddressType.StartDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.StartDateSpecified
- uid: Common.Address.Types.RfGarAddressType.EndDate*
  commentId: Overload:Common.Address.Types.RfGarAddressType.EndDate
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_EndDate
  name: EndDate
  nameWithType: RfGarAddressType.EndDate
  fullName: Common.Address.Types.RfGarAddressType.EndDate
- uid: Common.Address.Types.RfGarAddressType.EndDateSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.EndDateSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_EndDateSpecified
  name: EndDateSpecified
  nameWithType: RfGarAddressType.EndDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.EndDateSpecified
- uid: Common.Address.Types.RfGarAddressType.UpdateDate*
  commentId: Overload:Common.Address.Types.RfGarAddressType.UpdateDate
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_UpdateDate
  name: UpdateDate
  nameWithType: RfGarAddressType.UpdateDate
  fullName: Common.Address.Types.RfGarAddressType.UpdateDate
- uid: Common.Address.Types.RfGarAddressType.UpdateDateSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.UpdateDateSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_UpdateDateSpecified
  name: UpdateDateSpecified
  nameWithType: RfGarAddressType.UpdateDateSpecified
  fullName: Common.Address.Types.RfGarAddressType.UpdateDateSpecified
- uid: Common.Address.Types.RfGarAddressType.Name*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Name
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Name
  name: Name
  nameWithType: RfGarAddressType.Name
  fullName: Common.Address.Types.RfGarAddressType.Name
- uid: Common.Address.Types.RfGarAddressType.RegionCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.RegionCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_RegionCode
  name: RegionCode
  nameWithType: RfGarAddressType.RegionCode
  fullName: Common.Address.Types.RfGarAddressType.RegionCode
- uid: Common.Address.Types.RfGarAddressType.AreaCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.AreaCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_AreaCode
  name: AreaCode
  nameWithType: RfGarAddressType.AreaCode
  fullName: Common.Address.Types.RfGarAddressType.AreaCode
- uid: Common.Address.Types.RfGarAddressType.CityCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.CityCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_CityCode
  name: CityCode
  nameWithType: RfGarAddressType.CityCode
  fullName: Common.Address.Types.RfGarAddressType.CityCode
- uid: Common.Address.Types.RfGarAddressType.PlaceCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PlaceCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PlaceCode
  name: PlaceCode
  nameWithType: RfGarAddressType.PlaceCode
  fullName: Common.Address.Types.RfGarAddressType.PlaceCode
- uid: Common.Address.Types.RfGarAddressType.PlanCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PlanCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PlanCode
  name: PlanCode
  nameWithType: RfGarAddressType.PlanCode
  fullName: Common.Address.Types.RfGarAddressType.PlanCode
- uid: Common.Address.Types.RfGarAddressType.StreetCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.StreetCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_StreetCode
  name: StreetCode
  nameWithType: RfGarAddressType.StreetCode
  fullName: Common.Address.Types.RfGarAddressType.StreetCode
- uid: Common.Address.Types.RfGarAddressType.OffName*
  commentId: Overload:Common.Address.Types.RfGarAddressType.OffName
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_OffName
  name: OffName
  nameWithType: RfGarAddressType.OffName
  fullName: Common.Address.Types.RfGarAddressType.OffName
- uid: Common.Address.Types.RfGarAddressType.PostalCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PostalCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PostalCode
  name: PostalCode
  nameWithType: RfGarAddressType.PostalCode
  fullName: Common.Address.Types.RfGarAddressType.PostalCode
- uid: Common.Address.Types.RfGarAddressType.IfnsJpCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IfnsJpCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IfnsJpCode
  name: IfnsJpCode
  nameWithType: RfGarAddressType.IfnsJpCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsJpCode
- uid: Common.Address.Types.RfGarAddressType.IfnsJpTerCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IfnsJpTerCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IfnsJpTerCode
  name: IfnsJpTerCode
  nameWithType: RfGarAddressType.IfnsJpTerCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsJpTerCode
- uid: Common.Address.Types.RfGarAddressType.IfnsPpCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IfnsPpCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IfnsPpCode
  name: IfnsPpCode
  nameWithType: RfGarAddressType.IfnsPpCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsPpCode
- uid: Common.Address.Types.RfGarAddressType.IfnsPpTerCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IfnsPpTerCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IfnsPpTerCode
  name: IfnsPpTerCode
  nameWithType: RfGarAddressType.IfnsPpTerCode
  fullName: Common.Address.Types.RfGarAddressType.IfnsPpTerCode
- uid: Common.Address.Types.RfGarAddressType.Okato*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Okato
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Okato
  name: Okato
  nameWithType: RfGarAddressType.Okato
  fullName: Common.Address.Types.RfGarAddressType.Okato
- uid: Common.Address.Types.RfGarAddressType.Oktmo*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Oktmo
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Oktmo
  name: Oktmo
  nameWithType: RfGarAddressType.Oktmo
  fullName: Common.Address.Types.RfGarAddressType.Oktmo
- uid: Common.Address.Types.RfGarAddressType.TypeName*
  commentId: Overload:Common.Address.Types.RfGarAddressType.TypeName
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_TypeName
  name: TypeName
  nameWithType: RfGarAddressType.TypeName
  fullName: Common.Address.Types.RfGarAddressType.TypeName
- uid: Common.Address.Types.RfGarAddressType.Level*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Level
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Level
  name: Level
  nameWithType: RfGarAddressType.Level
  fullName: Common.Address.Types.RfGarAddressType.Level
- uid: Common.Address.Types.RfGarAddressType.Code*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Code
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Code
  name: Code
  nameWithType: RfGarAddressType.Code
  fullName: Common.Address.Types.RfGarAddressType.Code
- uid: Common.Address.Types.RfGarAddressType.PlainCode*
  commentId: Overload:Common.Address.Types.RfGarAddressType.PlainCode
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_PlainCode
  name: PlainCode
  nameWithType: RfGarAddressType.PlainCode
  fullName: Common.Address.Types.RfGarAddressType.PlainCode
- uid: Common.Address.Types.RfGarAddressType.IsActual*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IsActual
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IsActual
  name: IsActual
  nameWithType: RfGarAddressType.IsActual
  fullName: Common.Address.Types.RfGarAddressType.IsActual
- uid: Common.Address.Types.RfGarAddressType.IsActualSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IsActualSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IsActualSpecified
  name: IsActualSpecified
  nameWithType: RfGarAddressType.IsActualSpecified
  fullName: Common.Address.Types.RfGarAddressType.IsActualSpecified
- uid: Common.Address.Types.RfGarAddressType.IsActive*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IsActive
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IsActive
  name: IsActive
  nameWithType: RfGarAddressType.IsActive
  fullName: Common.Address.Types.RfGarAddressType.IsActive
- uid: Common.Address.Types.RfGarAddressType.IsActiveSpecified*
  commentId: Overload:Common.Address.Types.RfGarAddressType.IsActiveSpecified
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_IsActiveSpecified
  name: IsActiveSpecified
  nameWithType: RfGarAddressType.IsActiveSpecified
  fullName: Common.Address.Types.RfGarAddressType.IsActiveSpecified
- uid: Common.Address.Types.RfGarAddressType.OperTypeId*
  commentId: Overload:Common.Address.Types.RfGarAddressType.OperTypeId
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_OperTypeId
  name: OperTypeId
  nameWithType: RfGarAddressType.OperTypeId
  fullName: Common.Address.Types.RfGarAddressType.OperTypeId
- uid: Common.Address.Types.RfGarAddressType.DivType*
  commentId: Overload:Common.Address.Types.RfGarAddressType.DivType
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_DivType
  name: DivType
  nameWithType: RfGarAddressType.DivType
  fullName: Common.Address.Types.RfGarAddressType.DivType
- uid: Common.Address.Types.RfGarAddressType.CadNumber*
  commentId: Overload:Common.Address.Types.RfGarAddressType.CadNumber
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_CadNumber
  name: CadNumber
  nameWithType: RfGarAddressType.CadNumber
  fullName: Common.Address.Types.RfGarAddressType.CadNumber
- uid: Common.Address.Types.RfGarAddressType.Counter*
  commentId: Overload:Common.Address.Types.RfGarAddressType.Counter
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_Counter
  name: Counter
  nameWithType: RfGarAddressType.Counter
  fullName: Common.Address.Types.RfGarAddressType.Counter
- uid: Common.Address.Types.RfGarAddressType.ReestrNumber*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ReestrNumber
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ReestrNumber
  name: ReestrNumber
  nameWithType: RfGarAddressType.ReestrNumber
  fullName: Common.Address.Types.RfGarAddressType.ReestrNumber
- uid: Common.Address.Types.RfGarAddressType.HouseNumber*
  commentId: Overload:Common.Address.Types.RfGarAddressType.HouseNumber
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_HouseNumber
  name: HouseNumber
  nameWithType: RfGarAddressType.HouseNumber
  fullName: Common.Address.Types.RfGarAddressType.HouseNumber
- uid: Common.Address.Types.RfGarAddressType.HouseType*
  commentId: Overload:Common.Address.Types.RfGarAddressType.HouseType
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_HouseType
  name: HouseType
  nameWithType: RfGarAddressType.HouseType
  fullName: Common.Address.Types.RfGarAddressType.HouseType
- uid: Common.Address.Types.RfGarAddressType.AdditionalNumber1*
  commentId: Overload:Common.Address.Types.RfGarAddressType.AdditionalNumber1
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_AdditionalNumber1
  name: AdditionalNumber1
  nameWithType: RfGarAddressType.AdditionalNumber1
  fullName: Common.Address.Types.RfGarAddressType.AdditionalNumber1
- uid: Common.Address.Types.RfGarAddressType.AdditionalType1*
  commentId: Overload:Common.Address.Types.RfGarAddressType.AdditionalType1
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_AdditionalType1
  name: AdditionalType1
  nameWithType: RfGarAddressType.AdditionalType1
  fullName: Common.Address.Types.RfGarAddressType.AdditionalType1
- uid: Common.Address.Types.RfGarAddressType.AdditionalNumber2*
  commentId: Overload:Common.Address.Types.RfGarAddressType.AdditionalNumber2
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_AdditionalNumber2
  name: AdditionalNumber2
  nameWithType: RfGarAddressType.AdditionalNumber2
  fullName: Common.Address.Types.RfGarAddressType.AdditionalNumber2
- uid: Common.Address.Types.RfGarAddressType.AdditionalType2*
  commentId: Overload:Common.Address.Types.RfGarAddressType.AdditionalType2
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_AdditionalType2
  name: AdditionalType2
  nameWithType: RfGarAddressType.AdditionalType2
  fullName: Common.Address.Types.RfGarAddressType.AdditionalType2
- uid: Common.Address.Types.RfGarAddressType.ApartmentNumber*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ApartmentNumber
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ApartmentNumber
  name: ApartmentNumber
  nameWithType: RfGarAddressType.ApartmentNumber
  fullName: Common.Address.Types.RfGarAddressType.ApartmentNumber
- uid: Common.Address.Types.RfGarAddressType.ApartmentType*
  commentId: Overload:Common.Address.Types.RfGarAddressType.ApartmentType
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_ApartmentType
  name: ApartmentType
  nameWithType: RfGarAddressType.ApartmentType
  fullName: Common.Address.Types.RfGarAddressType.ApartmentType
- uid: Common.Address.Types.RfGarAddressType.RoomNumber*
  commentId: Overload:Common.Address.Types.RfGarAddressType.RoomNumber
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_RoomNumber
  name: RoomNumber
  nameWithType: RfGarAddressType.RoomNumber
  fullName: Common.Address.Types.RfGarAddressType.RoomNumber
- uid: Common.Address.Types.RfGarAddressType.RoomType*
  commentId: Overload:Common.Address.Types.RfGarAddressType.RoomType
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_RoomType
  name: RoomType
  nameWithType: RfGarAddressType.RoomType
  fullName: Common.Address.Types.RfGarAddressType.RoomType
- uid: Common.Address.Types.RfGarAddressType.SimpleFullName*
  commentId: Overload:Common.Address.Types.RfGarAddressType.SimpleFullName
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_SimpleFullName
  name: SimpleFullName
  nameWithType: RfGarAddressType.SimpleFullName
  fullName: Common.Address.Types.RfGarAddressType.SimpleFullName
- uid: Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm*
  commentId: Overload:Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_HierarchyFullNameAdm
  name: HierarchyFullNameAdm
  nameWithType: RfGarAddressType.HierarchyFullNameAdm
  fullName: Common.Address.Types.RfGarAddressType.HierarchyFullNameAdm
- uid: Common.Address.Types.RfGarAddressType.HierarchyFullNameMun*
  commentId: Overload:Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
  href: Common.Address.Types.RfGarAddressType.html#Common_Address_Types_RfGarAddressType_HierarchyFullNameMun
  name: HierarchyFullNameMun
  nameWithType: RfGarAddressType.HierarchyFullNameMun
  fullName: Common.Address.Types.RfGarAddressType.HierarchyFullNameMun
